<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_PcVrAKl3EeeGj7EgTaCWlw" name="HW05">
    <eAnnotations xmi:id="_PsUAsKl3EeeGj7EgTaCWlw" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_PsUnwKl3EeeGj7EgTaCWlw" source="codegen">
        <details xmi:id="_PsUnwal3EeeGj7EgTaCWlw" key="codegenDirectory" value="/HW05 copy/src"/>
        <details xmi:id="_QdXqMKl3EeeGj7EgTaCWlw" key="AssociatedSourceCode" value="/HW05 copy/src/controller/Controller.java;2743380521/1;/HW05 copy/src/view/IView2ModelPaintAdapter.java;904419657/1;/HW05 copy/src/model/IModel2ViewAdapter.java;475360960/1;/HW05 copy/src/view/IView2ModelCtrlAdapter.java;2031874134/1;/HW05 copy/src/model/BallModel.java;1809903222/1;/HW05 copy/src/view/MainFrame.java;2630078149/1;/HW05 copy/src/model/IStrategyFac.java;1304931916/1;/HW05 copy/src/model/IUpdateStrategy.java;217857323/1;/HW05 copy/src/model/strategy/BreathingStrategy.java;1159237256/1;/HW05 copy/src/model/strategy/Collide2Strategy.java;508113381/1;/HW05 copy/src/model/strategy/CollideStrategy.java;1006093491/1;/HW05 copy/src/model/strategy/ColorStrategy.java;3339495149/1;/HW05 copy/src/model/strategy/CurveStrategy.java;2874820765/1;/HW05 copy/src/model/strategy/EatStrategy.java;1657880156/1;/HW05 copy/src/model/strategy/HitFlashStrategy.java;3113695884/1;/HW05 copy/src/model/strategy/HitMysteryStrategy.java;1062137426/1;/HW05 copy/src/model/strategy/InfectStrategy.java;1764251690/1;/HW05 copy/src/model/strategy/KillStrategy.java;1409020142/1;/HW05 copy/src/model/strategy/MultiInteractStrategy.java;3265902127/1;/HW05 copy/src/model/strategy/MultiStrategy.java;2712627373/1;/HW05 copy/src/model/strategy/OverlapStrategy.java;24346230/1;/HW05 copy/src/model/strategy/PartyStrategy.java;386049051/1;/HW05 copy/src/model/strategy/SimilarRadiusStrategy.java;596763095/1;/HW05 copy/src/model/strategy/SpawnStrategy.java;3213850405/1;/HW05 copy/src/model/strategy/SpeedingStrategy.java;595059934/1;/HW05 copy/src/model/strategy/StopStrategy.java;6474230/1;/HW05 copy/src/model/strategy/StraightStrategy.java;388534143/1;/HW05 copy/src/model/strategy/SwitchStrategy.java;3642661589/1;/HW05 copy/src/model/strategy/sPathStrategy.java;1001168548/1;/HW05 copy/src/model/IPaintFac.java;1296154555/1;/HW05 copy/src/model/IPaintStrategy.java;1147886264/1;/HW05 copy/src/model/paint/ADecoratorPaintStrategy.java;2073787210/1;/HW05 copy/src/model/paint/APaintStrategy.java;2464550126/1;/HW05 copy/src/model/paint/AnimatePaintStrategy.java;3429360121/1;/HW05 copy/src/model/paint/ImagePaintStrategy.java;298762327/1;/HW05 copy/src/model/paint/MultiPaintStrategy.java;3778085133/1;/HW05 copy/src/model/paint/ShapePaintStrategy.java;895976449/1;/HW05 copy/src/model/paint/strategy/AngryPaintStrategy.java;3067688022/1;/HW05 copy/src/model/paint/strategy/BallPaintStrategy.java;1031649177/1;/HW05 copy/src/model/paint/strategy/EyePaintStrategy.java;375329315/1;/HW05 copy/src/model/paint/strategy/Fish1PaintStrategy.java;3188478023/1;/HW05 copy/src/model/paint/strategy/Fish2PaintStrategy.java;333442160/1;/HW05 copy/src/model/paint/strategy/NiceFishPaintStrategy.java;2847014975/1;/HW05 copy/src/model/paint/strategy/SonicPaintStrategy.java;639967137/1;/HW05 copy/src/model/paint/strategy/SunPaintStrategy.java;2589995859/1;/HW05 copy/src/model/paint/strategy/SwimFishPaintStrategy.java;1178498676/1;/HW05 copy/src/model/paint/shape/EllipseShapeFactory.java;1546530838/1;/HW05 copy/src/model/paint/shape/Fish1PolygonFactory.java;2582637584/1;/HW05 copy/src/model/paint/shape/Fish2PolygonFactory.java;3175796095/1;/HW05 copy/src/model/paint/shape/IShapeFactory.java;1232377946/1;/HW05 copy/src/model/paint/shape/PolygonFactory.java;1267305136/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_QCTe0Kl3EeeGj7EgTaCWlw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_QCTe0al3EeeGj7EgTaCWlw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_QCTe0ql3EeeGj7EgTaCWlw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_QCTe06l3EeeGj7EgTaCWlw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_QCUF4Kl3EeeGj7EgTaCWlw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_QCUF4al3EeeGj7EgTaCWlw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_QCUF4ql3EeeGj7EgTaCWlw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_QCUF46l3EeeGj7EgTaCWlw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_QCUs8Kl3EeeGj7EgTaCWlw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_QCZlcKl3EeeGj7EgTaCWlw" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_QCaMgKl3EeeGj7EgTaCWlw" name="awt">
        <packagedElement xmi:type="uml:Package" xmi:id="_QDMPoKl3EeeGj7EgTaCWlw" name="event">
          <packagedElement xmi:type="uml:Interface" xmi:id="_QGsPkal3EeeGj7EgTaCWlw" name="ActionListener"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_QGtdsKl3EeeGj7EgTaCWlw" name="ActionEvent"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_QGQKsKl3EeeGj7EgTaCWlw" name="Component"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_QGR_4Kl3EeeGj7EgTaCWlw" name="EventQueue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_QGTOAal3EeeGj7EgTaCWlw" name="Graphics"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_QGlh4Kl3EeeGj7EgTaCWlw" name="BorderLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_QGrBcKl3EeeGj7EgTaCWlw" name="Color"/>
        <packagedElement xmi:type="uml:Package" xmi:id="_NwySsKl4EeeGj7EgTaCWlw" name="geom">
          <packagedElement xmi:type="uml:Class" xmi:id="_N1GK8al4EeeGj7EgTaCWlw" name="Point2D"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_hFNUQ6l5EeeGj7EgTaCWlw" name="AffineTransform"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_hFck0Kl5EeeGj7EgTaCWlw" name="Ellipse2D"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_N1Fj4Kl4EeeGj7EgTaCWlw" name="Point"/>
        <packagedElement xmi:type="uml:Package" xmi:id="_hDLT8Kl5EeeGj7EgTaCWlw" name="image">
          <packagedElement xmi:type="uml:Interface" xmi:id="_hFV3Ial5EeeGj7EgTaCWlw" name="ImageObserver"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_hFUB8Kl5EeeGj7EgTaCWlw" name="Graphics2D"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_hFUpAal5EeeGj7EgTaCWlw" name="Image"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_hFVQEKl5EeeGj7EgTaCWlw" name="MediaTracker"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_hFVQEql5EeeGj7EgTaCWlw" name="Toolkit"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_hFaIkKl5EeeGj7EgTaCWlw" name="Shape"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_xMwmoql5EeeGj7EgTaCWlw" name="Polygon"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_QCbaoKl3EeeGj7EgTaCWlw" name="view">
      <packagedElement xmi:type="uml:Interface" xmi:id="_QD1v4Kl3EeeGj7EgTaCWlw" name="IView2ModelPaintAdapter">
        <ownedComment xmi:id="_QIPHsql3EeeGj7EgTaCWlw">
          <body>@author zihanli
 *the interface that enables the view to talk to the model to paint</body>
        </ownedComment>
        <ownedAttribute xmi:id="_QD2-AKl3EeeGj7EgTaCWlw" name="NULL_OBJECT" isLeaf="true" isStatic="true" type="_QD1v4Kl3EeeGj7EgTaCWlw" isReadOnly="true" association="_QIaG0Kl3EeeGj7EgTaCWlw">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_QD3lEKl3EeeGj7EgTaCWlw" value="new IView2ModelPaintAdapter() {&#xA;&#x9;&#x9;public void paint(Graphics g) {&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;}"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_QHCN0Kl3EeeGj7EgTaCWlw" name="paint">
          <ownedParameter xmi:id="_QHCN0al3EeeGj7EgTaCWlw" name="g" type="_QGTOAal3EeeGj7EgTaCWlw"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_QD7PcKl3EeeGj7EgTaCWlw" name="IView2ModelCtrlAdapter">
        <ownedComment xmi:id="_QIPHtal3EeeGj7EgTaCWlw">
          <body>@author zihanli
the interface that enables the view to talk to the model to load a ball or clear balls</body>
        </ownedComment>
        <ownedOperation xmi:id="_QD9rsKl3EeeGj7EgTaCWlw" name="addStrategy">
          <ownedComment xmi:id="_QIPHtql3EeeGj7EgTaCWlw">
            <body>@param classname
	 * tell the model to add a strategyFac</body>
          </ownedComment>
          <ownedParameter xmi:id="_QD9rsal3EeeGj7EgTaCWlw" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_QHEDAal3EeeGj7EgTaCWlw" type="_QHDb8Kl3EeeGj7EgTaCWlw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_QD-50Kl3EeeGj7EgTaCWlw" name="addPaintStrategy">
          <ownedComment xmi:id="_QIPHt6l3EeeGj7EgTaCWlw">
            <body>@param classname
	 * tell the model to add a paint strategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_QD-50al3EeeGj7EgTaCWlw" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_QHF4Mal3EeeGj7EgTaCWlw" type="_QHEDAql3EeeGj7EgTaCWlw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_QD_g4Kl3EeeGj7EgTaCWlw" name="clearBalls">
          <ownedComment xmi:id="_QIPHuKl3EeeGj7EgTaCWlw">
            <body>tell the model to clear all the balls</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_QHGfQKl3EeeGj7EgTaCWlw" name="makeBall">
          <ownedComment xmi:id="_QIPHual3EeeGj7EgTaCWlw">
            <body>@param window
	 * @param selectedItem
	 * tell the model to add a ball</body>
          </ownedComment>
          <ownedParameter xmi:id="_QHGfQal3EeeGj7EgTaCWlw" name="window" type="_QGQKsKl3EeeGj7EgTaCWlw"/>
          <ownedParameter xmi:id="_QHGfQql3EeeGj7EgTaCWlw" name="selectedItem" type="_QHDb8Kl3EeeGj7EgTaCWlw"/>
          <ownedParameter xmi:id="_QHGfQ6l3EeeGj7EgTaCWlw" name="selectedItem1" type="_QHEDAql3EeeGj7EgTaCWlw"/>
        </ownedOperation>
        <ownedOperation xmi:id="_QHHGUKl3EeeGj7EgTaCWlw" name="combineStrategies">
          <ownedComment xmi:id="_QIPuwKl3EeeGj7EgTaCWlw">
            <body>@param s2
	 * @param s1
	 * @return
	 * tell the model to combine two strategies and get the multiStrategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_QHHGUal3EeeGj7EgTaCWlw" name="s2" type="_QHDb8Kl3EeeGj7EgTaCWlw"/>
          <ownedParameter xmi:id="_QHHGUql3EeeGj7EgTaCWlw" name="s1" type="_QHDb8Kl3EeeGj7EgTaCWlw"/>
          <ownedParameter xmi:id="_QHHGU6l3EeeGj7EgTaCWlw" type="_QHDb8Kl3EeeGj7EgTaCWlw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_QHHtYKl3EeeGj7EgTaCWlw" name="switchStrategy">
          <ownedComment xmi:id="_QIPuwal3EeeGj7EgTaCWlw">
            <body>@param newStrategy 
	 * switch the strategy of switchStrategy ball</body>
          </ownedComment>
          <ownedParameter xmi:id="_QHHtYal3EeeGj7EgTaCWlw" name="newStrategy" type="_QHDb8Kl3EeeGj7EgTaCWlw"/>
        </ownedOperation>
        <ownedOperation xmi:id="_QHIUcKl3EeeGj7EgTaCWlw" name="makeSwitchBall">
          <ownedComment xmi:id="_QIPuwql3EeeGj7EgTaCWlw">
            <body>tell model to make a switchStrategy ball using the switchStrategy to update</body>
          </ownedComment>
          <ownedParameter xmi:id="_QHIUcal3EeeGj7EgTaCWlw" name="window" type="_QGQKsKl3EeeGj7EgTaCWlw"/>
          <ownedParameter xmi:id="_QHIUcql3EeeGj7EgTaCWlw" name="s1" type="_QHEDAql3EeeGj7EgTaCWlw"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_QEmk4Kl3EeeGj7EgTaCWlw" name="MainFrame">
        <ownedComment xmi:id="_QIQ85Kl3EeeGj7EgTaCWlw">
          <body>@author ZihanLi, Yiran Wei
 *</body>
        </ownedComment>
        <generalization xmi:id="_QHbPYKl3EeeGj7EgTaCWlw" general="_QGn-Ial3EeeGj7EgTaCWlw"/>
        <ownedAttribute xmi:id="_QHoDsKl3EeeGj7EgTaCWlw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_QHoDsal3EeeGj7EgTaCWlw" value="-9089334382685717126L"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_QHoDsql3EeeGj7EgTaCWlw" name="contentPane" visibility="private" type="_QGpMQKl3EeeGj7EgTaCWlw" association="_QIgNcKl3EeeGj7EgTaCWlw"/>
        <ownedAttribute xmi:id="_QHoqwal3EeeGj7EgTaCWlw" name="_modelCtrlAdapter" visibility="private" type="_QD7PcKl3EeeGj7EgTaCWlw" association="_QIg0gKl3EeeGj7EgTaCWlw"/>
        <ownedAttribute xmi:id="_QHp44Kl3EeeGj7EgTaCWlw" name="_modelPaintAdapter" visibility="private" type="_QD1v4Kl3EeeGj7EgTaCWlw" association="_QIhbkKl3EeeGj7EgTaCWlw">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_QHp44al3EeeGj7EgTaCWlw" value="IView2ModelPaintAdapter.NULL_OBJECT"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_QHqf8al3EeeGj7EgTaCWlw" name="centerpnl" visibility="private" isLeaf="true" type="_QGpMQKl3EeeGj7EgTaCWlw" isReadOnly="true" association="_QIipsKl3EeeGj7EgTaCWlw">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_QHqf8ql3EeeGj7EgTaCWlw" value="new JPanel() {&#xA;&#x9;&#x9;private static final long serialVersionUID = -872444218515942499L;&#xA;&#xA;&#x9;&#x9;/**&#xA;&#x9;&#x9; * Overridden paintComponent method to paint a shape in the panel.&#xA;&#x9;&#x9; * @param g The Graphics object to paint on.&#xA;&#x9;&#x9; **/&#xA;&#x9;&#x9;public void paintComponent(Graphics g) {&#xA;&#x9;&#x9;&#x9;super.paintComponent(g); // Do everything normally done first, e.g. clear the screen.&#xA;&#x9;&#x9;&#x9;_modelPaintAdapter.paint(g);&#xA;&#x9;&#x9;}&#xA;&#x9;}"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_QHrHAal3EeeGj7EgTaCWlw" name="northpnl" visibility="private" isLeaf="true" type="_QGpMQKl3EeeGj7EgTaCWlw" isReadOnly="true" association="_QIjQwal3EeeGj7EgTaCWlw">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_QHrHAql3EeeGj7EgTaCWlw" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_QHruEal3EeeGj7EgTaCWlw" name="btnClearBalls" visibility="private" isLeaf="true" type="_QGrogal3EeeGj7EgTaCWlw" isReadOnly="true" association="_QIj30al3EeeGj7EgTaCWlw">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_QHruEql3EeeGj7EgTaCWlw" value="new JButton(&quot;Clear balls&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_QHsVIal3EeeGj7EgTaCWlw" name="choosePnl" visibility="private" isLeaf="true" type="_QGpMQKl3EeeGj7EgTaCWlw" isReadOnly="true" association="_QIke4al3EeeGj7EgTaCWlw">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_QHsVIql3EeeGj7EgTaCWlw" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_QHs8Mal3EeeGj7EgTaCWlw" name="btnCreateBall" visibility="private" isLeaf="true" type="_QGrogal3EeeGj7EgTaCWlw" isReadOnly="true" association="_QIlF8al3EeeGj7EgTaCWlw">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_QHs8Mql3EeeGj7EgTaCWlw" value="new JButton(&quot;Create a seleted ball&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_QHtjQKl3EeeGj7EgTaCWlw" name="strategy_1" visibility="private" isLeaf="true" type="_QGur0al3EeeGj7EgTaCWlw" isReadOnly="true" association="_QIltAal3EeeGj7EgTaCWlw">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_QHuKUal3EeeGj7EgTaCWlw" value="new JComboBox&lt;TDropListItem>()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_QHuxYal3EeeGj7EgTaCWlw" name="strategy_2" visibility="private" isLeaf="true" type="_QGur0al3EeeGj7EgTaCWlw" isReadOnly="true" association="_QIm7IKl3EeeGj7EgTaCWlw">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_QHvYcal3EeeGj7EgTaCWlw" value="new JComboBox&lt;TDropListItem>()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_QHwmkKl3EeeGj7EgTaCWlw" name="btnCombine" visibility="private" isLeaf="true" type="_QGrogal3EeeGj7EgTaCWlw" isReadOnly="true" association="_QIniMKl3EeeGj7EgTaCWlw">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_QHwmkal3EeeGj7EgTaCWlw" value="new JButton(&quot;Combine!&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_QHxNoKl3EeeGj7EgTaCWlw" name="btnAddList" visibility="private" isLeaf="true" type="_QGrogal3EeeGj7EgTaCWlw" isReadOnly="true" association="_QIoJQal3EeeGj7EgTaCWlw">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_QHxNoal3EeeGj7EgTaCWlw" value="new JButton(&quot;Add to List&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_QHxNo6l3EeeGj7EgTaCWlw" name="switchPnl" visibility="private" isLeaf="true" type="_QGpMQKl3EeeGj7EgTaCWlw" isReadOnly="true" association="_QIowUKl3EeeGj7EgTaCWlw">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_QHx0sKl3EeeGj7EgTaCWlw" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_QHx0sql3EeeGj7EgTaCWlw" name="btnMakeSwitcher" visibility="private" isLeaf="true" type="_QGrogal3EeeGj7EgTaCWlw" isReadOnly="true" association="_QIpXYKl3EeeGj7EgTaCWlw">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_QHx0s6l3EeeGj7EgTaCWlw" value="new JButton(&quot;Make Switcher&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_QHybwal3EeeGj7EgTaCWlw" name="btnSwitch" visibility="private" isLeaf="true" type="_QGrogal3EeeGj7EgTaCWlw" isReadOnly="true" association="_QIp-cKl3EeeGj7EgTaCWlw">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_QHybwql3EeeGj7EgTaCWlw" value="new JButton(&quot;Switch!&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_QHzC0Kl3EeeGj7EgTaCWlw" name="strategyText" visibility="private" isLeaf="true" type="_QGuEwal3EeeGj7EgTaCWlw" isReadOnly="true" association="_QIp-c6l3EeeGj7EgTaCWlw">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_QHzC0al3EeeGj7EgTaCWlw" value="new JTextField()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_QHzp4Kl3EeeGj7EgTaCWlw" name="addPnl" visibility="private" isLeaf="true" type="_QGpMQKl3EeeGj7EgTaCWlw" isReadOnly="true" association="_QIqlgal3EeeGj7EgTaCWlw">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_QHzp4al3EeeGj7EgTaCWlw" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_QH0Q8Kl3EeeGj7EgTaCWlw" name="paintStraPnl" visibility="private" isLeaf="true" type="_QGpMQKl3EeeGj7EgTaCWlw" isReadOnly="true" association="_QIrMkal3EeeGj7EgTaCWlw">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_QH0Q8al3EeeGj7EgTaCWlw" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_QH0Q86l3EeeGj7EgTaCWlw" name="btnAdd" visibility="private" isLeaf="true" type="_QGrogal3EeeGj7EgTaCWlw" isReadOnly="true" association="_QIsasKl3EeeGj7EgTaCWlw">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_QH0Q9Kl3EeeGj7EgTaCWlw" value="new JButton(&quot;add&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_QH04Aal3EeeGj7EgTaCWlw" name="lblStrategy" visibility="private" isLeaf="true" type="_QGv58al3EeeGj7EgTaCWlw" isReadOnly="true" association="_QItBwKl3EeeGj7EgTaCWlw">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_QH04Aql3EeeGj7EgTaCWlw" value="new JLabel(&quot;Paint Strategy&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_QH1fEal3EeeGj7EgTaCWlw" name="PaintStrategyText" visibility="private" isLeaf="true" type="_QGuEwal3EeeGj7EgTaCWlw" isReadOnly="true" association="_QItBw6l3EeeGj7EgTaCWlw">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_QH1fEql3EeeGj7EgTaCWlw" value="new JTextField()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_QH2GIKl3EeeGj7EgTaCWlw" name="paintStrategy" visibility="private" isLeaf="true" type="_QGur0al3EeeGj7EgTaCWlw" isReadOnly="true" association="_QIto0al3EeeGj7EgTaCWlw">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_QH2GIql3EeeGj7EgTaCWlw" value="new JComboBox&lt;TDropListItem1>()"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QINSgKl3EeeGj7EgTaCWlw" name="MainFrame" specification="_QGzkUKl3EeeGj7EgTaCWlw">
          <ownedParameter xmi:id="_QINSgal3EeeGj7EgTaCWlw" name="modelCtrlAdapter" type="_QD7PcKl3EeeGj7EgTaCWlw"/>
          <ownedParameter xmi:id="_QINSgql3EeeGj7EgTaCWlw" name="modelPaintAdapter" type="_QD1v4Kl3EeeGj7EgTaCWlw"/>
          <ownedParameter xmi:id="_QINSg6l3EeeGj7EgTaCWlw" type="_QEmk4Kl3EeeGj7EgTaCWlw" direction="return"/>
          <language>java</language>
          <body>PaintStrategyText.setText(&quot;Ball&quot;);
		PaintStrategyText.setToolTipText(&quot;name of paint strategy&quot;);
		PaintStrategyText.setColumns(10);
		_modelCtrlAdapter = modelCtrlAdapter;
		_modelPaintAdapter = modelPaintAdapter;

		initGUI();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QIN5kKl3EeeGj7EgTaCWlw" name="initGUI" specification="_QEw88Kl3EeeGj7EgTaCWlw">
          <language>java</language>
          <body>setResizable(false);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 845, 426);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		contentPane.setLayout(new BorderLayout(0, 0));
		setContentPane(contentPane);
		centerpnl.setToolTipText(&quot;center panel&quot;);
		centerpnl.setBackground(Color.WHITE);

		contentPane.add(centerpnl, BorderLayout.CENTER);
		northpnl.setToolTipText(&quot;north panel&quot;);
		northpnl.setBackground(Color.YELLOW);

		contentPane.add(northpnl, BorderLayout.NORTH);
		btnClearBalls.setToolTipText(&quot;click here to clear all the balls&quot;);
		btnClearBalls.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				_modelCtrlAdapter.clearBalls();
			}
		});
		addPnl.setLayout(new GridLayout(0, 1, 0, 0));

		northpnl.add(addPnl);
		strategyText.setToolTipText(&quot;name of strategy, both full and abbreviated name is supported&quot;);
		addPnl.add(strategyText);
		strategyText.setText(&quot;Straight&quot;);
		strategyText.setColumns(10);
		btnAddList.setToolTipText(&quot;add strategy to both dropLists&quot;);
		addPnl.add(btnAddList);
		btnAddList.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				TDropListItem o = (TDropListItem) _modelCtrlAdapter.addStrategy(strategyText.getText());
				if (null == o)
					return; // just in case

				strategy_1.insertItemAt(o, 0);
				strategy_2.insertItemAt(o, 0);
			}
		});

		northpnl.add(choosePnl);
		btnCreateBall.setToolTipText(&quot;instantiate a ball with strategy in the upper droplist&quot;);
		btnCreateBall.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				_modelCtrlAdapter.makeBall(centerpnl, strategy_1.getItemAt(strategy_1.getSelectedIndex()),
						paintStrategy.getItemAt(paintStrategy.getSelectedIndex()));
			}
		});
		choosePnl.setLayout(new GridLayout(0, 1, 0, 0));
		choosePnl.add(btnCreateBall);
		strategy_1.setToolTipText(&quot;choose the update strategy&quot;);
		choosePnl.add(strategy_1);
		strategy_2.setToolTipText(&quot;choode the update strategy to combine with the upper one&quot;);
		choosePnl.add(strategy_2);
		btnCombine.setToolTipText(
				&quot;combine both strategies form both droplists to a single strategy that will be added to both droplists&quot;);
		btnCombine.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				TDropListItem o = _modelCtrlAdapter.combineStrategies(
						strategy_1.getItemAt(strategy_1.getSelectedIndex()),
						strategy_2.getItemAt(strategy_2.getSelectedIndex()));
				strategy_1.insertItemAt(o, 0);
				strategy_2.insertItemAt(o, 0);
			}
		});
		choosePnl.add(btnCombine);

		northpnl.add(switchPnl);
		btnMakeSwitcher.setToolTipText(&quot;instantiate a ball that can switch strategies&quot;);
		btnMakeSwitcher.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				_modelCtrlAdapter.makeSwitchBall(centerpnl, paintStrategy.getItemAt(paintStrategy.getSelectedIndex()));
			}
		});
		switchPnl.setLayout(new GridLayout(0, 1, 0, 0));

		switchPnl.add(btnMakeSwitcher);
		btnSwitch.setToolTipText(
				&quot;swith the strategy of all the switchers in the panel to the strategy that is seleted in the upper droplist&quot;);
		btnSwitch.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				_modelCtrlAdapter.switchStrategy(strategy_1.getItemAt(strategy_1.getSelectedIndex()));
			}
		});

		switchPnl.add(btnSwitch);

		northpnl.add(btnClearBalls);

		northpnl.add(paintStraPnl);
		paintStraPnl.setLayout(new GridLayout(0, 1, 0, 0));

		paintStraPnl.add(lblStrategy);

		paintStraPnl.add(PaintStrategyText);
		btnAdd.setToolTipText(&quot;add strategy to below List&quot;);
		btnAdd.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				TDropListItem1 o = (TDropListItem1) _modelCtrlAdapter.addPaintStrategy(PaintStrategyText.getText());
				if (null == o)
					return; // just in case

				paintStrategy.insertItemAt(o, 0);
			}
		});
		paintStraPnl.add(btnAdd);
		paintStrategy.setToolTipText(&quot;choose the paint strategy&quot;);

		paintStraPnl.add(paintStrategy);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QIN5kal3EeeGj7EgTaCWlw" name="update" specification="_QEw88al3EeeGj7EgTaCWlw">
          <language>java</language>
          <body>centerpnl.repaint();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QIN5kql3EeeGj7EgTaCWlw" name="start" specification="_QExkAKl3EeeGj7EgTaCWlw">
          <language>java</language>
          <body>setVisible(true);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_QEw88Kl3EeeGj7EgTaCWlw" name="initGUI" visibility="private" method="_QIN5kKl3EeeGj7EgTaCWlw"/>
        <ownedOperation xmi:id="_QEw88al3EeeGj7EgTaCWlw" name="update" method="_QIN5kal3EeeGj7EgTaCWlw">
          <ownedComment xmi:id="_QIQ85ql3EeeGj7EgTaCWlw">
            <body>call the repaint method to regenerate the picture</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_QExkAKl3EeeGj7EgTaCWlw" name="start" method="_QIN5kql3EeeGj7EgTaCWlw">
          <ownedComment xmi:id="_QIQ856l3EeeGj7EgTaCWlw">
            <body>to set the frame visible.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_QGzkUKl3EeeGj7EgTaCWlw" name="MainFrame" method="_QINSgKl3EeeGj7EgTaCWlw">
          <eAnnotations xmi:id="_QG0LYql3EeeGj7EgTaCWlw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_QG0LY6l3EeeGj7EgTaCWlw" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_QIQ85al3EeeGj7EgTaCWlw">
            <body>Create the frame.</body>
          </ownedComment>
          <ownedParameter xmi:id="_QG0LYKl3EeeGj7EgTaCWlw" name="modelCtrlAdapter" type="_QD7PcKl3EeeGj7EgTaCWlw"/>
          <ownedParameter xmi:id="_QG0LYal3EeeGj7EgTaCWlw" name="modelPaintAdapter" type="_QD1v4Kl3EeeGj7EgTaCWlw"/>
          <ownedParameter xmi:id="_QG0LZKl3EeeGj7EgTaCWlw" type="_QEmk4Kl3EeeGj7EgTaCWlw" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_QHDb8Kl3EeeGj7EgTaCWlw" name="TDropListItem"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_QHEDAql3EeeGj7EgTaCWlw" name="TDropListItem1"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_QIaG0Kl3EeeGj7EgTaCWlw" name="" memberEnd="_QIaG0al3EeeGj7EgTaCWlw _QD2-AKl3EeeGj7EgTaCWlw">
        <ownedEnd xmi:id="_QIaG0al3EeeGj7EgTaCWlw" name="" type="_QD1v4Kl3EeeGj7EgTaCWlw" association="_QIaG0Kl3EeeGj7EgTaCWlw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_QIgNcKl3EeeGj7EgTaCWlw" name="" memberEnd="_QIgNcal3EeeGj7EgTaCWlw _QHoDsql3EeeGj7EgTaCWlw">
        <ownedEnd xmi:id="_QIgNcal3EeeGj7EgTaCWlw" name="" type="_QEmk4Kl3EeeGj7EgTaCWlw" association="_QIgNcKl3EeeGj7EgTaCWlw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_QIg0gKl3EeeGj7EgTaCWlw" name="" memberEnd="_QIg0gal3EeeGj7EgTaCWlw _QHoqwal3EeeGj7EgTaCWlw">
        <ownedEnd xmi:id="_QIg0gal3EeeGj7EgTaCWlw" name="" type="_QEmk4Kl3EeeGj7EgTaCWlw" association="_QIg0gKl3EeeGj7EgTaCWlw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_QIhbkKl3EeeGj7EgTaCWlw" name="" memberEnd="_QIhbkal3EeeGj7EgTaCWlw _QHp44Kl3EeeGj7EgTaCWlw">
        <ownedEnd xmi:id="_QIhbkal3EeeGj7EgTaCWlw" name="" type="_QEmk4Kl3EeeGj7EgTaCWlw" association="_QIhbkKl3EeeGj7EgTaCWlw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_QIipsKl3EeeGj7EgTaCWlw" name="" memberEnd="_QIipsal3EeeGj7EgTaCWlw _QHqf8al3EeeGj7EgTaCWlw">
        <ownedEnd xmi:id="_QIipsal3EeeGj7EgTaCWlw" name="" type="_QEmk4Kl3EeeGj7EgTaCWlw" association="_QIipsKl3EeeGj7EgTaCWlw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_QIjQwal3EeeGj7EgTaCWlw" name="" memberEnd="_QIjQwql3EeeGj7EgTaCWlw _QHrHAal3EeeGj7EgTaCWlw">
        <ownedEnd xmi:id="_QIjQwql3EeeGj7EgTaCWlw" name="" type="_QEmk4Kl3EeeGj7EgTaCWlw" association="_QIjQwal3EeeGj7EgTaCWlw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_QIj30al3EeeGj7EgTaCWlw" name="" memberEnd="_QIj30ql3EeeGj7EgTaCWlw _QHruEal3EeeGj7EgTaCWlw">
        <ownedEnd xmi:id="_QIj30ql3EeeGj7EgTaCWlw" name="" type="_QEmk4Kl3EeeGj7EgTaCWlw" association="_QIj30al3EeeGj7EgTaCWlw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_QIke4al3EeeGj7EgTaCWlw" name="" memberEnd="_QIke4ql3EeeGj7EgTaCWlw _QHsVIal3EeeGj7EgTaCWlw">
        <ownedEnd xmi:id="_QIke4ql3EeeGj7EgTaCWlw" name="" type="_QEmk4Kl3EeeGj7EgTaCWlw" association="_QIke4al3EeeGj7EgTaCWlw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_QIlF8al3EeeGj7EgTaCWlw" name="" memberEnd="_QIlF8ql3EeeGj7EgTaCWlw _QHs8Mal3EeeGj7EgTaCWlw">
        <ownedEnd xmi:id="_QIlF8ql3EeeGj7EgTaCWlw" name="" type="_QEmk4Kl3EeeGj7EgTaCWlw" association="_QIlF8al3EeeGj7EgTaCWlw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_QIltAal3EeeGj7EgTaCWlw" name="" memberEnd="_QIltAql3EeeGj7EgTaCWlw _QHtjQKl3EeeGj7EgTaCWlw">
        <ownedEnd xmi:id="_QIltAql3EeeGj7EgTaCWlw" name="" type="_QEmk4Kl3EeeGj7EgTaCWlw" association="_QIltAal3EeeGj7EgTaCWlw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_QIm7IKl3EeeGj7EgTaCWlw" name="" memberEnd="_QIm7Ial3EeeGj7EgTaCWlw _QHuxYal3EeeGj7EgTaCWlw">
        <ownedEnd xmi:id="_QIm7Ial3EeeGj7EgTaCWlw" name="" type="_QEmk4Kl3EeeGj7EgTaCWlw" association="_QIm7IKl3EeeGj7EgTaCWlw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_QIniMKl3EeeGj7EgTaCWlw" name="" memberEnd="_QIniMal3EeeGj7EgTaCWlw _QHwmkKl3EeeGj7EgTaCWlw">
        <ownedEnd xmi:id="_QIniMal3EeeGj7EgTaCWlw" name="" type="_QEmk4Kl3EeeGj7EgTaCWlw" association="_QIniMKl3EeeGj7EgTaCWlw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_QIoJQal3EeeGj7EgTaCWlw" name="" memberEnd="_QIoJQql3EeeGj7EgTaCWlw _QHxNoKl3EeeGj7EgTaCWlw">
        <ownedEnd xmi:id="_QIoJQql3EeeGj7EgTaCWlw" name="" type="_QEmk4Kl3EeeGj7EgTaCWlw" association="_QIoJQal3EeeGj7EgTaCWlw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_QIowUKl3EeeGj7EgTaCWlw" name="" memberEnd="_QIowUal3EeeGj7EgTaCWlw _QHxNo6l3EeeGj7EgTaCWlw">
        <ownedEnd xmi:id="_QIowUal3EeeGj7EgTaCWlw" name="" type="_QEmk4Kl3EeeGj7EgTaCWlw" association="_QIowUKl3EeeGj7EgTaCWlw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_QIpXYKl3EeeGj7EgTaCWlw" name="" memberEnd="_QIpXYal3EeeGj7EgTaCWlw _QHx0sql3EeeGj7EgTaCWlw">
        <ownedEnd xmi:id="_QIpXYal3EeeGj7EgTaCWlw" name="" type="_QEmk4Kl3EeeGj7EgTaCWlw" association="_QIpXYKl3EeeGj7EgTaCWlw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_QIp-cKl3EeeGj7EgTaCWlw" name="" memberEnd="_QIp-cal3EeeGj7EgTaCWlw _QHybwal3EeeGj7EgTaCWlw">
        <ownedEnd xmi:id="_QIp-cal3EeeGj7EgTaCWlw" name="" type="_QEmk4Kl3EeeGj7EgTaCWlw" association="_QIp-cKl3EeeGj7EgTaCWlw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_QIp-c6l3EeeGj7EgTaCWlw" name="" memberEnd="_QIp-dKl3EeeGj7EgTaCWlw _QHzC0Kl3EeeGj7EgTaCWlw">
        <ownedEnd xmi:id="_QIp-dKl3EeeGj7EgTaCWlw" name="" type="_QEmk4Kl3EeeGj7EgTaCWlw" association="_QIp-c6l3EeeGj7EgTaCWlw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_QIqlgal3EeeGj7EgTaCWlw" name="" memberEnd="_QIqlgql3EeeGj7EgTaCWlw _QHzp4Kl3EeeGj7EgTaCWlw">
        <ownedEnd xmi:id="_QIqlgql3EeeGj7EgTaCWlw" name="" type="_QEmk4Kl3EeeGj7EgTaCWlw" association="_QIqlgal3EeeGj7EgTaCWlw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_QIrMkal3EeeGj7EgTaCWlw" name="" memberEnd="_QIrMkql3EeeGj7EgTaCWlw _QH0Q8Kl3EeeGj7EgTaCWlw">
        <ownedEnd xmi:id="_QIrMkql3EeeGj7EgTaCWlw" name="" type="_QEmk4Kl3EeeGj7EgTaCWlw" association="_QIrMkal3EeeGj7EgTaCWlw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_QIsasKl3EeeGj7EgTaCWlw" name="" memberEnd="_QIsasal3EeeGj7EgTaCWlw _QH0Q86l3EeeGj7EgTaCWlw">
        <ownedEnd xmi:id="_QIsasal3EeeGj7EgTaCWlw" name="" type="_QEmk4Kl3EeeGj7EgTaCWlw" association="_QIsasKl3EeeGj7EgTaCWlw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_QItBwKl3EeeGj7EgTaCWlw" name="" memberEnd="_QItBwal3EeeGj7EgTaCWlw _QH04Aal3EeeGj7EgTaCWlw">
        <ownedEnd xmi:id="_QItBwal3EeeGj7EgTaCWlw" name="" type="_QEmk4Kl3EeeGj7EgTaCWlw" association="_QItBwKl3EeeGj7EgTaCWlw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_QItBw6l3EeeGj7EgTaCWlw" name="" memberEnd="_QItBxKl3EeeGj7EgTaCWlw _QH1fEal3EeeGj7EgTaCWlw">
        <ownedEnd xmi:id="_QItBxKl3EeeGj7EgTaCWlw" name="" type="_QEmk4Kl3EeeGj7EgTaCWlw" association="_QItBw6l3EeeGj7EgTaCWlw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_QIto0al3EeeGj7EgTaCWlw" name="" memberEnd="_QIto0ql3EeeGj7EgTaCWlw _QH2GIKl3EeeGj7EgTaCWlw">
        <ownedEnd xmi:id="_QIto0ql3EeeGj7EgTaCWlw" name="" type="_QEmk4Kl3EeeGj7EgTaCWlw" association="_QIto0al3EeeGj7EgTaCWlw"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_QCfFAKl3EeeGj7EgTaCWlw" name="model">
      <packagedElement xmi:type="uml:Package" xmi:id="_QC1qUql3EeeGj7EgTaCWlw" name="balls">
        <packagedElement xmi:type="uml:Class" xmi:id="_QGbJ0al3EeeGj7EgTaCWlw" name="Ball"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_QC2RYKl3EeeGj7EgTaCWlw" name="paint">
        <packagedElement xmi:type="uml:Package" xmi:id="_QC2RYal3EeeGj7EgTaCWlw" name="strategy">
          <packagedElement xmi:type="uml:Class" xmi:id="_QGbw4al3EeeGj7EgTaCWlw" name="BallPaintStrategy">
            <ownedComment xmi:id="_hF4ptal5EeeGj7EgTaCWlw">
              <body>@author zihanli
Paint strategy that paints a filled circle with the Ball's radius.
The class demonstrates a direct implementation of IPaintStrategy.
 *</body>
            </ownedComment>
            <interfaceRealization xmi:id="_hFck0ql5EeeGj7EgTaCWlw" client="_QGbw4al3EeeGj7EgTaCWlw" supplier="_QHT6oKl3EeeGj7EgTaCWlw" contract="_QHT6oKl3EeeGj7EgTaCWlw"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hF1mbal5EeeGj7EgTaCWlw" name="paint" specification="_hFdL4Kl5EeeGj7EgTaCWlw">
              <ownedParameter xmi:id="_hF1mbql5EeeGj7EgTaCWlw" name="g" type="_QGTOAal3EeeGj7EgTaCWlw"/>
              <ownedParameter xmi:id="_hF1mb6l5EeeGj7EgTaCWlw" name="host" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
              <language>java</language>
              <body>int radius = (int) host.getRadius();
		Point location = host.getLocation();
		Ellipse2D circle = new Ellipse2D.Double(location.x - radius, location.y - radius, 2 * radius, 2 * radius);
		g.setColor(host.getColor());
		((Graphics2D) g).fill(circle);

	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_hFdL4Kl5EeeGj7EgTaCWlw" name="paint" method="_hF1mbal5EeeGj7EgTaCWlw">
              <ownedParameter xmi:id="_hFdL4al5EeeGj7EgTaCWlw" name="g" type="_QGTOAal3EeeGj7EgTaCWlw"/>
              <ownedParameter xmi:id="_hFdL4ql5EeeGj7EgTaCWlw" name="host" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            </ownedOperation>
            <ownedOperation xmi:id="_hFdy8Kl5EeeGj7EgTaCWlw" name="init">
              <ownedParameter xmi:id="_hFdy8al5EeeGj7EgTaCWlw" name="host" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_hEAaYKl5EeeGj7EgTaCWlw" name="AngryPaintStrategy">
            <ownedComment xmi:id="_hF4ptKl5EeeGj7EgTaCWlw">
              <body>@author zihanli
Paint strategy that paints a angry emoji as its image.</body>
            </ownedComment>
            <generalization xmi:id="_hFb9wKl5EeeGj7EgTaCWlw" general="_hD33gKl5EeeGj7EgTaCWlw"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hF1ma6l5EeeGj7EgTaCWlw" name="AngryPaintStrategy" specification="_hEAaYal5EeeGj7EgTaCWlw">
              <ownedParameter xmi:id="_hF1mbKl5EeeGj7EgTaCWlw" type="_hEAaYKl5EeeGj7EgTaCWlw" direction="return"/>
              <language>java</language>
              <body>super(new AffineTransform(), &quot;image/angry.jpg&quot;, 0.75);
		// TODO Auto-generated constructor stub

	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_hEAaYal5EeeGj7EgTaCWlw" name="AngryPaintStrategy" method="_hF1ma6l5EeeGj7EgTaCWlw">
              <eAnnotations xmi:id="_hEBBcKl5EeeGj7EgTaCWlw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_hEBBcal5EeeGj7EgTaCWlw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_hEBBcql5EeeGj7EgTaCWlw" type="_hEAaYKl5EeeGj7EgTaCWlw" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_hEC2oKl5EeeGj7EgTaCWlw" name="EyePaintStrategy">
            <ownedComment xmi:id="_hF4ptql5EeeGj7EgTaCWlw">
              <body>@author zihanli
the strategy to paint an circle that always be black</body>
            </ownedComment>
            <generalization xmi:id="_hFfBEKl5EeeGj7EgTaCWlw" general="_hDwiwKl5EeeGj7EgTaCWlw"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hF2NcKl5EeeGj7EgTaCWlw" name="EyePaintStrategy" specification="_hEDdsKl5EeeGj7EgTaCWlw">
              <ownedParameter xmi:id="_hF2Ncal5EeeGj7EgTaCWlw" type="_hEC2oKl5EeeGj7EgTaCWlw" direction="return"/>
              <language>java</language>
              <body>super(new AffineTransform(), new ShapePaintStrategy(new AffineTransform(),
				EllipseShapeFactory.Singleton.makeShape(2.0 / 5, 0, 0.1, 0.1)));
		// TODO Auto-generated constructor stub
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hF2Ncql5EeeGj7EgTaCWlw" name="paintXfrm" specification="_hFtqkql5EeeGj7EgTaCWlw">
              <ownedParameter xmi:id="_hF2Nc6l5EeeGj7EgTaCWlw" name="g" type="_QGTOAal3EeeGj7EgTaCWlw"/>
              <ownedParameter xmi:id="_hF2NdKl5EeeGj7EgTaCWlw" name="host" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
              <ownedParameter xmi:id="_hF2Ndal5EeeGj7EgTaCWlw" name="at" type="_hFNUQ6l5EeeGj7EgTaCWlw"/>
              <language>java</language>
              <body>g.setColor(Color.black);
		getStrategy().paintXfrm(g, host, at);
		g.setColor(host.getColor());

	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_hEDdsKl5EeeGj7EgTaCWlw" name="EyePaintStrategy" method="_hF2NcKl5EeeGj7EgTaCWlw">
              <eAnnotations xmi:id="_hEDdsal5EeeGj7EgTaCWlw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_hEDdsql5EeeGj7EgTaCWlw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_hEDds6l5EeeGj7EgTaCWlw" type="_hEC2oKl5EeeGj7EgTaCWlw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_hFtqkql5EeeGj7EgTaCWlw" name="paintXfrm" method="_hF2Ncql5EeeGj7EgTaCWlw">
              <ownedParameter xmi:id="_hFtqk6l5EeeGj7EgTaCWlw" name="g" type="_QGTOAal3EeeGj7EgTaCWlw"/>
              <ownedParameter xmi:id="_hFtqlKl5EeeGj7EgTaCWlw" name="host" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
              <ownedParameter xmi:id="_hFtqlal5EeeGj7EgTaCWlw" name="at" type="_hFNUQ6l5EeeGj7EgTaCWlw"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_hEEr0Kl5EeeGj7EgTaCWlw" name="Fish1PaintStrategy">
            <ownedComment xmi:id="_hF4pt6l5EeeGj7EgTaCWlw">
              <body>@author zihanli
 *Paint strategy that paints a fish-shaped Polygon generated by a Fish1PolyfonFactory</body>
            </ownedComment>
            <generalization xmi:id="_hFfoIal5EeeGj7EgTaCWlw" general="_hD9XEKl5EeeGj7EgTaCWlw"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hF2Ndql5EeeGj7EgTaCWlw" name="Fish1PaintStrategy" specification="_hEFS4Kl5EeeGj7EgTaCWlw">
              <ownedParameter xmi:id="_hF2Nd6l5EeeGj7EgTaCWlw" type="_hEEr0Kl5EeeGj7EgTaCWlw" direction="return"/>
              <language>java</language>
              <body>super(new AffineTransform(), new Fish1PolygonFactory().makeShape(0, 0, 1, 1));
		// TODO Auto-generated constructor stub
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_hEFS4Kl5EeeGj7EgTaCWlw" name="Fish1PaintStrategy" method="_hF2Ndql5EeeGj7EgTaCWlw">
              <eAnnotations xmi:id="_hEFS4al5EeeGj7EgTaCWlw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_hEFS4ql5EeeGj7EgTaCWlw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_hEFS46l5EeeGj7EgTaCWlw" type="_hEEr0Kl5EeeGj7EgTaCWlw" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_hEF58Kl5EeeGj7EgTaCWlw" name="Fish2PaintStrategy">
            <ownedComment xmi:id="_hF4puKl5EeeGj7EgTaCWlw">
              <body>@author zihanli
Paint strategy that paints a fish-shaped Polygon generated by a Fish1PolyfonFactory.</body>
            </ownedComment>
            <generalization xmi:id="_hFgPMal5EeeGj7EgTaCWlw" general="_hD9XEKl5EeeGj7EgTaCWlw"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hF2NeKl5EeeGj7EgTaCWlw" name="Fish2PaintStrategy" specification="_hEGhAKl5EeeGj7EgTaCWlw">
              <ownedParameter xmi:id="_hF2Neal5EeeGj7EgTaCWlw" type="_hEF58Kl5EeeGj7EgTaCWlw" direction="return"/>
              <language>java</language>
              <body>super(new AffineTransform(), new Fish2PolygonFactory().makeShape(0, 0, 1, 1));
		// TODO Auto-generated constructor stub
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_hEGhAKl5EeeGj7EgTaCWlw" name="Fish2PaintStrategy" method="_hF2NeKl5EeeGj7EgTaCWlw">
              <eAnnotations xmi:id="_hEGhAal5EeeGj7EgTaCWlw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_hEGhAql5EeeGj7EgTaCWlw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_hEGhA6l5EeeGj7EgTaCWlw" type="_hEF58Kl5EeeGj7EgTaCWlw" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_hEHIEKl5EeeGj7EgTaCWlw" name="NiceFishPaintStrategy">
            <ownedComment xmi:id="_hF4pual5EeeGj7EgTaCWlw">
              <body>@author zihanli
Subclass of MultiPaintStrategy that uses a Fish1PaintStrategy
 and an EyePaintStrategy to paint a swimming fish shape that has an eye.</body>
            </ownedComment>
            <generalization xmi:id="_hFhdUal5EeeGj7EgTaCWlw" general="_hD660Kl5EeeGj7EgTaCWlw"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hF2Neql5EeeGj7EgTaCWlw" name="NiceFishPaintStrategy" specification="_hEHIEal5EeeGj7EgTaCWlw">
              <ownedParameter xmi:id="_hF2Ne6l5EeeGj7EgTaCWlw" type="_hEHIEKl5EeeGj7EgTaCWlw" direction="return"/>
              <language>java</language>
              <body>super(new AffineTransform(), new SwimFishPaintStrategy(), new EyePaintStrategy());
		// TODO Auto-generated constructor stub
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hF20gKl5EeeGj7EgTaCWlw" name="paintCfg" specification="_hFgPMql5EeeGj7EgTaCWlw">
              <ownedParameter xmi:id="_hF20gal5EeeGj7EgTaCWlw" name="g" type="_QGTOAal3EeeGj7EgTaCWlw"/>
              <ownedParameter xmi:id="_hF20gql5EeeGj7EgTaCWlw" name="host" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
              <language>java</language>
              <body>super.paintCfg(g, host);
		if (Math.abs(Math.atan2(host.getVel().y, host.getVel().x)) > Math.PI / 2.0) {
			getAt().scale(1.0, -1.0);

		}

	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_hEHIEal5EeeGj7EgTaCWlw" name="NiceFishPaintStrategy" method="_hF2Neql5EeeGj7EgTaCWlw">
              <eAnnotations xmi:id="_hEHvIKl5EeeGj7EgTaCWlw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_hEHvIal5EeeGj7EgTaCWlw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_hEHvIql5EeeGj7EgTaCWlw" type="_hEHIEKl5EeeGj7EgTaCWlw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_hFgPMql5EeeGj7EgTaCWlw" name="paintCfg" method="_hF20gKl5EeeGj7EgTaCWlw">
              <ownedParameter xmi:id="_hFgPM6l5EeeGj7EgTaCWlw" name="g" type="_QGTOAal3EeeGj7EgTaCWlw"/>
              <ownedParameter xmi:id="_hFgPNKl5EeeGj7EgTaCWlw" name="host" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_hEIWMKl5EeeGj7EgTaCWlw" name="SonicPaintStrategy">
            <ownedComment xmi:id="_hF4puql5EeeGj7EgTaCWlw">
              <body>@author zihanli
Paint strategy that paints a Sonic animate.
 *</body>
            </ownedComment>
            <generalization xmi:id="_hFiEZal5EeeGj7EgTaCWlw" general="_hD33gKl5EeeGj7EgTaCWlw"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hF20g6l5EeeGj7EgTaCWlw" name="SonicPaintStrategy" specification="_hEI9QKl5EeeGj7EgTaCWlw">
              <ownedParameter xmi:id="_hF20hKl5EeeGj7EgTaCWlw" type="_hEIWMKl5EeeGj7EgTaCWlw" direction="return"/>
              <language>java</language>
              <body>super(new AffineTransform(), &quot;image/Sonic_animate.gif&quot;, 0.75);
		// TODO Auto-generated constructor stub

	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hF20hal5EeeGj7EgTaCWlw" name="paintCfg" specification="_hFhdUql5EeeGj7EgTaCWlw">
              <ownedParameter xmi:id="_hF20hql5EeeGj7EgTaCWlw" name="g" type="_QGTOAal3EeeGj7EgTaCWlw"/>
              <ownedParameter xmi:id="_hF20h6l5EeeGj7EgTaCWlw" name="host" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
              <language>java</language>
              <body>super.paintCfg(g, host);
		if (Math.abs(Math.atan2(host.getVel().y, host.getVel().x)) > Math.PI / 2.0) {
			getAt().scale(1.0, -1.0);

		}

	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_hEI9QKl5EeeGj7EgTaCWlw" name="SonicPaintStrategy" method="_hF20g6l5EeeGj7EgTaCWlw">
              <eAnnotations xmi:id="_hEI9Qal5EeeGj7EgTaCWlw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_hEI9Qql5EeeGj7EgTaCWlw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_hEI9Q6l5EeeGj7EgTaCWlw" type="_hEIWMKl5EeeGj7EgTaCWlw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_hFhdUql5EeeGj7EgTaCWlw" name="paintCfg" method="_hF20hal5EeeGj7EgTaCWlw">
              <ownedParameter xmi:id="_hFiEYKl5EeeGj7EgTaCWlw" name="g" type="_QGTOAal3EeeGj7EgTaCWlw"/>
              <ownedParameter xmi:id="_hFiEYal5EeeGj7EgTaCWlw" name="host" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_hEKLYKl5EeeGj7EgTaCWlw" name="SunPaintStrategy">
            <ownedComment xmi:id="_hF4pu6l5EeeGj7EgTaCWlw">
              <body>@author zihanli
Paint strategy that paints a sun as its image.</body>
            </ownedComment>
            <generalization xmi:id="_hFjSgql5EeeGj7EgTaCWlw" general="_hD33gKl5EeeGj7EgTaCWlw"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hF20iKl5EeeGj7EgTaCWlw" name="SunPaintStrategy" specification="_hEKLYal5EeeGj7EgTaCWlw">
              <ownedParameter xmi:id="_hF20ial5EeeGj7EgTaCWlw" type="_hEKLYKl5EeeGj7EgTaCWlw" direction="return"/>
              <language>java</language>
              <body>super(new AffineTransform(), &quot;image/sun.jpg&quot;, 0.75);
		// TODO Auto-generated constructor stub

	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hF20iql5EeeGj7EgTaCWlw" name="paintCfg" specification="_hFircKl5EeeGj7EgTaCWlw">
              <ownedParameter xmi:id="_hF20i6l5EeeGj7EgTaCWlw" name="g" type="_QGTOAal3EeeGj7EgTaCWlw"/>
              <ownedParameter xmi:id="_hF20jKl5EeeGj7EgTaCWlw" name="host" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
              <language>java</language>
              <body>super.paintCfg(g, host);
		if (Math.abs(Math.atan2(host.getVel().y, host.getVel().x)) > Math.PI / 2.0) {
			getAt().scale(1.0, -1.0);

		}

	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_hEKLYal5EeeGj7EgTaCWlw" name="SunPaintStrategy" method="_hF20iKl5EeeGj7EgTaCWlw">
              <eAnnotations xmi:id="_hEKLYql5EeeGj7EgTaCWlw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_hEKLY6l5EeeGj7EgTaCWlw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_hEKycKl5EeeGj7EgTaCWlw" type="_hEKLYKl5EeeGj7EgTaCWlw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_hFircKl5EeeGj7EgTaCWlw" name="paintCfg" method="_hF20iql5EeeGj7EgTaCWlw">
              <ownedParameter xmi:id="_hFircal5EeeGj7EgTaCWlw" name="g" type="_QGTOAal3EeeGj7EgTaCWlw"/>
              <ownedParameter xmi:id="_hFircql5EeeGj7EgTaCWlw" name="host" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_hELZgKl5EeeGj7EgTaCWlw" name="SwimFishPaintStrategy">
            <ownedComment xmi:id="_hF4pvKl5EeeGj7EgTaCWlw">
              <body>@author zihanli
Subclass of AnimatePaintStrategy that alternates between a Fish1PaintStrategy and a Fish2PaintStrategy.</body>
            </ownedComment>
            <generalization xmi:id="_hFjSg6l5EeeGj7EgTaCWlw" general="_hD1bQKl5EeeGj7EgTaCWlw"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hF20jal5EeeGj7EgTaCWlw" name="SwimFishPaintStrategy" specification="_hELZgal5EeeGj7EgTaCWlw">
              <ownedParameter xmi:id="_hF20jql5EeeGj7EgTaCWlw" type="_hELZgKl5EeeGj7EgTaCWlw" direction="return"/>
              <language>java</language>
              <body>super(new AffineTransform(), new Fish1PaintStrategy(), new Fish2PaintStrategy());
		// TODO Auto-generated constructor stub
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_hELZgal5EeeGj7EgTaCWlw" name="SwimFishPaintStrategy" method="_hF20jal5EeeGj7EgTaCWlw">
              <eAnnotations xmi:id="_hEMAkKl5EeeGj7EgTaCWlw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_hEMAkal5EeeGj7EgTaCWlw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_hEMAkql5EeeGj7EgTaCWlw" type="_hELZgKl5EeeGj7EgTaCWlw" direction="return"/>
            </ownedOperation>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_hDbLkKl5EeeGj7EgTaCWlw" name="shape">
          <packagedElement xmi:type="uml:Class" xmi:id="_hFeaAKl5EeeGj7EgTaCWlw" name="EllipseShapeFactory">
            <ownedComment xmi:id="_xM2tRql5EeeGj7EgTaCWlw">
              <body>@author zihanli
Concrete shape factory that instantiates Ellipse2D.Double shapes.
 *</body>
            </ownedComment>
            <ownedAttribute xmi:id="_xMzp8Kl5EeeGj7EgTaCWlw" name="Singleton" isStatic="true" type="_hFeaAKl5EeeGj7EgTaCWlw" association="_xM37YKl5EeeGj7EgTaCWlw">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_xM0RAKl5EeeGj7EgTaCWlw" value="new EllipseShapeFactory()"/>
            </ownedAttribute>
            <interfaceRealization xmi:id="_xMvYgKl5EeeGj7EgTaCWlw" client="_hFeaAKl5EeeGj7EgTaCWlw" supplier="_xMdEo6l5EeeGj7EgTaCWlw" contract="_xMdEo6l5EeeGj7EgTaCWlw"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xM1fIal5EeeGj7EgTaCWlw" name="makeShape" specification="_xMaBUKl5EeeGj7EgTaCWlw">
              <ownedParameter xmi:id="_xM1fIql5EeeGj7EgTaCWlw" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_xM1fI6l5EeeGj7EgTaCWlw" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_xM1fJKl5EeeGj7EgTaCWlw" name="xScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_xM1fJal5EeeGj7EgTaCWlw" name="yScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_xM1fJql5EeeGj7EgTaCWlw" type="_hFaIkKl5EeeGj7EgTaCWlw" direction="return"/>
              <language>java</language>
              <body>// TODO Auto-generated method stub
		Ellipse2D ellipse = new Ellipse2D.Double(x - xScale / 2, y - yScale / 2, xScale, yScale);

		return ellipse;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_xMaBUKl5EeeGj7EgTaCWlw" name="makeShape" method="_xM1fIal5EeeGj7EgTaCWlw">
              <ownedParameter xmi:id="_xMaBUal5EeeGj7EgTaCWlw" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_xMaBUql5EeeGj7EgTaCWlw" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_xMaBU6l5EeeGj7EgTaCWlw" name="xScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_xMaBVKl5EeeGj7EgTaCWlw" name="yScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_xMvYgal5EeeGj7EgTaCWlw" type="_hFaIkKl5EeeGj7EgTaCWlw" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_hFfBEal5EeeGj7EgTaCWlw" name="Fish1PolygonFactory">
            <ownedComment xmi:id="_xM2tR6l5EeeGj7EgTaCWlw">
              <body>@author zihanli
Concrete PolygonFactory that creates fish-shaped Polygons that have an open mouth.</body>
            </ownedComment>
            <generalization xmi:id="_xMv_kKl5EeeGj7EgTaCWlw" general="_xMeSwKl5EeeGj7EgTaCWlw"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xM2GMKl5EeeGj7EgTaCWlw" name="Fish1PolygonFactory" specification="_xMb2gKl5EeeGj7EgTaCWlw">
              <ownedParameter xmi:id="_xM2GMal5EeeGj7EgTaCWlw" type="_hFfBEal5EeeGj7EgTaCWlw" direction="return"/>
              <language>java</language>
              <body>super(new AffineTransform(), 0.2, new Point(4, 0), new Point(5, 1), new Point(0, 2), new Point(-4, 0),
				new Point(-5, 2), new Point(-5, -2), new Point(-4, 0), new Point(0, -2), new Point(5, -1));
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_xMb2gKl5EeeGj7EgTaCWlw" name="Fish1PolygonFactory" method="_xM2GMKl5EeeGj7EgTaCWlw">
              <eAnnotations xmi:id="_xMb2gal5EeeGj7EgTaCWlw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_xMb2gql5EeeGj7EgTaCWlw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_xMb2g6l5EeeGj7EgTaCWlw" type="_hFfBEal5EeeGj7EgTaCWlw" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_hFfoIql5EeeGj7EgTaCWlw" name="Fish2PolygonFactory">
            <ownedComment xmi:id="_xM2tSKl5EeeGj7EgTaCWlw">
              <body>@author zihanli
Concrete PolygonFactory that creates fish-shaped Polygons that have a closed mouth.
 *</body>
            </ownedComment>
            <generalization xmi:id="_xMwmoKl5EeeGj7EgTaCWlw" general="_xMeSwKl5EeeGj7EgTaCWlw"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xM2GMql5EeeGj7EgTaCWlw" name="Fish2PolygonFactory" specification="_xMcdkKl5EeeGj7EgTaCWlw">
              <ownedParameter xmi:id="_xM2GM6l5EeeGj7EgTaCWlw" type="_hFfoIql5EeeGj7EgTaCWlw" direction="return"/>
              <language>java</language>
              <body>super(new AffineTransform(), 0.2, new Point(5, 0), new Point(0, 2), new Point(-4, 0), new Point(-5, 2),
				new Point(-5, -2), new Point(-4, 0), new Point(0, -2));
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_xMcdkKl5EeeGj7EgTaCWlw" name="Fish2PolygonFactory" method="_xM2GMql5EeeGj7EgTaCWlw">
              <eAnnotations xmi:id="_xMdEoKl5EeeGj7EgTaCWlw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_xMdEoal5EeeGj7EgTaCWlw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_xMdEoql5EeeGj7EgTaCWlw" type="_hFfoIql5EeeGj7EgTaCWlw" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_xMdEo6l5EeeGj7EgTaCWlw" name="IShapeFactory">
            <ownedComment xmi:id="_xM3UUKl5EeeGj7EgTaCWlw">
              <body>@author zihanli
Abstract factory that creates a Shape for use as prototype shapes in IPaintStrategies. 
The location of the center of the shape and the x and y scales can be specified.</body>
            </ownedComment>
            <ownedOperation xmi:id="_xMdrsKl5EeeGj7EgTaCWlw" name="makeShape">
              <ownedParameter xmi:id="_xMdrsal5EeeGj7EgTaCWlw" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_xMdrsql5EeeGj7EgTaCWlw" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_xMdrs6l5EeeGj7EgTaCWlw" name="xScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_xMdrtKl5EeeGj7EgTaCWlw" name="yScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_xMwmoal5EeeGj7EgTaCWlw" type="_hFaIkKl5EeeGj7EgTaCWlw" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_xMeSwKl5EeeGj7EgTaCWlw" name="PolygonFactory">
            <ownedComment xmi:id="_xM3UUal5EeeGj7EgTaCWlw">
              <body>@author zihanli
 *Concrete IShapeFactory that provides the invariant behavior to instantiate a Shape that is a Polygon</body>
            </ownedComment>
            <ownedAttribute xmi:id="_xM0RAql5EeeGj7EgTaCWlw" name="poly" visibility="private" type="_xMwmoql5EeeGj7EgTaCWlw" association="_xM4ical5EeeGj7EgTaCWlw">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_xM0RA6l5EeeGj7EgTaCWlw" value="new Polygon()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_xM04Eal5EeeGj7EgTaCWlw" name="at" visibility="private" type="_hFNUQ6l5EeeGj7EgTaCWlw" association="_xM5Jgal5EeeGj7EgTaCWlw"/>
            <ownedAttribute xmi:id="_xM04E6l5EeeGj7EgTaCWlw" name="scaleFactor" visibility="package">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_xM04FKl5EeeGj7EgTaCWlw" value="1.0"/>
            </ownedAttribute>
            <interfaceRealization xmi:id="_xMxNsal5EeeGj7EgTaCWlw" client="_xMeSwKl5EeeGj7EgTaCWlw" supplier="_xMdEo6l5EeeGj7EgTaCWlw" contract="_xMdEo6l5EeeGj7EgTaCWlw"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xM2GNKl5EeeGj7EgTaCWlw" name="makeShape" specification="_xMe50Kl5EeeGj7EgTaCWlw">
              <ownedParameter xmi:id="_xM2GNal5EeeGj7EgTaCWlw" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_xM2GNql5EeeGj7EgTaCWlw" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_xM2GN6l5EeeGj7EgTaCWlw" name="xScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_xM2GOKl5EeeGj7EgTaCWlw" name="yScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_xM2GOal5EeeGj7EgTaCWlw" type="_hFaIkKl5EeeGj7EgTaCWlw" direction="return"/>
              <language>java</language>
              <body>at.setToTranslation(x, y);
		at.scale(xScale * scaleFactor, yScale * scaleFactor); // optional rotation can be added as well
		return at.createTransformedShape(poly);

	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xM2tQKl5EeeGj7EgTaCWlw" name="PolygonFactory" specification="_xMx0wal5EeeGj7EgTaCWlw">
              <ownedParameter xmi:id="_xM2tQal5EeeGj7EgTaCWlw" name="_at" type="_hFNUQ6l5EeeGj7EgTaCWlw"/>
              <ownedParameter xmi:id="_xM2tQql5EeeGj7EgTaCWlw" name="_scaleFactor">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_xM2tQ6l5EeeGj7EgTaCWlw" name="pts" type="_N1Fj4Kl4EeeGj7EgTaCWlw">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xM2tRKl5EeeGj7EgTaCWlw" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:id="_xM2tRal5EeeGj7EgTaCWlw" type="_xMeSwKl5EeeGj7EgTaCWlw" direction="return"/>
              <language>java</language>
              <body>at = _at;
		scaleFactor = _scaleFactor;
		for (int i = 0; i &lt; pts.length; i++) {
			poly.addPoint(pts[i].x, pts[i].y);
		}

	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_xMe50Kl5EeeGj7EgTaCWlw" name="makeShape" method="_xM2GNKl5EeeGj7EgTaCWlw">
              <ownedParameter xmi:id="_xMe50al5EeeGj7EgTaCWlw" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_xMe50ql5EeeGj7EgTaCWlw" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_xMfg4Kl5EeeGj7EgTaCWlw" name="xScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_xMfg4al5EeeGj7EgTaCWlw" name="yScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_xMx0wKl5EeeGj7EgTaCWlw" type="_hFaIkKl5EeeGj7EgTaCWlw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_xMx0wal5EeeGj7EgTaCWlw" name="PolygonFactory" visibility="package" method="_xM2tQKl5EeeGj7EgTaCWlw">
              <eAnnotations xmi:id="_xMx0xal5EeeGj7EgTaCWlw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_xMx0xql5EeeGj7EgTaCWlw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_xMx0wql5EeeGj7EgTaCWlw" name="_at" type="_hFNUQ6l5EeeGj7EgTaCWlw"/>
              <ownedParameter xmi:id="_xMx0w6l5EeeGj7EgTaCWlw" name="_scaleFactor">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_xMx0xKl5EeeGj7EgTaCWlw" name="pts" type="_N1Fj4Kl4EeeGj7EgTaCWlw">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xMyb0ql5EeeGj7EgTaCWlw" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:id="_xMyb0al5EeeGj7EgTaCWlw" type="_xMeSwKl5EeeGj7EgTaCWlw" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_xM37YKl5EeeGj7EgTaCWlw" name="" memberEnd="_xM37Yal5EeeGj7EgTaCWlw _xMzp8Kl5EeeGj7EgTaCWlw">
            <ownedEnd xmi:id="_xM37Yal5EeeGj7EgTaCWlw" name="" type="_hFeaAKl5EeeGj7EgTaCWlw" association="_xM37YKl5EeeGj7EgTaCWlw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_xM4ical5EeeGj7EgTaCWlw" name="" memberEnd="_xM4icql5EeeGj7EgTaCWlw _xM0RAql5EeeGj7EgTaCWlw">
            <ownedEnd xmi:id="_xM4icql5EeeGj7EgTaCWlw" name="" type="_xMeSwKl5EeeGj7EgTaCWlw" association="_xM4ical5EeeGj7EgTaCWlw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_xM5Jgal5EeeGj7EgTaCWlw" name="" memberEnd="_xM5Jgql5EeeGj7EgTaCWlw _xM04Eal5EeeGj7EgTaCWlw">
            <ownedEnd xmi:id="_xM5Jgql5EeeGj7EgTaCWlw" name="" type="_xMeSwKl5EeeGj7EgTaCWlw" association="_xM5Jgal5EeeGj7EgTaCWlw"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_hDwiwKl5EeeGj7EgTaCWlw" name="ADecoratorPaintStrategy" isAbstract="true">
          <ownedComment xmi:id="_hF4Coql5EeeGj7EgTaCWlw">
            <body>@author zihanli
Abstract class that provides default behavior for subclasses 
that will decorate another IPaintStrategy to add functionality to that strategy.</body>
          </ownedComment>
          <generalization xmi:id="_hFPJcql5EeeGj7EgTaCWlw" general="_hDy_AKl5EeeGj7EgTaCWlw"/>
          <ownedAttribute xmi:id="_hFvfwKl5EeeGj7EgTaCWlw" name="strategy" type="_hDy_AKl5EeeGj7EgTaCWlw" isReadOnly="true" association="_hF7F8Kl5EeeGj7EgTaCWlw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hFzKIKl5EeeGj7EgTaCWlw" name="ADecoratorPaintStrategy" specification="_hFluwKl5EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_hFzKIal5EeeGj7EgTaCWlw" name="_at" type="_hFNUQ6l5EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_hFzKIql5EeeGj7EgTaCWlw" name="_strategy" type="_hDy_AKl5EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_hFzKI6l5EeeGj7EgTaCWlw" type="_hDwiwKl5EeeGj7EgTaCWlw" direction="return"/>
            <language>java</language>
            <body>super(_at);
		// TODO Auto-generated constructor stub
		strategy = _strategy;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hFzxMKl5EeeGj7EgTaCWlw" name="init" specification="_hFOiYKl5EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_hFzxMal5EeeGj7EgTaCWlw" name="host" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <language>java</language>
            <body>strategy.init(host);

	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_hFOiYKl5EeeGj7EgTaCWlw" name="init" method="_hFzxMKl5EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_hFOiYal5EeeGj7EgTaCWlw" name="host" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_hFluwKl5EeeGj7EgTaCWlw" name="ADecoratorPaintStrategy" method="_hFzKIKl5EeeGj7EgTaCWlw">
            <eAnnotations xmi:id="_hFluw6l5EeeGj7EgTaCWlw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_hFluxKl5EeeGj7EgTaCWlw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_hFluwal5EeeGj7EgTaCWlw" name="_at" type="_hFNUQ6l5EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_hFluwql5EeeGj7EgTaCWlw" name="_strategy" type="_hDy_AKl5EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_hFluxal5EeeGj7EgTaCWlw" type="_hDwiwKl5EeeGj7EgTaCWlw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_hFluxql5EeeGj7EgTaCWlw" name="paintXfrm" isAbstract="true">
            <ownedParameter xmi:id="_hFlux6l5EeeGj7EgTaCWlw" name="g" type="_QGTOAal3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_hFluyKl5EeeGj7EgTaCWlw" name="host" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_hFluyal5EeeGj7EgTaCWlw" name="at" type="_hFNUQ6l5EeeGj7EgTaCWlw"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_hDy_AKl5EeeGj7EgTaCWlw" name="APaintStrategy" isAbstract="true">
          <ownedComment xmi:id="_hF4Co6l5EeeGj7EgTaCWlw">
            <body>@author zihanli
The top-level affine transform-based paint strategy that provides services for its subclasses
 *</body>
          </ownedComment>
          <ownedAttribute xmi:id="_hFvfwal5EeeGj7EgTaCWlw" name="at" type="_hFNUQ6l5EeeGj7EgTaCWlw" isReadOnly="true" association="_hF7tAal5EeeGj7EgTaCWlw"/>
          <interfaceRealization xmi:id="_hFQXkKl5EeeGj7EgTaCWlw" client="_hDy_AKl5EeeGj7EgTaCWlw" supplier="_QHT6oKl3EeeGj7EgTaCWlw" contract="_QHT6oKl3EeeGj7EgTaCWlw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hFzxMql5EeeGj7EgTaCWlw" name="APaintStrategy" specification="_hFm84Kl5EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_hFzxM6l5EeeGj7EgTaCWlw" name="_at" type="_hFNUQ6l5EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_hFzxNKl5EeeGj7EgTaCWlw" type="_hDy_AKl5EeeGj7EgTaCWlw" direction="return"/>
            <language>java</language>
            <body>at = _at;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hFzxNal5EeeGj7EgTaCWlw" name="paint" specification="_hFQ-oql5EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_hFzxNql5EeeGj7EgTaCWlw" name="g" type="_QGTOAal3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_hFzxN6l5EeeGj7EgTaCWlw" name="host" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <language>java</language>
            <body>double scale = host.getRadius();
		at.setToTranslation(host.getLocation().x, host.getLocation().y);
		at.scale(scale, scale);
		at.rotate(host.getVel().x, host.getVel().y);
		g.setColor(host.getColor());
		paintCfg(g, host);
		paintXfrm(g, host, at);
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_hFQXkal5EeeGj7EgTaCWlw" name="paintCfg">
            <ownedParameter xmi:id="_hFQXkql5EeeGj7EgTaCWlw" name="g" type="_QGTOAal3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_hFQ-oKl5EeeGj7EgTaCWlw" name="host" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_hFQ-oql5EeeGj7EgTaCWlw" name="paint" method="_hFzxNal5EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_hFRlsKl5EeeGj7EgTaCWlw" name="g" type="_QGTOAal3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_hFRlsal5EeeGj7EgTaCWlw" name="host" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_hFm84Kl5EeeGj7EgTaCWlw" name="APaintStrategy" method="_hFzxMql5EeeGj7EgTaCWlw">
            <eAnnotations xmi:id="_hFm84ql5EeeGj7EgTaCWlw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_hFm846l5EeeGj7EgTaCWlw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_hFm84al5EeeGj7EgTaCWlw" name="_at" type="_hFNUQ6l5EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_hFm85Kl5EeeGj7EgTaCWlw" type="_hDy_AKl5EeeGj7EgTaCWlw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_hFm85al5EeeGj7EgTaCWlw" name="paintXfrm" isAbstract="true">
            <ownedParameter xmi:id="_hFm85ql5EeeGj7EgTaCWlw" name="g" type="_QGTOAal3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_hFm856l5EeeGj7EgTaCWlw" name="host" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_hFm86Kl5EeeGj7EgTaCWlw" name="at" type="_hFNUQ6l5EeeGj7EgTaCWlw"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_hD1bQKl5EeeGj7EgTaCWlw" name="AnimatePaintStrategy">
          <ownedComment xmi:id="_hF4CpKl5EeeGj7EgTaCWlw">
            <body>@author zihanli
Concrete paint strategy that cycles through a sequence of paint strategies, painting one per paint update.</body>
          </ownedComment>
          <generalization xmi:id="_hFTa4ql5EeeGj7EgTaCWlw" general="_hDy_AKl5EeeGj7EgTaCWlw"/>
          <ownedAttribute xmi:id="_hFvfwql5EeeGj7EgTaCWlw" name="count" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_hFwG0Kl5EeeGj7EgTaCWlw" value="0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_hFwG0ql5EeeGj7EgTaCWlw" name="PaintStrats" visibility="private" type="_hDy_AKl5EeeGj7EgTaCWlw" association="_hF8UEal5EeeGj7EgTaCWlw">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_hFwG06l5EeeGj7EgTaCWlw" value="*"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hF0YQKl5EeeGj7EgTaCWlw" name="AnimatePaintStrategy" specification="_hFnj8Kl5EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_hF0YQal5EeeGj7EgTaCWlw" name="_at" type="_hFNUQ6l5EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_hF0YQql5EeeGj7EgTaCWlw" name="pstrats" type="_hDy_AKl5EeeGj7EgTaCWlw">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_hF0YQ6l5EeeGj7EgTaCWlw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_hF0YRKl5EeeGj7EgTaCWlw" type="_hD1bQKl5EeeGj7EgTaCWlw" direction="return"/>
            <language>java</language>
            <body>super(_at);
		// TODO Auto-generated constructor stub
		PaintStrats = pstrats;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hF0YRal5EeeGj7EgTaCWlw" name="paintXfrm" specification="_hFoLAql5EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_hF0YRql5EeeGj7EgTaCWlw" name="g" type="_QGTOAal3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_hF0YR6l5EeeGj7EgTaCWlw" name="host" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_hF0YSKl5EeeGj7EgTaCWlw" name="at" type="_hFNUQ6l5EeeGj7EgTaCWlw"/>
            <language>java</language>
            <body>PaintStrats[count].paintXfrm(g, host, at);
		count++;
		count = count % PaintStrats.length;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_hFSz0Kl5EeeGj7EgTaCWlw" name="init">
            <ownedParameter xmi:id="_hFSz0al5EeeGj7EgTaCWlw" name="host" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_hFnj8Kl5EeeGj7EgTaCWlw" name="AnimatePaintStrategy" method="_hF0YQKl5EeeGj7EgTaCWlw">
            <eAnnotations xmi:id="_hFnj86l5EeeGj7EgTaCWlw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_hFnj9Kl5EeeGj7EgTaCWlw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_hFnj8al5EeeGj7EgTaCWlw" name="_at" type="_hFNUQ6l5EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_hFnj8ql5EeeGj7EgTaCWlw" name="pstrats" type="_hDy_AKl5EeeGj7EgTaCWlw">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_hFoLAKl5EeeGj7EgTaCWlw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_hFnj9ql5EeeGj7EgTaCWlw" type="_hD1bQKl5EeeGj7EgTaCWlw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_hFoLAql5EeeGj7EgTaCWlw" name="paintXfrm" method="_hF0YRal5EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_hFoLA6l5EeeGj7EgTaCWlw" name="g" type="_QGTOAal3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_hFoLBKl5EeeGj7EgTaCWlw" name="host" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_hFoyEKl5EeeGj7EgTaCWlw" name="at" type="_hFNUQ6l5EeeGj7EgTaCWlw"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_hD33gKl5EeeGj7EgTaCWlw" name="ImagePaintStrategy">
          <ownedComment xmi:id="_hF4Cpal5EeeGj7EgTaCWlw">
            <body>@author zihanli
 *Paint strategy that paints an image from a file, scaled to the host Ball's radius.</body>
          </ownedComment>
          <generalization xmi:id="_hFXFQql5EeeGj7EgTaCWlw" general="_hDy_AKl5EeeGj7EgTaCWlw"/>
          <ownedAttribute xmi:id="_hFwt4al5EeeGj7EgTaCWlw" name="img" visibility="private" type="_hFUpAal5EeeGj7EgTaCWlw" association="_hF87Ial5EeeGj7EgTaCWlw"/>
          <ownedAttribute xmi:id="_hFwt46l5EeeGj7EgTaCWlw" name="scaleFactor" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_hFwt5Kl5EeeGj7EgTaCWlw" value="1.0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_hFxU8Kl5EeeGj7EgTaCWlw" name="fillFactor" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_hFxU8al5EeeGj7EgTaCWlw" value="1.0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_hFxU86l5EeeGj7EgTaCWlw" name="imgObs" visibility="private" type="_hFV3Ial5EeeGj7EgTaCWlw" association="_hF9iMKl5EeeGj7EgTaCWlw"/>
          <ownedAttribute xmi:id="_hFxU9al5EeeGj7EgTaCWlw" name="localAt" visibility="private" type="_hFNUQ6l5EeeGj7EgTaCWlw" association="_hF9iM6l5EeeGj7EgTaCWlw">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_hFxU9ql5EeeGj7EgTaCWlw" value="new AffineTransform()"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hF0YSal5EeeGj7EgTaCWlw" name="ImagePaintStrategy" specification="_hFpZIKl5EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_hF0YSql5EeeGj7EgTaCWlw" name="_at" type="_hFNUQ6l5EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_hF0YS6l5EeeGj7EgTaCWlw" name="filename">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_hF0YTKl5EeeGj7EgTaCWlw" name="_fillFactor">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_hF0YTal5EeeGj7EgTaCWlw" type="_hD33gKl5EeeGj7EgTaCWlw" direction="return"/>
            <language>java</language>
            <body>super(_at);
		try {
			img = Toolkit.getDefaultToolkit().getImage(this.getClass().getResource(filename));
		} catch (Exception e) {
			System.err.println(&quot;ImagePaintStrategy: Error reading file: &quot; + filename + &quot;\n&quot; + e);
		}
		fillFactor = _fillFactor;
		// TODO Auto-generated constructor stub
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hF0_UKl5EeeGj7EgTaCWlw" name="init" specification="_hFWeMKl5EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_hF0_Ual5EeeGj7EgTaCWlw" name="host" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <language>java</language>
            <body>imgObs = host.getCanvas();
		MediaTracker mt = new MediaTracker(host.getCanvas());
		mt.addImage(img, 1);
		try {
			mt.waitForAll();
		} catch (Exception e) {
			System.out.println(&quot;ImagePaintStrategy.init(): Error waiting for image.  Exception = &quot; + e);
		}

		scaleFactor = 2.0 / (fillFactor * (img.getWidth(imgObs) + img.getHeight(imgObs)) / 2.0);

	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hF0_Uql5EeeGj7EgTaCWlw" name="paintXfrm" specification="_hFqAMKl5EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_hF0_U6l5EeeGj7EgTaCWlw" name="g" type="_QGTOAal3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_hF0_VKl5EeeGj7EgTaCWlw" name="host" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_hF0_Val5EeeGj7EgTaCWlw" name="at" type="_hFNUQ6l5EeeGj7EgTaCWlw"/>
            <language>java</language>
            <body>localAt.setToScale(scaleFactor, scaleFactor);
		localAt.translate(-img.getWidth(imgObs) / 2.0, -img.getHeight(imgObs) / 2.0);
		localAt.preConcatenate(at);
		((Graphics2D) g).drawImage(img, localAt, imgObs);

	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_hFWeMKl5EeeGj7EgTaCWlw" name="init" method="_hF0_UKl5EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_hFWeMal5EeeGj7EgTaCWlw" name="host" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_hFpZIKl5EeeGj7EgTaCWlw" name="ImagePaintStrategy" method="_hF0YSal5EeeGj7EgTaCWlw">
            <eAnnotations xmi:id="_hFpZJKl5EeeGj7EgTaCWlw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_hFpZJal5EeeGj7EgTaCWlw" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_hF4Cpql5EeeGj7EgTaCWlw">
              <body>@param _at
	 * @param filename
	 * @param _fillFactor
	 * Constructor that takes an external AffineTransform, the filename of the image to paint and a fill factor of the image.</body>
            </ownedComment>
            <ownedParameter xmi:id="_hFpZIal5EeeGj7EgTaCWlw" name="_at" type="_hFNUQ6l5EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_hFpZIql5EeeGj7EgTaCWlw" name="filename">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_hFpZI6l5EeeGj7EgTaCWlw" name="_fillFactor">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_hFpZJql5EeeGj7EgTaCWlw" type="_hD33gKl5EeeGj7EgTaCWlw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_hFqAMKl5EeeGj7EgTaCWlw" name="paintXfrm" method="_hF0_Uql5EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_hFqAMal5EeeGj7EgTaCWlw" name="g" type="_QGTOAal3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_hFqAMql5EeeGj7EgTaCWlw" name="host" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_hFqAM6l5EeeGj7EgTaCWlw" name="at" type="_hFNUQ6l5EeeGj7EgTaCWlw"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_hD660Kl5EeeGj7EgTaCWlw" name="MultiPaintStrategy">
          <ownedComment xmi:id="_hF4psKl5EeeGj7EgTaCWlw">
            <body>@author zihanli
Paint strategy that use multiple strategies</body>
          </ownedComment>
          <generalization xmi:id="_hFY6c6l5EeeGj7EgTaCWlw" general="_hDy_AKl5EeeGj7EgTaCWlw"/>
          <ownedAttribute xmi:id="_hFx8AKl5EeeGj7EgTaCWlw" name="psts" visibility="private" type="_hDy_AKl5EeeGj7EgTaCWlw" association="_hF-JQal5EeeGj7EgTaCWlw">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_hFx8Aal5EeeGj7EgTaCWlw" value="*"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hF0_Vql5EeeGj7EgTaCWlw" name="MultiPaintStrategy" specification="_hFqnQKl5EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_hF0_V6l5EeeGj7EgTaCWlw" name="_at" type="_hFNUQ6l5EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_hF0_WKl5EeeGj7EgTaCWlw" name="aPaintStrategies" type="_hDy_AKl5EeeGj7EgTaCWlw">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_hF0_Wal5EeeGj7EgTaCWlw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_hF0_Wql5EeeGj7EgTaCWlw" type="_hD660Kl5EeeGj7EgTaCWlw" direction="return"/>
            <language>java</language>
            <body>super(_at);
		// TODO Auto-generated constructor stub
		psts = aPaintStrategies;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hF0_W6l5EeeGj7EgTaCWlw" name="init" specification="_hFYTYKl5EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_hF0_XKl5EeeGj7EgTaCWlw" name="host" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <language>java</language>
            <body>for (int i = 0; i &lt; psts.length; i++) {
			psts[i].init(host);
		}
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hF0_Xal5EeeGj7EgTaCWlw" name="paintXfrm" specification="_hFrOVKl5EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_hF0_Xql5EeeGj7EgTaCWlw" name="g" type="_QGTOAal3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_hF0_X6l5EeeGj7EgTaCWlw" name="host" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_hF0_YKl5EeeGj7EgTaCWlw" name="at" type="_hFNUQ6l5EeeGj7EgTaCWlw"/>
            <language>java</language>
            <body>for (int i = 0; i &lt; psts.length; i++) {
			psts[i].paintXfrm(g, host, at);
		}

	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_hFYTYKl5EeeGj7EgTaCWlw" name="init" method="_hF0_W6l5EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_hFYTYal5EeeGj7EgTaCWlw" name="host" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_hFqnQKl5EeeGj7EgTaCWlw" name="MultiPaintStrategy" method="_hF0_Vql5EeeGj7EgTaCWlw">
            <eAnnotations xmi:id="_hFqnQ6l5EeeGj7EgTaCWlw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_hFqnRKl5EeeGj7EgTaCWlw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_hFqnQal5EeeGj7EgTaCWlw" name="_at" type="_hFNUQ6l5EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_hFqnQql5EeeGj7EgTaCWlw" name="aPaintStrategies" type="_hDy_AKl5EeeGj7EgTaCWlw">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_hFrOUql5EeeGj7EgTaCWlw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_hFrOUal5EeeGj7EgTaCWlw" type="_hD660Kl5EeeGj7EgTaCWlw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_hFrOVKl5EeeGj7EgTaCWlw" name="paintXfrm" method="_hF0_Xal5EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_hFrOVal5EeeGj7EgTaCWlw" name="g" type="_QGTOAal3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_hFrOVql5EeeGj7EgTaCWlw" name="host" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_hFrOV6l5EeeGj7EgTaCWlw" name="at" type="_hFNUQ6l5EeeGj7EgTaCWlw"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_hD9XEKl5EeeGj7EgTaCWlw" name="ShapePaintStrategy">
          <ownedComment xmi:id="_hF4psal5EeeGj7EgTaCWlw">
            <body>@author zihanli
Concrete class that defines invariant painting behaviors to paint Shape objects for all its subclasses. 
 *</body>
          </ownedComment>
          <generalization xmi:id="_hFbWsKl5EeeGj7EgTaCWlw" general="_hDy_AKl5EeeGj7EgTaCWlw"/>
          <ownedAttribute xmi:id="_hFyjEKl5EeeGj7EgTaCWlw" name="shape" visibility="private" type="_hFaIkKl5EeeGj7EgTaCWlw" association="_hF-wUal5EeeGj7EgTaCWlw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hF1mYKl5EeeGj7EgTaCWlw" name="ShapePaintStrategy" specification="_hFsccKl5EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_hF1mYal5EeeGj7EgTaCWlw" name="_at" type="_hFNUQ6l5EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_hF1mYql5EeeGj7EgTaCWlw" name="_shape" type="_hFaIkKl5EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_hF1mY6l5EeeGj7EgTaCWlw" type="_hD9XEKl5EeeGj7EgTaCWlw" direction="return"/>
            <language>java</language>
            <body>super(_at);
		shape = _shape;
		// TODO Auto-generated constructor stub
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hF1mZKl5EeeGj7EgTaCWlw" name="ShapePaintStrategy" specification="_hFscdql5EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_hF1mZal5EeeGj7EgTaCWlw" name="_shape" type="_hFaIkKl5EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_hF1mZql5EeeGj7EgTaCWlw" type="_hD9XEKl5EeeGj7EgTaCWlw" direction="return"/>
            <language>java</language>
            <body>super(new AffineTransform());
		shape = _shape;
		// TODO Auto-generated constructor stub
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hF1mZ6l5EeeGj7EgTaCWlw" name="paintXfrm" specification="_hFtDgql5EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_hF1maKl5EeeGj7EgTaCWlw" name="g" type="_QGTOAal3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_hF1maal5EeeGj7EgTaCWlw" name="host" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_hF1maql5EeeGj7EgTaCWlw" name="at" type="_hFNUQ6l5EeeGj7EgTaCWlw"/>
            <language>java</language>
            <body>((Graphics2D) g).fill(at.createTransformedShape(shape));

	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_hFavoKl5EeeGj7EgTaCWlw" name="init">
            <ownedParameter xmi:id="_hFavoal5EeeGj7EgTaCWlw" name="host" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_hFsccKl5EeeGj7EgTaCWlw" name="ShapePaintStrategy" method="_hF1mYKl5EeeGj7EgTaCWlw">
            <eAnnotations xmi:id="_hFscc6l5EeeGj7EgTaCWlw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_hFscdKl5EeeGj7EgTaCWlw" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_hF4psql5EeeGj7EgTaCWlw">
              <body>@param _at
	 * @param _shape
	 * Constructor that uses a supplied AffineTransform for internal use.</body>
            </ownedComment>
            <ownedParameter xmi:id="_hFsccal5EeeGj7EgTaCWlw" name="_at" type="_hFNUQ6l5EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_hFsccql5EeeGj7EgTaCWlw" name="_shape" type="_hFaIkKl5EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_hFscdal5EeeGj7EgTaCWlw" type="_hD9XEKl5EeeGj7EgTaCWlw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_hFscdql5EeeGj7EgTaCWlw" name="ShapePaintStrategy" method="_hF1mZKl5EeeGj7EgTaCWlw">
            <eAnnotations xmi:id="_hFsceKl5EeeGj7EgTaCWlw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_hFtDgKl5EeeGj7EgTaCWlw" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_hF4ps6l5EeeGj7EgTaCWlw">
              <body>@param _shape
	 * Constructor that allocates a new AffineTransform for internal use.</body>
            </ownedComment>
            <ownedParameter xmi:id="_hFscd6l5EeeGj7EgTaCWlw" name="_shape" type="_hFaIkKl5EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_hFtDgal5EeeGj7EgTaCWlw" type="_hD9XEKl5EeeGj7EgTaCWlw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_hFtDgql5EeeGj7EgTaCWlw" name="paintXfrm" method="_hF1mZ6l5EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_hFtDg6l5EeeGj7EgTaCWlw" name="g" type="_QGTOAal3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_hFtDhKl5EeeGj7EgTaCWlw" name="host" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_hFtDhal5EeeGj7EgTaCWlw" name="at" type="_hFNUQ6l5EeeGj7EgTaCWlw"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_hF7F8Kl5EeeGj7EgTaCWlw" name="" memberEnd="_hF7F8al5EeeGj7EgTaCWlw _hFvfwKl5EeeGj7EgTaCWlw">
          <ownedEnd xmi:id="_hF7F8al5EeeGj7EgTaCWlw" name="" type="_hDwiwKl5EeeGj7EgTaCWlw" association="_hF7F8Kl5EeeGj7EgTaCWlw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_hF7tAal5EeeGj7EgTaCWlw" name="" memberEnd="_hF7tAql5EeeGj7EgTaCWlw _hFvfwal5EeeGj7EgTaCWlw">
          <ownedEnd xmi:id="_hF7tAql5EeeGj7EgTaCWlw" name="" type="_hDy_AKl5EeeGj7EgTaCWlw" association="_hF7tAal5EeeGj7EgTaCWlw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_hF8UEal5EeeGj7EgTaCWlw" name="" memberEnd="_hF8UEql5EeeGj7EgTaCWlw _hFwG0ql5EeeGj7EgTaCWlw">
          <ownedEnd xmi:id="_hF8UEql5EeeGj7EgTaCWlw" name="" type="_hD1bQKl5EeeGj7EgTaCWlw" association="_hF8UEal5EeeGj7EgTaCWlw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_hF87Ial5EeeGj7EgTaCWlw" name="" memberEnd="_hF87Iql5EeeGj7EgTaCWlw _hFwt4al5EeeGj7EgTaCWlw">
          <ownedEnd xmi:id="_hF87Iql5EeeGj7EgTaCWlw" name="" type="_hD33gKl5EeeGj7EgTaCWlw" association="_hF87Ial5EeeGj7EgTaCWlw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_hF9iMKl5EeeGj7EgTaCWlw" name="" memberEnd="_hF9iMal5EeeGj7EgTaCWlw _hFxU86l5EeeGj7EgTaCWlw">
          <ownedEnd xmi:id="_hF9iMal5EeeGj7EgTaCWlw" name="" type="_hD33gKl5EeeGj7EgTaCWlw" association="_hF9iMKl5EeeGj7EgTaCWlw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_hF9iM6l5EeeGj7EgTaCWlw" name="" memberEnd="_hF9iNKl5EeeGj7EgTaCWlw _hFxU9al5EeeGj7EgTaCWlw">
          <ownedEnd xmi:id="_hF9iNKl5EeeGj7EgTaCWlw" name="" type="_hD33gKl5EeeGj7EgTaCWlw" association="_hF9iM6l5EeeGj7EgTaCWlw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_hF-JQal5EeeGj7EgTaCWlw" name="" memberEnd="_hF-JQql5EeeGj7EgTaCWlw _hFx8AKl5EeeGj7EgTaCWlw">
          <ownedEnd xmi:id="_hF-JQql5EeeGj7EgTaCWlw" name="" type="_hD660Kl5EeeGj7EgTaCWlw" association="_hF-JQal5EeeGj7EgTaCWlw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_hF-wUal5EeeGj7EgTaCWlw" name="" memberEnd="_hF-wUql5EeeGj7EgTaCWlw _hFyjEKl5EeeGj7EgTaCWlw">
          <ownedEnd xmi:id="_hF-wUql5EeeGj7EgTaCWlw" name="" type="_hD9XEKl5EeeGj7EgTaCWlw" association="_hF-wUal5EeeGj7EgTaCWlw"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_QC2RYql3EeeGj7EgTaCWlw" name="strategy">
        <packagedElement xmi:type="uml:Class" xmi:id="_QHKJoal3EeeGj7EgTaCWlw" name="SwitchStrategy">
          <ownedComment xmi:id="_N2rfUKl4EeeGj7EgTaCWlw">
            <body>@author zihanli
the class used to create strategy that can change its method pf updating</body>
          </ownedComment>
          <ownedAttribute xmi:id="_N2eD8al4EeeGj7EgTaCWlw" name="tempStrategy" visibility="private" type="_QHL-0al3EeeGj7EgTaCWlw" association="_N2zbIal4EeeGj7EgTaCWlw">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_N2erAal4EeeGj7EgTaCWlw" value="new StraightStrategy&lt;TDispMsg>()"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_N2BYAKl4EeeGj7EgTaCWlw" client="_QHKJoal3EeeGj7EgTaCWlw" supplier="_QHL-0al3EeeGj7EgTaCWlw" contract="_QHL-0al3EeeGj7EgTaCWlw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N2n08Kl4EeeGj7EgTaCWlw" name="updateState" specification="_N2B_EKl4EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_N2n08al4EeeGj7EgTaCWlw" name="ball" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N2n08ql4EeeGj7EgTaCWlw" name="dispatcher" type="_QGdmEal3EeeGj7EgTaCWlw"/>
            <language>java</language>
            <body>tempStrategy.updateState(ball, null);

	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N2n086l4EeeGj7EgTaCWlw" name="setStrategy" specification="_N2CmI6l4EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_N2n09Kl4EeeGj7EgTaCWlw" name="newStrategy" type="_QHL-0al3EeeGj7EgTaCWlw"/>
            <language>java</language>
            <body>tempStrategy = newStrategy;
		//init(context);
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_N2B_EKl4EeeGj7EgTaCWlw" name="updateState" method="_N2n08Kl4EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_N2B_Eal4EeeGj7EgTaCWlw" name="ball" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N2B_Eql4EeeGj7EgTaCWlw" name="dispatcher" type="_QGdmEal3EeeGj7EgTaCWlw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_N2CmI6l4EeeGj7EgTaCWlw" name="setStrategy" method="_N2n086l4EeeGj7EgTaCWlw">
            <ownedComment xmi:id="_N2rfUal4EeeGj7EgTaCWlw">
              <body>@param newStrategy
	 * set  tempStrategy to a new one</body>
            </ownedComment>
            <ownedParameter xmi:id="_N2DNMKl4EeeGj7EgTaCWlw" name="newStrategy" type="_QHL-0al3EeeGj7EgTaCWlw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_N2GQgKl4EeeGj7EgTaCWlw" name="init">
            <ownedParameter xmi:id="_N2GQgal4EeeGj7EgTaCWlw" name="context" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_Nx330Kl4EeeGj7EgTaCWlw" name="BreathingStrategy">
          <ownedComment xmi:id="_N2pDEql4EeeGj7EgTaCWlw">
            <body>@author zihanli
The strategy to change the ball's radius</body>
          </ownedComment>
          <ownedAttribute xmi:id="_N2VhEKl4EeeGj7EgTaCWlw" name="makeRadius" visibility="private" type="_N07y4al4EeeGj7EgTaCWlw" association="_N2xl8Kl4EeeGj7EgTaCWlw">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_N2VhEal4EeeGj7EgTaCWlw" value="new SineMaker(Randomizer.Singleton.randomInt(5, 10),&#xA;&#x9;&#x9;&#x9;Randomizer.Singleton.randomInt(20, 50), Randomizer.Singleton.randomDouble(0.1, 0.5))"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_N1B5gKl4EeeGj7EgTaCWlw" client="_Nx330Kl4EeeGj7EgTaCWlw" supplier="_QHL-0al3EeeGj7EgTaCWlw" contract="_QHL-0al3EeeGj7EgTaCWlw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N2hHQKl4EeeGj7EgTaCWlw" name="updateState" specification="_N1DHoKl4EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_N2hHQal4EeeGj7EgTaCWlw" name="ball" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N2hHQql4EeeGj7EgTaCWlw" name="dispatcher" type="_QGdmEal3EeeGj7EgTaCWlw"/>
            <language>java</language>
            <body>ball.setRadius(makeRadius.getIntVal());

	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_N1DHoKl4EeeGj7EgTaCWlw" name="updateState" method="_N2hHQKl4EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_N1DHoal4EeeGj7EgTaCWlw" name="ball" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N1DHoql4EeeGj7EgTaCWlw" name="dispatcher" type="_QGdmEal3EeeGj7EgTaCWlw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_N1EVwql4EeeGj7EgTaCWlw" name="init">
            <ownedParameter xmi:id="_N1EVw6l4EeeGj7EgTaCWlw" name="context" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_Nx8wUKl4EeeGj7EgTaCWlw" name="Collide2Strategy">
          <ownedComment xmi:id="_N2pDE6l4EeeGj7EgTaCWlw">
            <body>@author zihanli
elastic collision implemented purely as an interaction strategy.   Combine with Overlap to see bouncing balls.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_N2WIIal4EeeGj7EgTaCWlw" name="Nudge" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_N2WIIql4EeeGj7EgTaCWlw" value="1.1"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_N1JOQal4EeeGj7EgTaCWlw" client="_Nx8wUKl4EeeGj7EgTaCWlw" supplier="_QHL-0al3EeeGj7EgTaCWlw" contract="_QHL-0al3EeeGj7EgTaCWlw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N2huUKl4EeeGj7EgTaCWlw" name="init" specification="_N1LDcql4EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_N2huUal4EeeGj7EgTaCWlw" name="context" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <language>java</language>
            <body>context.setInteractStrategy(new MultiInteractStrategy(context.getInteractStrategy(), new IInteractStrategy() {
			

			@Override
			public void interact(Ball ball, Ball target, IDispatcher&lt;IBallCmd> disp) {
				// TODO Auto-generated method stub
				double temp_distance = ball.getLocation().distance(target.getLocation());
				if (temp_distance &lt;= ball.getRadius() + target.getRadius()) {
					double _reducedMass = reducedMass(ball.getRadius() * ball.getRadius(),
							target.getRadius() * target.getRadius());
					Point2D.Double _impulse = impulse(ball.getLocation(), ball.getVel(), target.getLocation(),
							target.getVel(), _reducedMass, temp_distance,
							ball.getRadius() + target.getRadius() - temp_distance);
					updateCollision(ball, target, _impulse.x, _impulse.y);
					updateCollision(target, ball, -1 * _impulse.x, -1 * _impulse.y);

				}
				
			}

		}));
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N2huUql4EeeGj7EgTaCWlw" name="reducedMass" specification="_Nx-lgKl4EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_N2huU6l4EeeGj7EgTaCWlw" name="mSource">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_N2huVKl4EeeGj7EgTaCWlw" name="mTarget">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_N2huVal4EeeGj7EgTaCWlw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>if (mSource == Double.POSITIVE_INFINITY)
			return mTarget;
		if (mTarget == Double.POSITIVE_INFINITY)
			return mSource;
		else
			return (mSource * mTarget) / (mSource + mTarget);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N2huVql4EeeGj7EgTaCWlw" name="impulse" specification="_N2MXIKl4EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_N2huV6l4EeeGj7EgTaCWlw" name="lSource" type="_N1Fj4Kl4EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N2huWKl4EeeGj7EgTaCWlw" name="vSource" type="_N1Fj4Kl4EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N2huWal4EeeGj7EgTaCWlw" name="lTarget" type="_N1Fj4Kl4EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N2huWql4EeeGj7EgTaCWlw" name="vTarget" type="_N1Fj4Kl4EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N2huW6l4EeeGj7EgTaCWlw" name="reducedMass">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_N2huXKl4EeeGj7EgTaCWlw" name="distance">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_N2huXal4EeeGj7EgTaCWlw" name="deltaR">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_N2huXql4EeeGj7EgTaCWlw" type="_N1Lqgql4EeeGj7EgTaCWlw" direction="return"/>
            <language>java</language>
            <body>// Calculate the normal vector, from source to target
		double nx = ((double) (lTarget.x - lSource.x)) / distance;
		double ny = ((double) (lTarget.y - lSource.y)) / distance;

		// delta velocity (speed, actually) in normal direction, source to
		// target
		double dvn = (vTarget.x - vSource.x) * nx + (vTarget.y - vSource.y) * ny;

		// move the source ball beyond collision range of the target ball, along
		// the normal direction.
		lSource.translate((int) Math.ceil(-nx * (Nudge * deltaR)), (int) Math.ceil(-ny * (Nudge * deltaR)));

		return new Point2D.Double(2.0 * reducedMass * dvn * nx, 2.0 * reducedMass * dvn * ny);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N2iVYKl4EeeGj7EgTaCWlw" name="updateCollision" specification="_N1M4oKl4EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_N2iVYal4EeeGj7EgTaCWlw" name="context" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N2iVYql4EeeGj7EgTaCWlw" name="target" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N2iVY6l4EeeGj7EgTaCWlw" name="impX">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_N2iVZKl4EeeGj7EgTaCWlw" name="impY">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>int mContext = (int) (context.getRadius() * context.getRadius());

		context.getVel().translate((int) Math.round(impX / mContext), (int) Math.round(impY / mContext));
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_Nx-lgKl4EeeGj7EgTaCWlw" name="reducedMass" visibility="protected" method="_N2huUql4EeeGj7EgTaCWlw">
            <ownedComment xmi:id="_N2pDFKl4EeeGj7EgTaCWlw">
              <body>Returns the reduced mass of the two balls (m1*m2)/(m1+m2) Gives correct
	 * result if one of the balls has infinite mass.
	 * 
	 * @param mSource
	 *            Mass of the source ball
	 * @param mTarget
	 *            Mass of the target ball</body>
            </ownedComment>
            <ownedParameter xmi:id="_Nx-lgal4EeeGj7EgTaCWlw" name="mSource">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Nx-lgql4EeeGj7EgTaCWlw" name="mTarget">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Nx-lg6l4EeeGj7EgTaCWlw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_N1J1UKl4EeeGj7EgTaCWlw" name="updateState">
            <ownedParameter xmi:id="_N1J1Ual4EeeGj7EgTaCWlw" name="ball" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N1J1Uql4EeeGj7EgTaCWlw" name="dispatcher" type="_QGdmEal3EeeGj7EgTaCWlw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_N1LDcql4EeeGj7EgTaCWlw" name="init" method="_N2huUKl4EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_N1LDc6l4EeeGj7EgTaCWlw" name="context" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_N1M4oKl4EeeGj7EgTaCWlw" name="updateCollision" visibility="protected" method="_N2iVYKl4EeeGj7EgTaCWlw">
            <ownedComment xmi:id="_N2pDFql4EeeGj7EgTaCWlw">
              <body>Updates the velocity of the source ball, given an impulse, then uses the
	 * context's interactWith method to determine the post collision behavior, from the context
	 * ball's perspective. The change in velocity is the impulse divided by the (source) ball's mass. To change
	 * the velocity of the target ball, switch the source and target input
	 * parameters and negate the impulse values.   This will also run the post collision behavior from 
	 * the other perspective.
	 * 
	 * @param context
	 *            The ball to update
	 * @param target
	 *            The ball being collided with
	 * @param impX
	 *            x-coordinate of the impulse
	 * @param impY
	 *            y-coordinate of the impulse</body>
            </ownedComment>
            <ownedParameter xmi:id="_N1M4oal4EeeGj7EgTaCWlw" name="context" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N1M4oql4EeeGj7EgTaCWlw" name="target" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N1M4o6l4EeeGj7EgTaCWlw" name="impX">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_N1M4pKl4EeeGj7EgTaCWlw" name="impY">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_N2MXIKl4EeeGj7EgTaCWlw" name="impulse" visibility="protected" method="_N2huVql4EeeGj7EgTaCWlw">
            <ownedComment xmi:id="_N2pDFal4EeeGj7EgTaCWlw">
              <body>Calculates the impulse (change in momentum) of the collision in the
	 * direction from the source to the target This method calculates the
	 * impulse on the source ball. The impulse on the target ball is the
	 * negative of the result. Also moves source ball out of collision range
	 * along normal direction. The change in velocity of the source ball is the
	 * impulse divided by the source's mass The change in velocity of the target
	 * ball is the negative of the impulse divided by the target's mass
	 * 
	 * Operational note: Even though theoretically, the difference in velocities
	 * of two balls should be co-linear with the normal line between them, the
	 * discrete nature of animations means that the point where collision is
	 * detected may not be at the same point as the theoretical contact point.
	 * This method calculates the rebound directions as if the two balls were
	 * the appropriate radii such that they had just contacted
	 * _at_the_point_of_collision_detection_. This may give slightly different
	 * rebound direction than one would calculate if they contacted at the
	 * theoretical point given by their actual radii.
	 * 
	 * @param lSource
	 *            Location of the source ball
	 * @param vSource
	 *            Velocity of the source ball
	 * @param lTarget
	 *            Location of the target ball
	 * @param vTarget
	 *            Velocity of the target ball
	 * @param reducedMass
	 *            Reduced mass of the two balls
	 * @param distance
	 *            Distance between the two balls.
	 * @param deltaR
	 *            The minimum allowed separation(sum of the ball radii) minus the actual separation(distance between ball centers). Should be a
	 *            positive value.  This is the amount of overlap of the balls as measured along the line between their centers.
	 * @return</body>
            </ownedComment>
            <ownedParameter xmi:id="_N2MXIal4EeeGj7EgTaCWlw" name="lSource" type="_N1Fj4Kl4EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N2M-MKl4EeeGj7EgTaCWlw" name="vSource" type="_N1Fj4Kl4EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N2M-Mal4EeeGj7EgTaCWlw" name="lTarget" type="_N1Fj4Kl4EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N2M-Mql4EeeGj7EgTaCWlw" name="vTarget" type="_N1Fj4Kl4EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N2M-M6l4EeeGj7EgTaCWlw" name="reducedMass">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_N2M-NKl4EeeGj7EgTaCWlw" name="distance">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_N2M-Nal4EeeGj7EgTaCWlw" name="deltaR">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_N2M-Nql4EeeGj7EgTaCWlw" type="_N1Lqgql4EeeGj7EgTaCWlw" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_NyBo0Kl4EeeGj7EgTaCWlw" name="CollideStrategy">
          <ownedComment xmi:id="_N2pDF6l4EeeGj7EgTaCWlw">
            <body>@author zihanli
elastic collision behavior.  Uses nudging for rebound positioning.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_N2WvMKl4EeeGj7EgTaCWlw" name="Nudge" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_N2WvMal4EeeGj7EgTaCWlw" value="1.1"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_N1OGwKl4EeeGj7EgTaCWlw" client="_NyBo0Kl4EeeGj7EgTaCWlw" supplier="_QHL-0al3EeeGj7EgTaCWlw" contract="_QHL-0al3EeeGj7EgTaCWlw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N2iVZal4EeeGj7EgTaCWlw" name="updateState" specification="_N1PU4Kl4EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_N2iVZql4EeeGj7EgTaCWlw" name="ball" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N2iVZ6l4EeeGj7EgTaCWlw" name="dispatcher" type="_QGdmEal3EeeGj7EgTaCWlw"/>
            <language>java</language>
            <body>dispatcher.dispatch((IBallCmd) (context, disp) -> {
			// Whatever you want to do with the context Ball!
			if (context != ball) {
				double temp_distance = ball.getLocation().distance(context.getLocation());
				if (temp_distance &lt;= ball.getRadius() + context.getRadius()) {
					double _reducedMass = reducedMass(ball.getRadius() * ball.getRadius(),
							context.getRadius() * context.getRadius());
					Point2D.Double _impulse = impulse(ball.getLocation(), ball.getVel(), context.getLocation(),
							context.getVel(), _reducedMass, temp_distance,
							ball.getRadius() + context.getRadius() - temp_distance);
					updateCollision(ball, context, _impulse.x, _impulse.y, dispatcher);
					//_impulse=impulse(context.getLocation(), context.getVel(),ball.getLocation(), ball.getVel(),
					//		 _reducedMass, temp_distance,ball.getRadius()+context.getRadius()-temp_distance);
					updateCollision(context, ball, -1 * _impulse.x, -1 * _impulse.y, dispatcher);
				}
			}
		});

	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N2iVaKl4EeeGj7EgTaCWlw" name="reducedMass" specification="_NyDeAKl4EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_N2iVaal4EeeGj7EgTaCWlw" name="mSource">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_N2iVaql4EeeGj7EgTaCWlw" name="mTarget">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_N2iVa6l4EeeGj7EgTaCWlw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>if (mSource == Double.POSITIVE_INFINITY)
			return mTarget;
		if (mTarget == Double.POSITIVE_INFINITY)
			return mSource;
		else
			return (mSource * mTarget) / (mSource + mTarget);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N2iVbKl4EeeGj7EgTaCWlw" name="impulse" specification="_N2NlQKl4EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_N2iVbal4EeeGj7EgTaCWlw" name="lSource" type="_N1Fj4Kl4EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N2iVbql4EeeGj7EgTaCWlw" name="vSource" type="_N1Fj4Kl4EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N2iVb6l4EeeGj7EgTaCWlw" name="lTarget" type="_N1Fj4Kl4EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N2iVcKl4EeeGj7EgTaCWlw" name="vTarget" type="_N1Fj4Kl4EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N2iVcal4EeeGj7EgTaCWlw" name="reducedMass">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_N2iVcql4EeeGj7EgTaCWlw" name="distance">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_N2iVc6l4EeeGj7EgTaCWlw" name="deltaR">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_N2iVdKl4EeeGj7EgTaCWlw" type="_N1Lqgql4EeeGj7EgTaCWlw" direction="return"/>
            <language>java</language>
            <body>// Calculate the normal vector, from source to target
		double nx = ((double) (lTarget.x - lSource.x)) / distance;
		double ny = ((double) (lTarget.y - lSource.y)) / distance;

		// delta velocity (speed, actually) in normal direction, source to
		// target
		double dvn = (vTarget.x - vSource.x) * nx + (vTarget.y - vSource.y) * ny;

		// move the source ball beyond collision range of the target ball, along
		// the normal direction.
		lSource.translate((int) Math.ceil(-nx * (Nudge * deltaR)), (int) Math.ceil(-ny * (Nudge * deltaR)));

		return new Point2D.Double(2.0 * reducedMass * dvn * nx, 2.0 * reducedMass * dvn * ny);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N2i8cKl4EeeGj7EgTaCWlw" name="updateCollision" specification="_N1QjAKl4EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_N2i8cal4EeeGj7EgTaCWlw" name="context" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N2i8cql4EeeGj7EgTaCWlw" name="target" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N2i8c6l4EeeGj7EgTaCWlw" name="impX">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_N2i8dKl4EeeGj7EgTaCWlw" name="impY">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_N2i8dal4EeeGj7EgTaCWlw" name="dispatcher" type="_QGdmEal3EeeGj7EgTaCWlw"/>
            <language>java</language>
            <body>int mContext = (int) (context.getRadius() * context.getRadius());
		context.getVel().translate((int) Math.round(impX / mContext), (int) Math.round(impY / mContext));
		context.interactWith(target, dispatcher);
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_NyDeAKl4EeeGj7EgTaCWlw" name="reducedMass" visibility="protected" method="_N2iVaKl4EeeGj7EgTaCWlw">
            <ownedComment xmi:id="_N2pDGKl4EeeGj7EgTaCWlw">
              <body>Returns the reduced mass of the two balls (m1*m2)/(m1+m2) Gives correct
	 * result if one of the balls has infinite mass.
	 * 
	 * @param mSource
	 *            Mass of the source ball
	 * @param mTarget
	 *            Mass of the target ball</body>
            </ownedComment>
            <ownedParameter xmi:id="_NyDeAal4EeeGj7EgTaCWlw" name="mSource">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NyDeAql4EeeGj7EgTaCWlw" name="mTarget">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NyDeA6l4EeeGj7EgTaCWlw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_N1PU4Kl4EeeGj7EgTaCWlw" name="updateState" method="_N2iVZal4EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_N1PU4al4EeeGj7EgTaCWlw" name="ball" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N1PU4ql4EeeGj7EgTaCWlw" name="dispatcher" type="_QGdmEal3EeeGj7EgTaCWlw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_N1QjAKl4EeeGj7EgTaCWlw" name="updateCollision" visibility="protected" method="_N2i8cKl4EeeGj7EgTaCWlw">
            <ownedComment xmi:id="_N2pDGql4EeeGj7EgTaCWlw">
              <body>Updates the velocity of the source ball, given an impulse, then uses the
	 * context's interactWith method to determine the post collision behavior, from the context
	 * ball's perspective. The change in velocity is the impulse divided by the (source) ball's mass. To change
	 * the velocity of the target ball, switch the source and target input
	 * parameters and negate the impulse values.   This will also run the post collision behavior from 
	 * the other perspective.
	 * 
	 * @param context
	 *            The ball to update
	 * @param target
	 *            The ball being collided with
	 * @param impX
	 *            x-coordinate of the impulse
	 * @param impY
	 *            y-coordinate of the impulse</body>
            </ownedComment>
            <ownedParameter xmi:id="_N1RKEKl4EeeGj7EgTaCWlw" name="context" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N1RKEal4EeeGj7EgTaCWlw" name="target" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N1RKEql4EeeGj7EgTaCWlw" name="impX">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_N1RKE6l4EeeGj7EgTaCWlw" name="impY">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_N1RKFKl4EeeGj7EgTaCWlw" name="dispatcher" type="_QGdmEal3EeeGj7EgTaCWlw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_N1RxIal4EeeGj7EgTaCWlw" name="init">
            <ownedParameter xmi:id="_N1RxIql4EeeGj7EgTaCWlw" name="context" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_N2NlQKl4EeeGj7EgTaCWlw" name="impulse" visibility="protected" method="_N2iVbKl4EeeGj7EgTaCWlw">
            <ownedComment xmi:id="_N2pDGal4EeeGj7EgTaCWlw">
              <body>Calculates the impulse (change in momentum) of the collision in the
	 * direction from the source to the target This method calculates the
	 * impulse on the source ball. The impulse on the target ball is the
	 * negative of the result. Also moves source ball out of collision range
	 * along normal direction. The change in velocity of the source ball is the
	 * impulse divided by the source's mass The change in velocity of the target
	 * ball is the negative of the impulse divided by the target's mass
	 * 
	 * Operational note: Even though theoretically, the difference in velocities
	 * of two balls should be co-linear with the normal line between them, the
	 * discrete nature of animations means that the point where collision is
	 * detected may not be at the same point as the theoretical contact point.
	 * This method calculates the rebound directions as if the two balls were
	 * the appropriate radii such that they had just contacted
	 * _at_the_point_of_collision_detection_. This may give slightly different
	 * rebound direction than one would calculate if they contacted at the
	 * theoretical point given by their actual radii.
	 * 
	 * @param lSource
	 *            Location of the source ball
	 * @param vSource
	 *            Velocity of the source ball
	 * @param lTarget
	 *            Location of the target ball
	 * @param vTarget
	 *            Velocity of the target ball
	 * @param reducedMass
	 *            Reduced mass of the two balls
	 * @param distance
	 *            Distance between the two balls.
	 * @param deltaR
	 *            The minimum allowed separation(sum of the ball radii) minus the actual separation(distance between ball centers). Should be a
	 *            positive value.  This is the amount of overlap of the balls as measured along the line between their centers.
	 * @return</body>
            </ownedComment>
            <ownedParameter xmi:id="_N2NlQal4EeeGj7EgTaCWlw" name="lSource" type="_N1Fj4Kl4EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N2NlQql4EeeGj7EgTaCWlw" name="vSource" type="_N1Fj4Kl4EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N2NlQ6l4EeeGj7EgTaCWlw" name="lTarget" type="_N1Fj4Kl4EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N2NlRKl4EeeGj7EgTaCWlw" name="vTarget" type="_N1Fj4Kl4EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N2NlRal4EeeGj7EgTaCWlw" name="reducedMass">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_N2NlRql4EeeGj7EgTaCWlw" name="distance">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_N2OMUKl4EeeGj7EgTaCWlw" name="deltaR">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_N2OMUal4EeeGj7EgTaCWlw" type="_N1Lqgql4EeeGj7EgTaCWlw" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_NyIWgKl4EeeGj7EgTaCWlw" name="ColorStrategy">
          <ownedComment xmi:id="_N2pDG6l4EeeGj7EgTaCWlw">
            <body>@author zihanli
The strategy to change the ball' color</body>
          </ownedComment>
          <interfaceRealization xmi:id="_N1S_QKl4EeeGj7EgTaCWlw" client="_NyIWgKl4EeeGj7EgTaCWlw" supplier="_QHL-0al3EeeGj7EgTaCWlw" contract="_QHL-0al3EeeGj7EgTaCWlw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N2i8dql4EeeGj7EgTaCWlw" name="updateState" specification="_N1UNYKl4EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_N2i8d6l4EeeGj7EgTaCWlw" name="ball" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N2i8eKl4EeeGj7EgTaCWlw" name="dispatcher" type="_QGdmEal3EeeGj7EgTaCWlw"/>
            <language>java</language>
            <body>ball.setColor(Randomizer.Singleton.randomColor());
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_N1UNYKl4EeeGj7EgTaCWlw" name="updateState" method="_N2i8dql4EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_N1UNYal4EeeGj7EgTaCWlw" name="ball" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N1UNYql4EeeGj7EgTaCWlw" name="dispatcher" type="_QGdmEal3EeeGj7EgTaCWlw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_N1U0c6l4EeeGj7EgTaCWlw" name="init">
            <ownedParameter xmi:id="_N1VbgKl4EeeGj7EgTaCWlw" name="context" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_NyKywKl4EeeGj7EgTaCWlw" name="CurveStrategy">
          <ownedComment xmi:id="_N2pDHKl4EeeGj7EgTaCWlw">
            <body>@author zihanli
The strategy to make the ball move in a curve path</body>
          </ownedComment>
          <ownedAttribute xmi:id="_N2XWQal4EeeGj7EgTaCWlw" name="theta" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_N2XWQql4EeeGj7EgTaCWlw" value="Randomizer.Singleton.randomDouble(0, 1)"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_N1WpoKl4EeeGj7EgTaCWlw" client="_NyKywKl4EeeGj7EgTaCWlw" supplier="_QHL-0al3EeeGj7EgTaCWlw" contract="_QHL-0al3EeeGj7EgTaCWlw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N2i8eal4EeeGj7EgTaCWlw" name="updateState" specification="_N1Ye0Kl4EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_N2i8eql4EeeGj7EgTaCWlw" name="ball" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N2i8e6l4EeeGj7EgTaCWlw" name="dispatcher" type="_QGdmEal3EeeGj7EgTaCWlw"/>
            <language>java</language>
            <body>Point oldVel = ball.getVel();
		int velX, velY;
		velX = (int) Math.round(oldVel.getX() * Math.cos(theta) - oldVel.getY() * Math.sin(theta));
		velY = (int) Math.round(oldVel.getY() * Math.cos(theta) + oldVel.getX() * Math.sin(theta));
		ball.setVel(new Point(velX, velY));

	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_N1Ye0Kl4EeeGj7EgTaCWlw" name="updateState" method="_N2i8eal4EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_N1Ye0al4EeeGj7EgTaCWlw" name="ball" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N1Ye0ql4EeeGj7EgTaCWlw" name="dispatcher" type="_QGdmEal3EeeGj7EgTaCWlw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_N1Zs86l4EeeGj7EgTaCWlw" name="init">
            <ownedParameter xmi:id="_N1Zs9Kl4EeeGj7EgTaCWlw" name="context" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_NyNPAKl4EeeGj7EgTaCWlw" name="EatStrategy">
          <ownedComment xmi:id="_N2pqIKl4EeeGj7EgTaCWlw">
            <body>@author zihanli
kills whomever the ball collides with and increases its area by the killed ball's area.</body>
          </ownedComment>
          <interfaceRealization xmi:id="_N1a7EKl4EeeGj7EgTaCWlw" client="_NyNPAKl4EeeGj7EgTaCWlw" supplier="_QHL-0al3EeeGj7EgTaCWlw" contract="_QHL-0al3EeeGj7EgTaCWlw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N2jjgKl4EeeGj7EgTaCWlw" name="init" specification="_N1cwQql4EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_N2jjgal4EeeGj7EgTaCWlw" name="context" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <language>java</language>
            <body>context.setInteractStrategy(new MultiInteractStrategy(context.getInteractStrategy(), new IInteractStrategy() {
			

			@Override
			public void interact(Ball context, Ball target, IDispatcher&lt;IBallCmd> disp) {
				// TODO Auto-generated method stub
				context.setRadius((int) (context.getRadius() + target.getRadius()));
				disp.deleteObserver(target);
			}

		}));

	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_N1biIal4EeeGj7EgTaCWlw" name="updateState">
            <ownedParameter xmi:id="_N1biIql4EeeGj7EgTaCWlw" name="ball" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N1biI6l4EeeGj7EgTaCWlw" name="dispatcher" type="_QGdmEal3EeeGj7EgTaCWlw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_N1cwQql4EeeGj7EgTaCWlw" name="init" method="_N2jjgKl4EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_N1cwQ6l4EeeGj7EgTaCWlw" name="context" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_NyPrQKl4EeeGj7EgTaCWlw" name="HitFlashStrategy">
          <ownedComment xmi:id="_N2pqIal4EeeGj7EgTaCWlw">
            <body>@author zihanli
flashes red color when overlaps with another ball.</body>
          </ownedComment>
          <interfaceRealization xmi:id="_N1dXU6l4EeeGj7EgTaCWlw" client="_NyPrQKl4EeeGj7EgTaCWlw" supplier="_QHL-0al3EeeGj7EgTaCWlw" contract="_QHL-0al3EeeGj7EgTaCWlw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N2jjgql4EeeGj7EgTaCWlw" name="updateState" specification="_N1elcKl4EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_N2jjg6l4EeeGj7EgTaCWlw" name="context" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N2jjhKl4EeeGj7EgTaCWlw" name="dispatcher" type="_QGdmEal3EeeGj7EgTaCWlw"/>
            <language>java</language>
            <body>context.setColor(Color.BLACK);
		//dispatcher.dispatch(new IBallCmd() {});
		dispatcher.dispatch(new IBallCmd() {
			@Override
			public void apply(Ball other, IDispatcher&lt;IBallCmd> disp) {

				if (context != other) {
					if ((context.getRadius() + other.getRadius()) > context.getLocation()
							.distance(other.getLocation())) {
						context.setColor(Color.red);
					}
				}
			}
		}

		);

	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_N1elcKl4EeeGj7EgTaCWlw" name="updateState" method="_N2jjgql4EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_N1elcal4EeeGj7EgTaCWlw" name="context" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N1elcql4EeeGj7EgTaCWlw" name="dispatcher" type="_QGdmEal3EeeGj7EgTaCWlw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_N1fzkKl4EeeGj7EgTaCWlw" name="init">
            <ownedParameter xmi:id="_N1fzkal4EeeGj7EgTaCWlw" name="context" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_NyRgcKl4EeeGj7EgTaCWlw" name="HitMysteryStrategy">
          <interfaceRealization xmi:id="_N1gaoKl4EeeGj7EgTaCWlw" client="_NyRgcKl4EeeGj7EgTaCWlw" supplier="_QHL-0al3EeeGj7EgTaCWlw" contract="_QHL-0al3EeeGj7EgTaCWlw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N2jjhal4EeeGj7EgTaCWlw" name="init" specification="_N1iP0ql4EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_N2jjhql4EeeGj7EgTaCWlw" name="context" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <language>java</language>
            <body>context.setInteractStrategy(new MultiInteractStrategy(context.getInteractStrategy(), new IInteractStrategy() {
			@Override
			public void interact(Ball context, Ball target, IDispatcher&lt;IBallCmd> disp) {
				context.setColor(Randomizer.Singleton.randomColor());
				context.setRadius(Randomizer.Singleton.randomInt(10, 40));
			}

		}));

	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_N1hBsal4EeeGj7EgTaCWlw" name="updateState">
            <ownedParameter xmi:id="_N1hBsql4EeeGj7EgTaCWlw" name="context" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N1hBs6l4EeeGj7EgTaCWlw" name="dispatcher" type="_QGdmEal3EeeGj7EgTaCWlw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_N1iP0ql4EeeGj7EgTaCWlw" name="init" method="_N2jjhal4EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_N1iP06l4EeeGj7EgTaCWlw" name="context" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_NyT8sKl4EeeGj7EgTaCWlw" name="InfectStrategy">
          <ownedComment xmi:id="_N2pqIql4EeeGj7EgTaCWlw">
            <body>@author zihanli
a black-colored ball that will turn any other ball it overlaps with into an Infect ball for its first 50 updates.   
After that, the ball becomes a normal Straight ball.
 *</body>
          </ownedComment>
          <ownedAttribute xmi:id="_N2X9UKl4EeeGj7EgTaCWlw" name="count" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_N2X9Ual4EeeGj7EgTaCWlw" value="0"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_N1i246l4EeeGj7EgTaCWlw" client="_NyT8sKl4EeeGj7EgTaCWlw" supplier="_QHL-0al3EeeGj7EgTaCWlw" contract="_QHL-0al3EeeGj7EgTaCWlw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N2kxoKl4EeeGj7EgTaCWlw" name="updateState" specification="_N1kFAKl4EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_N2kxoal4EeeGj7EgTaCWlw" name="context" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N2kxoql4EeeGj7EgTaCWlw" name="dispatcher" type="_QGdmEal3EeeGj7EgTaCWlw"/>
            <language>java</language>
            <body>if (count++ &lt; 50) {
			context.setColor(Color.BLACK);
			dispatcher.dispatch(new IBallCmd() {


				@Override
				public void apply(Ball other, IDispatcher&lt;IBallCmd> o) {
					// TODO Auto-generated method stub
					if (context != other) {
						if ((context.getRadius() + other.getRadius()) > context.getLocation()
								.distance(other.getLocation())) {
							other.setUpdateStrategy(new InfectStrategy&lt;IBallCmd>());
						}
					}
				}

			});
		} else {
			context.setColor(Randomizer.Singleton.randomColor());
			context.setUpdateStrategy(new StraightStrategy&lt;IBallCmd>());
		}
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_N1kFAKl4EeeGj7EgTaCWlw" name="updateState" method="_N2kxoKl4EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_N1kFAal4EeeGj7EgTaCWlw" name="context" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N1kFAql4EeeGj7EgTaCWlw" name="dispatcher" type="_QGdmEal3EeeGj7EgTaCWlw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_N1ksE6l4EeeGj7EgTaCWlw" name="init">
            <ownedParameter xmi:id="_N1ksFKl4EeeGj7EgTaCWlw" name="context" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_NyWY8Kl4EeeGj7EgTaCWlw" name="KillStrategy">
          <ownedComment xmi:id="_N2pqI6l4EeeGj7EgTaCWlw">
            <body>@author zihanli
deletes other when it collides.</body>
          </ownedComment>
          <interfaceRealization xmi:id="_N1l6MKl4EeeGj7EgTaCWlw" client="_NyWY8Kl4EeeGj7EgTaCWlw" supplier="_QHL-0al3EeeGj7EgTaCWlw" contract="_QHL-0al3EeeGj7EgTaCWlw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N2kxo6l4EeeGj7EgTaCWlw" name="init" specification="_N1nIU6l4EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_N2kxpKl4EeeGj7EgTaCWlw" name="context" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <language>java</language>
            <body>context.setInteractStrategy(new MultiInteractStrategy(context.getInteractStrategy(), new IInteractStrategy() {
			

			@Override
			public void interact(Ball context, Ball target, IDispatcher&lt;IBallCmd> disp) {
				// TODO Auto-generated method stub
				disp.deleteObserver(target);
			}

		}));

	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_N1mhQKl4EeeGj7EgTaCWlw" name="updateState">
            <ownedParameter xmi:id="_N1mhQal4EeeGj7EgTaCWlw" name="ball" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N1mhQql4EeeGj7EgTaCWlw" name="dispatcher" type="_QGdmEal3EeeGj7EgTaCWlw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_N1nIU6l4EeeGj7EgTaCWlw" name="init" method="_N2kxo6l4EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_N1nIVKl4EeeGj7EgTaCWlw" name="context" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_NyYOIKl4EeeGj7EgTaCWlw" name="MultiInteractStrategy">
          <ownedComment xmi:id="_N2pqJKl4EeeGj7EgTaCWlw">
            <body>@author zihanli
Composition design pattern</body>
          </ownedComment>
          <ownedAttribute xmi:id="_N2YkYKl4EeeGj7EgTaCWlw" name="strategy1" visibility="private" type="_N1InMal4EeeGj7EgTaCWlw" association="_N2y0EKl4EeeGj7EgTaCWlw"/>
          <ownedAttribute xmi:id="_N2pqJal4EeeGj7EgTaCWlw" name="strategy2" visibility="private" type="_N1InMal4EeeGj7EgTaCWlw" association="_N20CMal4EeeGj7EgTaCWlw"/>
          <interfaceRealization xmi:id="_N2OzYKl4EeeGj7EgTaCWlw" client="_NyYOIKl4EeeGj7EgTaCWlw" supplier="_N1InMal4EeeGj7EgTaCWlw" contract="_N1InMal4EeeGj7EgTaCWlw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N2lYsKl4EeeGj7EgTaCWlw" name="MultiInteractStrategy" specification="_N2Tr4Kl4EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_N2lYsal4EeeGj7EgTaCWlw" name="iInteractStrategy2" type="_N1InMal4EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N2lYsql4EeeGj7EgTaCWlw" name="iInteractStrategy" type="_N1InMal4EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N2lYs6l4EeeGj7EgTaCWlw" type="_NyYOIKl4EeeGj7EgTaCWlw" direction="return"/>
            <language>java</language>
            <body>strategy1 = iInteractStrategy2;
		strategy2 = iInteractStrategy;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N2lYtKl4EeeGj7EgTaCWlw" name="interact" specification="_N1oWcKl4EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_N2lYtal4EeeGj7EgTaCWlw" name="context" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N2lYtql4EeeGj7EgTaCWlw" name="target" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N2lYt6l4EeeGj7EgTaCWlw" name="disp" type="_QGdmEal3EeeGj7EgTaCWlw"/>
            <language>java</language>
            <body>strategy1.interact(context, target, disp);
		strategy2.interact(context, target, disp);

	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_N1oWcKl4EeeGj7EgTaCWlw" name="interact" method="_N2lYtKl4EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_N1oWcal4EeeGj7EgTaCWlw" name="context" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N1oWcql4EeeGj7EgTaCWlw" name="target" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N1oWc6l4EeeGj7EgTaCWlw" name="disp" type="_QGdmEal3EeeGj7EgTaCWlw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_N2Tr4Kl4EeeGj7EgTaCWlw" name="MultiInteractStrategy" visibility="package" method="_N2lYsKl4EeeGj7EgTaCWlw">
            <eAnnotations xmi:id="_N2US8Kl4EeeGj7EgTaCWlw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_N2US8al4EeeGj7EgTaCWlw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_N2Tr4al4EeeGj7EgTaCWlw" name="iInteractStrategy2" type="_N1InMal4EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N2Tr4ql4EeeGj7EgTaCWlw" name="iInteractStrategy" type="_N1InMal4EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N2US8ql4EeeGj7EgTaCWlw" type="_NyYOIKl4EeeGj7EgTaCWlw" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_NyaqYKl4EeeGj7EgTaCWlw" name="MultiStrategy">
          <ownedComment xmi:id="_N2qRMal4EeeGj7EgTaCWlw">
            <body>@author zihanli
Composition design pattern</body>
          </ownedComment>
          <ownedAttribute xmi:id="_N2ZygKl4EeeGj7EgTaCWlw" name="strategy1" visibility="private" type="_QHL-0al3EeeGj7EgTaCWlw" association="_N2y0E6l4EeeGj7EgTaCWlw"/>
          <ownedAttribute xmi:id="_N2qRMql4EeeGj7EgTaCWlw" name="strategy2" visibility="private" type="_QHL-0al3EeeGj7EgTaCWlw" association="_N20pQal4EeeGj7EgTaCWlw"/>
          <interfaceRealization xmi:id="_N1qLoKl4EeeGj7EgTaCWlw" client="_NyaqYKl4EeeGj7EgTaCWlw" supplier="_QHL-0al3EeeGj7EgTaCWlw" contract="_QHL-0al3EeeGj7EgTaCWlw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N2lYuKl4EeeGj7EgTaCWlw" name="MultiStrategy" specification="_N1qysal4EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_N2lYual4EeeGj7EgTaCWlw" name="s1" type="_QHL-0al3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N2lYuql4EeeGj7EgTaCWlw" name="s2" type="_QHL-0al3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N2lYu6l4EeeGj7EgTaCWlw" type="_NyaqYKl4EeeGj7EgTaCWlw" direction="return"/>
            <language>java</language>
            <body>strategy1 = s1;
		strategy2 = s2;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N2l_wKl4EeeGj7EgTaCWlw" name="updateState" specification="_N1sA0al4EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_N2l_wal4EeeGj7EgTaCWlw" name="ball" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N2l_wql4EeeGj7EgTaCWlw" name="dispatcher" type="_QGdmEal3EeeGj7EgTaCWlw"/>
            <language>java</language>
            <body>strategy1.updateState(ball, dispatcher);
		strategy2.updateState(ball, dispatcher);

	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N2l_w6l4EeeGj7EgTaCWlw" name="init" specification="_N1tO86l4EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_N2l_xKl4EeeGj7EgTaCWlw" name="context" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <language>java</language>
            <body>strategy1.init(context);
		strategy2.init(context);

	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_N1qysal4EeeGj7EgTaCWlw" name="MultiStrategy" method="_N2lYuKl4EeeGj7EgTaCWlw">
            <eAnnotations xmi:id="_N1rZwKl4EeeGj7EgTaCWlw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_N1rZwal4EeeGj7EgTaCWlw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_N1qysql4EeeGj7EgTaCWlw" name="s1" type="_QHL-0al3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N1qys6l4EeeGj7EgTaCWlw" name="s2" type="_QHL-0al3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N1rZwql4EeeGj7EgTaCWlw" type="_NyaqYKl4EeeGj7EgTaCWlw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_N1sA0al4EeeGj7EgTaCWlw" name="updateState" method="_N2l_wKl4EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_N1sA0ql4EeeGj7EgTaCWlw" name="ball" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N1sA06l4EeeGj7EgTaCWlw" name="dispatcher" type="_QGdmEal3EeeGj7EgTaCWlw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_N1tO86l4EeeGj7EgTaCWlw" name="init" method="_N2l_w6l4EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_N1tO9Kl4EeeGj7EgTaCWlw" name="context" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_NydGoKl4EeeGj7EgTaCWlw" name="OverlapStrategy">
          <ownedComment xmi:id="_N2q4Qql4EeeGj7EgTaCWlw">
            <body>@author zihanli
Detects if the ball overlaps with any other balls.</body>
          </ownedComment>
          <interfaceRealization xmi:id="_N1udEKl4EeeGj7EgTaCWlw" client="_NydGoKl4EeeGj7EgTaCWlw" supplier="_QHL-0al3EeeGj7EgTaCWlw" contract="_QHL-0al3EeeGj7EgTaCWlw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N2l_xal4EeeGj7EgTaCWlw" name="updateState" specification="_N1vEIKl4EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_N2l_xql4EeeGj7EgTaCWlw" name="context" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N2l_x6l4EeeGj7EgTaCWlw" name="dispatcher" type="_QGdmEal3EeeGj7EgTaCWlw"/>
            <language>java</language>
            <body>dispatcher.dispatch(new IBallCmd() {

			@Override
			public void apply(Ball other, IDispatcher&lt;IBallCmd> disp) {

				if (context != other) {
					if ((context.getRadius() + other.getRadius()) > context.getLocation()
							.distance(other.getLocation())) {
						other.interactWith(context, dispatcher);
					}
				}
			}

		});

	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_N1vEIKl4EeeGj7EgTaCWlw" name="updateState" method="_N2l_xal4EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_N1vEIal4EeeGj7EgTaCWlw" name="context" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N1vEIql4EeeGj7EgTaCWlw" name="dispatcher" type="_QGdmEal3EeeGj7EgTaCWlw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_N1wSQKl4EeeGj7EgTaCWlw" name="init">
            <ownedParameter xmi:id="_N1wSQal4EeeGj7EgTaCWlw" name="context" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_Nye70Kl4EeeGj7EgTaCWlw" name="PartyStrategy">
          <ownedComment xmi:id="_N2q4Q6l4EeeGj7EgTaCWlw">
            <body>The PartyStrategy class will have a ball that &quot;parties&quot; by rapidly changing 
color and velocity. After a while, the ball gets tired and its color becomes
constant and velocity is constant and quite low. However, when a party ball
touches another one, it starts partying again.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_N2aZkql4EeeGj7EgTaCWlw" name="count" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_N2aZk6l4EeeGj7EgTaCWlw" value="0"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_N1w5Uql4EeeGj7EgTaCWlw" client="_Nye70Kl4EeeGj7EgTaCWlw" supplier="_QHL-0al3EeeGj7EgTaCWlw" contract="_QHL-0al3EeeGj7EgTaCWlw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N2mm0Kl4EeeGj7EgTaCWlw" name="updateState" specification="_N1xgYal4EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_N2mm0al4EeeGj7EgTaCWlw" name="context" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N2mm0ql4EeeGj7EgTaCWlw" name="dispatcher" type="_QGdmEal3EeeGj7EgTaCWlw"/>
            <language>java</language>
            <body>context.setVel(new Point(Randomizer.Singleton.randomInt(-10, 10),
				Randomizer.Singleton.randomInt(-10, 10)));
		
		if (count++ &lt; 50) {
			
			context.setColor(Randomizer.Singleton.randomColor());
			dispatcher.dispatch(new IBallCmd() {

				@Override
				public void apply(Ball other, IDispatcher&lt;IBallCmd> disp) {

					if (context != other) {
						
						if ((context.getRadius() + other.getRadius()) > context.getLocation()
								.distance(other.getLocation())) {
							other.setUpdateStrategy(new PartyStrategy&lt;IBallCmd>());
						}
						
					}
					
				}

			});
			
		} else {
			
			context.setVel(new Point(Randomizer.Singleton.randomInt(-2, 2),
					Randomizer.Singleton.randomInt(-2, 2)));
			context.setColor(Randomizer.Singleton.randomColor());
			context.setUpdateStrategy(new StraightStrategy&lt;IBallCmd>());
			
		}
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N2mm06l4EeeGj7EgTaCWlw" name="init" specification="_N1yHcal4EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_N2mm1Kl4EeeGj7EgTaCWlw" name="context" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <language>java</language>
            <body>//
		
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_N1xgYal4EeeGj7EgTaCWlw" name="updateState" method="_N2mm0Kl4EeeGj7EgTaCWlw">
            <ownedComment xmi:id="_N2q4RKl4EeeGj7EgTaCWlw">
              <body>The update method for the ball, it will be in party mode for 50 ticks and
	 * then will exit party mode until a friend comes to reinvigorate it.</body>
            </ownedComment>
            <ownedParameter xmi:id="_N1xgYql4EeeGj7EgTaCWlw" name="context" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N1xgY6l4EeeGj7EgTaCWlw" name="dispatcher" type="_QGdmEal3EeeGj7EgTaCWlw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_N1yHcal4EeeGj7EgTaCWlw" name="init" method="_N2mm06l4EeeGj7EgTaCWlw">
            <ownedComment xmi:id="_N2q4Ral4EeeGj7EgTaCWlw">
              <body>The init method is not utilized here.</body>
            </ownedComment>
            <ownedParameter xmi:id="_N1yHcql4EeeGj7EgTaCWlw" name="context" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_NyhYEKl4EeeGj7EgTaCWlw" name="SimilarRadiusStrategy">
          <ownedComment xmi:id="_N2q4Rql4EeeGj7EgTaCWlw">
            <body>
@author zihanli
to detect if there is any ball that has the similar radius
 *</body>
          </ownedComment>
          <interfaceRealization xmi:id="_N1yugKl4EeeGj7EgTaCWlw" client="_NyhYEKl4EeeGj7EgTaCWlw" supplier="_QHL-0al3EeeGj7EgTaCWlw" contract="_QHL-0al3EeeGj7EgTaCWlw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N2mm1al4EeeGj7EgTaCWlw" name="updateState" specification="_N1zVkal4EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_N2mm1ql4EeeGj7EgTaCWlw" name="ball" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N2mm16l4EeeGj7EgTaCWlw" name="dispatcher" type="_QGdmEal3EeeGj7EgTaCWlw"/>
            <language>java</language>
            <body>dispatcher.dispatch(new IBallCmd() {

			@Override
			public void apply(Ball other, IDispatcher&lt;IBallCmd> disp) {
				if(ball!=other&amp;&amp;Math.abs(ball.getRadius()-other.getRadius())&lt;1)
				{
					ball.interactWith(other, disp);
					other.interactWith(ball, disp);
					ball.setRadius((int)Randomizer.Singleton.randomInt(5, 20));
				}
			}
		});

	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_N1zVkal4EeeGj7EgTaCWlw" name="updateState" method="_N2mm1al4EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_N1zVkql4EeeGj7EgTaCWlw" name="ball" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N1zVk6l4EeeGj7EgTaCWlw" name="dispatcher" type="_QGdmEal3EeeGj7EgTaCWlw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_N10jsql4EeeGj7EgTaCWlw" name="init">
            <ownedParameter xmi:id="_N10js6l4EeeGj7EgTaCWlw" name="context" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_NyimMKl4EeeGj7EgTaCWlw" name="SpawnStrategy">
          <ownedComment xmi:id="_N2q4R6l4EeeGj7EgTaCWlw">
            <body>@author zihanli
adds an identical ball whenever it overlaps with another ball.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_N2bAoal4EeeGj7EgTaCWlw" name="count" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_N2bAoql4EeeGj7EgTaCWlw" value="0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_N2bnsal4EeeGj7EgTaCWlw" name="delay" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_N2bnsql4EeeGj7EgTaCWlw" value="100"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_N11Kwql4EeeGj7EgTaCWlw" client="_NyimMKl4EeeGj7EgTaCWlw" supplier="_QHL-0al3EeeGj7EgTaCWlw" contract="_QHL-0al3EeeGj7EgTaCWlw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N2nN4Kl4EeeGj7EgTaCWlw" name="updateState" specification="_N11x0al4EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_N2nN4al4EeeGj7EgTaCWlw" name="context" type="_QGbJ0al3EeeGj7EgTaCWlw">
              <eAnnotations xmi:id="_N2nN4ql4EeeGj7EgTaCWlw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_N2nN46l4EeeGj7EgTaCWlw" key="final"/>
              </eAnnotations>
            </ownedParameter>
            <ownedParameter xmi:id="_N2nN5Kl4EeeGj7EgTaCWlw" name="dispatcher" type="_QGdmEal3EeeGj7EgTaCWlw"/>
            <language>java</language>
            <body>if (delay &lt; count++) {
			dispatcher.dispatch(new IBallCmd() {

				@Override
				public void apply(Ball other, IDispatcher&lt;IBallCmd> disp) {

					if (count != 0 &amp;&amp; context != other) {
						if ((context.getRadius() + other.getRadius()) > context.getLocation()
								.distance(other.getLocation())) {
							disp.addObserver(new Ball(new Point(context.getLocation()), (int) context.getRadius(),
									new Point(-context.getVel().x + 1, -context.getVel().y + 1), context.getColor(),
									context.getCanvas(), new SpawnStrategy&lt;IBallCmd>(), context.getPaintStrategy()));
							count = 0;
							delay *= 5;
						}
					}
				}

			});
		}
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_N11x0al4EeeGj7EgTaCWlw" name="updateState" method="_N2nN4Kl4EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_N11x0ql4EeeGj7EgTaCWlw" name="context" type="_QGbJ0al3EeeGj7EgTaCWlw">
              <eAnnotations xmi:id="_N12Y4al4EeeGj7EgTaCWlw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_N12Y4ql4EeeGj7EgTaCWlw" key="final"/>
              </eAnnotations>
            </ownedParameter>
            <ownedParameter xmi:id="_N11x06l4EeeGj7EgTaCWlw" name="dispatcher" type="_QGdmEal3EeeGj7EgTaCWlw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_N12_86l4EeeGj7EgTaCWlw" name="init">
            <ownedParameter xmi:id="_N12_9Kl4EeeGj7EgTaCWlw" name="context" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_NykbYKl4EeeGj7EgTaCWlw" name="SpeedingStrategy">
          <ownedComment xmi:id="_N2q4SKl4EeeGj7EgTaCWlw">
            <body>@author zihanli
The strategy to make the ball move with a random speed</body>
          </ownedComment>
          <ownedAttribute xmi:id="_N2bntKl4EeeGj7EgTaCWlw" name="MAX_SPEED" visibility="private" isLeaf="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_N2cOwKl4EeeGj7EgTaCWlw" value="30"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_N2cOwql4EeeGj7EgTaCWlw" name="MIN_SPEED" visibility="private" isLeaf="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_N2cOw6l4EeeGj7EgTaCWlw" value="5"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_N2c10Kl4EeeGj7EgTaCWlw" name="speedingUp" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_N2c10al4EeeGj7EgTaCWlw" value="true"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_N14OEKl4EeeGj7EgTaCWlw" client="_NykbYKl4EeeGj7EgTaCWlw" supplier="_QHL-0al3EeeGj7EgTaCWlw" contract="_QHL-0al3EeeGj7EgTaCWlw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N2nN5al4EeeGj7EgTaCWlw" name="updateState" specification="_N141Ial4EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_N2nN5ql4EeeGj7EgTaCWlw" name="ball" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N2nN56l4EeeGj7EgTaCWlw" name="dispatcher" type="_QGdmEal3EeeGj7EgTaCWlw"/>
            <language>java</language>
            <body>int acceleration = speedingUp ? 1 : -1;

		// Save for convenience
		int oldvelX = ball.getVel().x;
		int oldvelY = ball.getVel().y;

		// Change velocities
		int velX = (oldvelX &lt; 0) ? oldvelX - acceleration : oldvelX + acceleration;
		int velY = (oldvelY &lt; 0) ? oldvelY - acceleration : oldvelY + acceleration;

		// Stop speeding up eventually
		if (Math.abs(velX) > MAX_SPEED &amp;&amp; Math.abs(velY) > MAX_SPEED) {
			speedingUp = false;
		} else if (Math.abs(velX) &lt; MIN_SPEED &amp;&amp; Math.abs(velY) &lt; MIN_SPEED) {
			speedingUp = true;
		}
		ball.setVel(new Point(velX, velY));

	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_N141Ial4EeeGj7EgTaCWlw" name="updateState" method="_N2nN5al4EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_N141Iql4EeeGj7EgTaCWlw" name="ball" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N141I6l4EeeGj7EgTaCWlw" name="dispatcher" type="_QGdmEal3EeeGj7EgTaCWlw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_N16DQql4EeeGj7EgTaCWlw" name="init">
            <ownedParameter xmi:id="_N16DQ6l4EeeGj7EgTaCWlw" name="context" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_Nym3oKl4EeeGj7EgTaCWlw" name="StopStrategy">
          <ownedComment xmi:id="_N2q4Sal4EeeGj7EgTaCWlw">
            <body>@author zihanli
a strategy that only implements the interaction
 *
@param &lt;TDispMsg></body>
          </ownedComment>
          <interfaceRealization xmi:id="_N17RYKl4EeeGj7EgTaCWlw" client="_Nym3oKl4EeeGj7EgTaCWlw" supplier="_QHL-0al3EeeGj7EgTaCWlw" contract="_QHL-0al3EeeGj7EgTaCWlw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N2nN6Kl4EeeGj7EgTaCWlw" name="init" specification="_N19Gkql4EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_N2nN6al4EeeGj7EgTaCWlw" name="context" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <language>java</language>
            <body>context.setInteractStrategy(new MultiInteractStrategy(context.getInteractStrategy(), new IInteractStrategy() {
			

			@Override
			public void interact(Ball context, Ball target, IDispatcher&lt;IBallCmd> disp) {
				// TODO Auto-generated method stub
				context.setVel(new Point(0,0));
				
			}

		}));
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_N174cKl4EeeGj7EgTaCWlw" name="updateState">
            <ownedParameter xmi:id="_N174cal4EeeGj7EgTaCWlw" name="ball" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N174cql4EeeGj7EgTaCWlw" name="dispatcher" type="_QGdmEal3EeeGj7EgTaCWlw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_N19Gkql4EeeGj7EgTaCWlw" name="init" method="_N2nN6Kl4EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_N19Gk6l4EeeGj7EgTaCWlw" name="context" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_NypT4Kl4EeeGj7EgTaCWlw" name="StraightStrategy">
          <ownedComment xmi:id="_N2q4Sql4EeeGj7EgTaCWlw">
            <body>@author zihanli
The strategy to make the ball move in a straight path</body>
          </ownedComment>
          <interfaceRealization xmi:id="_N19to6l4EeeGj7EgTaCWlw" client="_NypT4Kl4EeeGj7EgTaCWlw" supplier="_QHL-0al3EeeGj7EgTaCWlw" contract="_QHL-0al3EeeGj7EgTaCWlw"/>
          <ownedOperation xmi:id="_N1-7wal4EeeGj7EgTaCWlw" name="updateState">
            <ownedParameter xmi:id="_N1-7wql4EeeGj7EgTaCWlw" name="ball" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N1_i0Kl4EeeGj7EgTaCWlw" name="dispatcher" type="_QGdmEal3EeeGj7EgTaCWlw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_N2AJ4al4EeeGj7EgTaCWlw" name="init">
            <ownedParameter xmi:id="_N2AJ4ql4EeeGj7EgTaCWlw" name="context" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_NyuMYKl4EeeGj7EgTaCWlw" name="sPathStrategy">
          <ownedComment xmi:id="_N2rfUql4EeeGj7EgTaCWlw">
            <body>@author GPS
The strategy to make the ball move in S path</body>
          </ownedComment>
          <ownedAttribute xmi:id="_N2fSEKl4EeeGj7EgTaCWlw" name="i" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_N2fSEal4EeeGj7EgTaCWlw" value="1"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_N2fSE6l4EeeGj7EgTaCWlw" name="turnLeft" visibility="package">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_N2f5IKl4EeeGj7EgTaCWlw" value="true"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_N2G3kql4EeeGj7EgTaCWlw" client="_NyuMYKl4EeeGj7EgTaCWlw" supplier="_QHL-0al3EeeGj7EgTaCWlw" contract="_QHL-0al3EeeGj7EgTaCWlw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N2n09al4EeeGj7EgTaCWlw" name="updateState" specification="_N2Heoal4EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_N2n09ql4EeeGj7EgTaCWlw" name="ball" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N2n096l4EeeGj7EgTaCWlw" name="dispatcher" type="_QGdmEal3EeeGj7EgTaCWlw"/>
            <language>java</language>
            <body>if (++i % 3 == 0)
			turnLeft = (turnLeft ? false : true);
		double theta = 0.7;
		theta = (turnLeft ? theta : -theta);
		Point oldVel = ball.getVel();
		int velX, velY;
		velX = (int) Math.round(oldVel.getX() * Math.cos(theta) - oldVel.getY() * Math.sin(theta));
		velY = (int) Math.round(oldVel.getY() * Math.cos(theta) + oldVel.getX() * Math.sin(theta));
		ball.setVel(new Point(velX, velY));

	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_N2Heoal4EeeGj7EgTaCWlw" name="updateState" method="_N2n09al4EeeGj7EgTaCWlw">
            <ownedParameter xmi:id="_N2IFsKl4EeeGj7EgTaCWlw" name="ball" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
            <ownedParameter xmi:id="_N2IFsal4EeeGj7EgTaCWlw" name="dispatcher" type="_QGdmEal3EeeGj7EgTaCWlw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_N2Isw6l4EeeGj7EgTaCWlw" name="init">
            <ownedParameter xmi:id="_N2IsxKl4EeeGj7EgTaCWlw" name="context" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_N2xl8Kl4EeeGj7EgTaCWlw" name="" memberEnd="_N2xl8al4EeeGj7EgTaCWlw _N2VhEKl4EeeGj7EgTaCWlw">
          <ownedEnd xmi:id="_N2xl8al4EeeGj7EgTaCWlw" name="" type="_Nx330Kl4EeeGj7EgTaCWlw" association="_N2xl8Kl4EeeGj7EgTaCWlw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_N2y0EKl4EeeGj7EgTaCWlw" name="" memberEnd="_N2y0Eal4EeeGj7EgTaCWlw _N2YkYKl4EeeGj7EgTaCWlw">
          <ownedEnd xmi:id="_N2y0Eal4EeeGj7EgTaCWlw" name="" type="_NyYOIKl4EeeGj7EgTaCWlw" association="_N2y0EKl4EeeGj7EgTaCWlw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_N2y0E6l4EeeGj7EgTaCWlw" name="" memberEnd="_N2y0FKl4EeeGj7EgTaCWlw _N2ZygKl4EeeGj7EgTaCWlw">
          <ownedEnd xmi:id="_N2y0FKl4EeeGj7EgTaCWlw" name="" type="_NyaqYKl4EeeGj7EgTaCWlw" association="_N2y0E6l4EeeGj7EgTaCWlw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_N2zbIal4EeeGj7EgTaCWlw" name="" memberEnd="_N2zbIql4EeeGj7EgTaCWlw _N2eD8al4EeeGj7EgTaCWlw">
          <ownedEnd xmi:id="_N2zbIql4EeeGj7EgTaCWlw" name="" type="_QHKJoal3EeeGj7EgTaCWlw" association="_N2zbIal4EeeGj7EgTaCWlw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_N20CMal4EeeGj7EgTaCWlw" name="" memberEnd="_N20CMql4EeeGj7EgTaCWlw _N2pqJal4EeeGj7EgTaCWlw">
          <ownedEnd xmi:id="_N20CMql4EeeGj7EgTaCWlw" name="" type="_NyYOIKl4EeeGj7EgTaCWlw" association="_N20CMal4EeeGj7EgTaCWlw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_N20pQal4EeeGj7EgTaCWlw" name="" memberEnd="_N20pQql4EeeGj7EgTaCWlw _N2qRMql4EeeGj7EgTaCWlw">
          <ownedEnd xmi:id="_N20pQql4EeeGj7EgTaCWlw" name="" type="_NyaqYKl4EeeGj7EgTaCWlw" association="_N20pQal4EeeGj7EgTaCWlw"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_QD5aQKl3EeeGj7EgTaCWlw" name="IModel2ViewAdapter">
        <ownedComment xmi:id="_QIPHs6l3EeeGj7EgTaCWlw">
          <body>Interface that goes from the model to the view that enables the model to talk to the view</body>
        </ownedComment>
        <ownedAttribute xmi:id="_QD6BUal3EeeGj7EgTaCWlw" name="NULL_OBJECT" isLeaf="true" isStatic="true" type="_QD5aQKl3EeeGj7EgTaCWlw" isReadOnly="true" association="_QIat4al3EeeGj7EgTaCWlw">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_QD6oYKl3EeeGj7EgTaCWlw" value="new IModel2ViewAdapter() {&#xA;&#x9;&#x9;public void update() {&#xA;&#x9;&#x9;}&#xA;&#x9;}"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_QD6BUKl3EeeGj7EgTaCWlw" name="update">
          <ownedComment xmi:id="_QIPHtKl3EeeGj7EgTaCWlw">
            <body>The method that tells the view to update</body>
          </ownedComment>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_QEGOkKl3EeeGj7EgTaCWlw" name="BallModel">
        <ownedComment xmi:id="_QIPuw6l3EeeGj7EgTaCWlw">
          <body>@author zihanli,yiranwei
The model that drives the view MainFrame</body>
        </ownedComment>
        <ownedAttribute xmi:id="_QHhWAKl3EeeGj7EgTaCWlw" name="_model2ViewAdpt" visibility="private" type="_QD5aQKl3EeeGj7EgTaCWlw" association="_QIcjEal3EeeGj7EgTaCWlw">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_QHhWAal3EeeGj7EgTaCWlw" value="IModel2ViewAdapter.NULL_OBJECT"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_QHh9Eal3EeeGj7EgTaCWlw" name="_timeSlice1" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_QHh9Eql3EeeGj7EgTaCWlw" value="50"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_QHikIal3EeeGj7EgTaCWlw" name="_timeSlice2" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_QHikIql3EeeGj7EgTaCWlw" value="50"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_QHjLMal3EeeGj7EgTaCWlw" name="_dispatcher" visibility="private" type="_QGdmEal3EeeGj7EgTaCWlw" association="_QIdKIal3EeeGj7EgTaCWlw">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_QHjyQal3EeeGj7EgTaCWlw" value="new SetDispatcherSequential&lt;IBallCmd>()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_QHkZUKl3EeeGj7EgTaCWlw" name="_timer" visibility="private" type="_QGZ7sKl3EeeGj7EgTaCWlw" association="_QIdxMal3EeeGj7EgTaCWlw">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_QHkZUal3EeeGj7EgTaCWlw" value="new Timer(_timeSlice1, (e) -> _model2ViewAdpt.update())"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_QHlAYal3EeeGj7EgTaCWlw" name="_timer1" visibility="private" type="_QGZ7sKl3EeeGj7EgTaCWlw" association="_QIeYQal3EeeGj7EgTaCWlw">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_QHlAYql3EeeGj7EgTaCWlw" value="new Timer(_timeSlice2, (e) -> move_update())"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_QHlncal3EeeGj7EgTaCWlw" name="_errorStrategyFac" type="_QHJikKl3EeeGj7EgTaCWlw" association="_QIe_Ual3EeeGj7EgTaCWlw"/>
        <ownedAttribute xmi:id="_QHmOgql3EeeGj7EgTaCWlw" name="_switcher" visibility="private" type="_QHKJoal3EeeGj7EgTaCWlw" association="_QIfmYKl3EeeGj7EgTaCWlw">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_QHm1kal3EeeGj7EgTaCWlw" value="new SwitchStrategy&lt;IBallCmd>()"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QIJoIKl3EeeGj7EgTaCWlw" name="update" specification="_QHLXwKl3EeeGj7EgTaCWlw">
          <ownedParameter xmi:id="_QIJoIal3EeeGj7EgTaCWlw" name="g" type="_QGTOAal3EeeGj7EgTaCWlw"/>
          <language>java</language>
          <body>_dispatcher.dispatch((IBallCmd) (context, disp) -> {
			context.paint(g);
			// Whatever you want to do with the context Ball!
		});
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QIJoIql3EeeGj7EgTaCWlw" name="move_update" specification="_QEHcsKl3EeeGj7EgTaCWlw">
          <language>java</language>
          <body>_dispatcher.dispatch((IBallCmd) (context, disp) -> {
			context.updateState(disp);
			context.move();
			context.bounce();

		});
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QIJoI6l3EeeGj7EgTaCWlw" name="getSwitchStrategy" specification="_QEIDwKl3EeeGj7EgTaCWlw">
          <ownedParameter xmi:id="_QIJoJKl3EeeGj7EgTaCWlw" type="_QHKJoal3EeeGj7EgTaCWlw" direction="return"/>
          <language>java</language>
          <body>return _switcher;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QIKPMKl3EeeGj7EgTaCWlw" name="swichSwichStrategy" specification="_QHNM8al3EeeGj7EgTaCWlw">
          <ownedParameter xmi:id="_QIKPMal3EeeGj7EgTaCWlw" name="newStrategy" type="_QHL-0al3EeeGj7EgTaCWlw"/>
          <language>java</language>
          <body>_switcher.setStrategy(newStrategy);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QIKPMql3EeeGj7EgTaCWlw" name="BallModel" specification="_QGgpYKl3EeeGj7EgTaCWlw">
          <ownedParameter xmi:id="_QIKPM6l3EeeGj7EgTaCWlw" name="model2ViewAdpt" type="_QD5aQKl3EeeGj7EgTaCWlw"/>
          <ownedParameter xmi:id="_QIKPNKl3EeeGj7EgTaCWlw" type="_QEGOkKl3EeeGj7EgTaCWlw" direction="return"/>
          <language>java</language>
          <body>_model2ViewAdpt = model2ViewAdpt;
		_errorStrategyFac = new IStrategyFac&lt;IBallCmd>() {

			@Override
			/**
			 * Make the beeping error strategy
			 * @return  An instance of a beeping error strategy
			 */
			public IUpdateStrategy&lt;IBallCmd> make() {
				return new IUpdateStrategy&lt;IBallCmd>() {
					private int count = 0; // update counter
					

					@Override
					public void init(Ball context) {
						// TODO Auto-generated method stub

					}

					/**
					 * Beep the speaker every 25 updates
					 */
					@Override
					public void updateState(Ball ball, IDispatcher&lt;IBallCmd> dispatcher) {
						// TODO Auto-generated method stub
						if (25 &lt; count++) {
							java.awt.Toolkit.getDefaultToolkit().beep();
							count = 0;
						}
						
					}
				};
			}

		};
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QIK2QKl3EeeGj7EgTaCWlw" name="deleteBalls" specification="_QELHEKl3EeeGj7EgTaCWlw">
          <language>java</language>
          <body>_dispatcher.deleteObservers();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QIK2Qal3EeeGj7EgTaCWlw" name="makeStrategyFac" specification="_QELuIKl3EeeGj7EgTaCWlw">
          <ownedParameter xmi:id="_QIK2Qql3EeeGj7EgTaCWlw" name="classname">
            <eAnnotations xmi:id="_QIK2Q6l3EeeGj7EgTaCWlw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_QIK2RKl3EeeGj7EgTaCWlw" key="final"/>
            </eAnnotations>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_QIK2Ral3EeeGj7EgTaCWlw" type="_QHJikKl3EeeGj7EgTaCWlw" direction="return"/>
          <language>java</language>
          <body>IStrategyFac&lt;IBallCmd> strategyFac = new IStrategyFac&lt;IBallCmd>() {
			/**
			 * Instantiate a strategy corresponding to the given class name.
			 * @return An IUpdateStrategy instance
			 */
			public IUpdateStrategy&lt;IBallCmd> make() {
				return loadStrategy(fixName(classname)) == null ? new StraightStrategy&lt;IBallCmd>()
						: loadStrategy(fixName(classname));
			}

			public String toString() {
				return classname;
			}
		};
		return strategyFac;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QIK2Rql3EeeGj7EgTaCWlw" name="makePaintFac" specification="_QEOKYKl3EeeGj7EgTaCWlw">
          <ownedParameter xmi:id="_QIK2R6l3EeeGj7EgTaCWlw" name="classname">
            <eAnnotations xmi:id="_QIK2SKl3EeeGj7EgTaCWlw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_QIK2Sal3EeeGj7EgTaCWlw" key="final"/>
            </eAnnotations>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_QIK2Sql3EeeGj7EgTaCWlw" type="_QHObEal3EeeGj7EgTaCWlw" direction="return"/>
          <language>java</language>
          <body>IPaintFac strategyFac = new IPaintFac() {
			/**
			 * Instantiate a strategy corresponding to the given class name.
			 * @return An IPaintStrategy instance
			 */
			public IPaintStrategy make() {
				return loadPaintStrategy(fixPaintName(classname)) == null ? new BallPaintStrategy()
						: loadPaintStrategy(fixPaintName(classname));
			}

			public String toString() {
				return classname;
			}
		};
		return strategyFac;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QILdUKl3EeeGj7EgTaCWlw" name="combineStrategyFacs" specification="_QHQQQKl3EeeGj7EgTaCWlw">
          <ownedParameter xmi:id="_QILdUal3EeeGj7EgTaCWlw" name="stratFac1" type="_QHJikKl3EeeGj7EgTaCWlw">
            <eAnnotations xmi:id="_QILdUql3EeeGj7EgTaCWlw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_QILdU6l3EeeGj7EgTaCWlw" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_QILdVKl3EeeGj7EgTaCWlw" name="stratFac2" type="_QHJikKl3EeeGj7EgTaCWlw">
            <eAnnotations xmi:id="_QILdVal3EeeGj7EgTaCWlw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_QILdVql3EeeGj7EgTaCWlw" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_QILdV6l3EeeGj7EgTaCWlw" type="_QHJikKl3EeeGj7EgTaCWlw" direction="return"/>
          <language>java</language>
          <body>if (null == stratFac1 || null == stratFac2)
			return _errorStrategyFac;
		return new IStrategyFac&lt;IBallCmd>() {
			/**
			 * Instantiate a new MultiStrategy with the strategies from the given strategy factories
			 * @return A MultiStrategy instance
			 */
			public IUpdateStrategy&lt;IBallCmd> make() {
				return new MultiStrategy&lt;IBallCmd>(stratFac1.make(), stratFac2.make());
			}

			/**
			 * Return a string that is the toString()'s of the given strategy factories concatenated with a &quot;-&quot;
			 */
			public String toString() {
				return stratFac1.toString() + &quot;-&quot; + stratFac2.toString();
			}
		};
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QILdWKl3EeeGj7EgTaCWlw" name="loadStrategy" specification="_QEPYgKl3EeeGj7EgTaCWlw">
          <ownedParameter xmi:id="_QILdWal3EeeGj7EgTaCWlw" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_QILdWql3EeeGj7EgTaCWlw" type="_QHL-0al3EeeGj7EgTaCWlw" direction="return"/>
          <language>java</language>
          <body>try {
			java.lang.reflect.Constructor&lt;?> cs[] = Class.forName(classname).getConstructors(); // get all the constructors
			java.lang.reflect.Constructor&lt;?> c = null;
			for (int i = 0; i &lt; cs.length; i++) { // find the first constructor with the right number of input parameters
				if (0 == (cs[i]).getParameterTypes().length) {
					c = cs[i];
					break;
				}
			}
			return (IUpdateStrategy&lt;IBallCmd>) c.newInstance();
			//IUpdateStrategy strategy=(IUpdateStrategy) Class.forName(classname).newInstance();
			//return strategy;
		} catch (Exception e) {
			System.err.println(&quot;Class &quot; + classname + &quot; failed to load. \nException = \n&quot; + e);
			e.printStackTrace(); // print the stack trace to help in debugging.
			return null; // Is this really a useful thing to return here?  Is there something better that could be returned?
		} catch (Error err) {
			return null;
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QILdW6l3EeeGj7EgTaCWlw" name="loadPaintStrategy" specification="_QEZJgKl3EeeGj7EgTaCWlw">
          <ownedParameter xmi:id="_QILdXKl3EeeGj7EgTaCWlw" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_QILdXal3EeeGj7EgTaCWlw" type="_QHT6oKl3EeeGj7EgTaCWlw" direction="return"/>
          <language>java</language>
          <body>try {
			java.lang.reflect.Constructor&lt;?> cs[] = Class.forName(classname).getConstructors(); // get all the constructors
			java.lang.reflect.Constructor&lt;?> c = null;
			for (int i = 0; i &lt; cs.length; i++) { // find the first constructor with the right number of input parameters
				if (0 == (cs[i]).getParameterTypes().length) {
					c = cs[i];
					break;
				}
			}
			return (IPaintStrategy) c.newInstance();
			//IUpdateStrategy strategy=(IUpdateStrategy) Class.forName(classname).newInstance();
			//return strategy;
		} catch (Exception e) {
			System.err.println(&quot;Class &quot; + classname + &quot; failed to load. \nException = \n&quot; + e);
			e.printStackTrace(); // print the stack trace to help in debugging.
			return null; // Is this really a useful thing to return here?  Is there something better that could be returned?
		} catch (Error err) {
			return null;
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QIMEYKl3EeeGj7EgTaCWlw" name="loadBall" specification="_QHUhsql3EeeGj7EgTaCWlw">
          <ownedParameter xmi:id="_QIMEYal3EeeGj7EgTaCWlw" name="window" type="_QGQKsKl3EeeGj7EgTaCWlw"/>
          <ownedParameter xmi:id="_QIMEYql3EeeGj7EgTaCWlw" name="strategy" type="_QHL-0al3EeeGj7EgTaCWlw"/>
          <ownedParameter xmi:id="_QIMEY6l3EeeGj7EgTaCWlw" name="paintStrategy" type="_QHT6oKl3EeeGj7EgTaCWlw"/>
          <language>java</language>
          <body>Ball ball = new Ball(window, strategy, paintStrategy);
		_dispatcher.addObserver(ball);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QIMEZKl3EeeGj7EgTaCWlw" name="fixName" specification="_QEaXoKl3EeeGj7EgTaCWlw">
          <ownedParameter xmi:id="_QIMEZal3EeeGj7EgTaCWlw" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_QIMEZql3EeeGj7EgTaCWlw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>if (classname.length() >= 9) {
			if (classname.substring(0, 8) == &quot;strategy.&quot;)
				return classname;
		}
		return &quot;model.strategy.&quot; + classname + &quot;Strategy&quot;;

	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QIMrcKl3EeeGj7EgTaCWlw" name="fixPaintName" specification="_QEblwKl3EeeGj7EgTaCWlw">
          <ownedParameter xmi:id="_QIMrcal3EeeGj7EgTaCWlw" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_QIMrcql3EeeGj7EgTaCWlw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return &quot;model.paint.strategy.&quot; + classname + &quot;PaintStrategy&quot;;

	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QIMrc6l3EeeGj7EgTaCWlw" name="start" specification="_QEcM0Kl3EeeGj7EgTaCWlw">
          <language>java</language>
          <body>_timer.start();
		_timer1.start();
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_QEHcsKl3EeeGj7EgTaCWlw" name="move_update" method="_QIJoIql3EeeGj7EgTaCWlw">
          <ownedComment xmi:id="_QIPuxal3EeeGj7EgTaCWlw">
            <body>notify all the balls to move and update its state</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_QEIDwKl3EeeGj7EgTaCWlw" name="getSwitchStrategy" method="_QIJoI6l3EeeGj7EgTaCWlw">
          <ownedComment xmi:id="_QIPuxql3EeeGj7EgTaCWlw">
            <body>@return the SwitchStrategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_QHL-0Kl3EeeGj7EgTaCWlw" type="_QHKJoal3EeeGj7EgTaCWlw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_QELHEKl3EeeGj7EgTaCWlw" name="deleteBalls" method="_QIK2QKl3EeeGj7EgTaCWlw">
          <ownedComment xmi:id="_QIPuyal3EeeGj7EgTaCWlw">
            <body>Delete all observers from the dispatcher and from the screen</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_QELuIKl3EeeGj7EgTaCWlw" name="makeStrategyFac" method="_QIK2Qal3EeeGj7EgTaCWlw">
          <ownedComment xmi:id="_QIQV0Kl3EeeGj7EgTaCWlw">
            <body>Returns an IStrategyFac that can instantiate the strategy specified by
	 * classname. Returns a factory for a beeping error strategy if classname is null. 
	 * The toString() of the returned factory is the classname.
	 * 
	 * @param classname  Shortened name of desired strategy
	 * @return A factory to make that strategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_QELuIal3EeeGj7EgTaCWlw" name="classname">
            <eAnnotations xmi:id="_QENjUKl3EeeGj7EgTaCWlw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_QENjUal3EeeGj7EgTaCWlw" key="final"/>
            </eAnnotations>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_QHObEKl3EeeGj7EgTaCWlw" type="_QHJikKl3EeeGj7EgTaCWlw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_QEOKYKl3EeeGj7EgTaCWlw" name="makePaintFac" method="_QIK2Rql3EeeGj7EgTaCWlw">
          <ownedComment xmi:id="_QIQV0al3EeeGj7EgTaCWlw">
            <body>Instantiate a paint strategy corresponding to the given class name.
	 * @param classname
	 * @return A factory to make that strategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_QEOKYal3EeeGj7EgTaCWlw" name="classname">
            <eAnnotations xmi:id="_QEOxcKl3EeeGj7EgTaCWlw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_QEOxcal3EeeGj7EgTaCWlw" key="final"/>
            </eAnnotations>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_QHPCIal3EeeGj7EgTaCWlw" type="_QHObEal3EeeGj7EgTaCWlw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_QEPYgKl3EeeGj7EgTaCWlw" name="loadStrategy" method="_QILdWKl3EeeGj7EgTaCWlw">
          <ownedParameter xmi:id="_QEP_kKl3EeeGj7EgTaCWlw" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_QHTTkal3EeeGj7EgTaCWlw" type="_QHL-0al3EeeGj7EgTaCWlw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_QEZJgKl3EeeGj7EgTaCWlw" name="loadPaintStrategy" method="_QILdW6l3EeeGj7EgTaCWlw">
          <ownedComment xmi:id="_QIQV1Kl3EeeGj7EgTaCWlw">
            <body>Use the classname to create an object of IPaintStrategy
	 * @param classname The fully qualified classname of a paint strategy
	 * @return An PaintStrategy instance</body>
          </ownedComment>
          <ownedParameter xmi:id="_QEZJgal3EeeGj7EgTaCWlw" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_QHUhsal3EeeGj7EgTaCWlw" type="_QHT6oKl3EeeGj7EgTaCWlw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_QEaXoKl3EeeGj7EgTaCWlw" name="fixName" method="_QIMEZKl3EeeGj7EgTaCWlw">
          <ownedComment xmi:id="_QIQ84al3EeeGj7EgTaCWlw">
            <body>@param classname The abbreviated, shortened or the full name
	 * @return the right full name
	 * make sure to support  either full or abbreviated strategy class name</body>
          </ownedComment>
          <ownedParameter xmi:id="_QEa-sKl3EeeGj7EgTaCWlw" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_QEa-sal3EeeGj7EgTaCWlw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_QEblwKl3EeeGj7EgTaCWlw" name="fixPaintName" method="_QIMrcKl3EeeGj7EgTaCWlw">
          <ownedComment xmi:id="_QIQ84ql3EeeGj7EgTaCWlw">
            <body>@param classname The abbreviated, shortened name
	 * @return the right full name of the paint startegy</body>
          </ownedComment>
          <ownedParameter xmi:id="_QEblwal3EeeGj7EgTaCWlw" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_QEblwql3EeeGj7EgTaCWlw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_QEcM0Kl3EeeGj7EgTaCWlw" name="start" method="_QIMrc6l3EeeGj7EgTaCWlw">
          <ownedComment xmi:id="_QIQ846l3EeeGj7EgTaCWlw">
            <body>start the timer to make the animations</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_QGgpYKl3EeeGj7EgTaCWlw" name="BallModel" method="_QIKPMql3EeeGj7EgTaCWlw">
          <eAnnotations xmi:id="_QGgpYql3EeeGj7EgTaCWlw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_QGgpY6l3EeeGj7EgTaCWlw" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_QIPuyKl3EeeGj7EgTaCWlw">
            <body>@param model2ViewAdpt 
	 * use IModel2ViewAdapter to initialize the class</body>
          </ownedComment>
          <ownedParameter xmi:id="_QGgpYal3EeeGj7EgTaCWlw" name="model2ViewAdpt" type="_QD5aQKl3EeeGj7EgTaCWlw"/>
          <ownedParameter xmi:id="_QGgpZKl3EeeGj7EgTaCWlw" type="_QEGOkKl3EeeGj7EgTaCWlw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_QHLXwKl3EeeGj7EgTaCWlw" name="update" method="_QIJoIKl3EeeGj7EgTaCWlw">
          <ownedComment xmi:id="_QIPuxKl3EeeGj7EgTaCWlw">
            <body>@param g An input parameter to give to each ball's update method.
	 * notify all the balls to paint</body>
          </ownedComment>
          <ownedParameter xmi:id="_QHLXwal3EeeGj7EgTaCWlw" name="g" type="_QGTOAal3EeeGj7EgTaCWlw"/>
        </ownedOperation>
        <ownedOperation xmi:id="_QHNM8al3EeeGj7EgTaCWlw" name="swichSwichStrategy" method="_QIKPMKl3EeeGj7EgTaCWlw">
          <ownedComment xmi:id="_QIPux6l3EeeGj7EgTaCWlw">
            <body>@param newStrategy change the temp strategy to a new strategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_QHNM8ql3EeeGj7EgTaCWlw" name="newStrategy" type="_QHL-0al3EeeGj7EgTaCWlw"/>
        </ownedOperation>
        <ownedOperation xmi:id="_QHQQQKl3EeeGj7EgTaCWlw" name="combineStrategyFacs" method="_QILdUKl3EeeGj7EgTaCWlw">
          <ownedComment xmi:id="_QIQV0ql3EeeGj7EgTaCWlw">
            <body>Returns an IStrategyFac that can instantiate a MultiStrategy with the two
	 * strategies made by the two given IStrategyFac objects. Returns null if
	 * either supplied factory is null. The toString() of the returned factory
	 * is the toString()'s of the two given factories, concatenated with &quot;-&quot;. 
	 * If either factory is null, then a factory for a beeping error strategy is returned.
	 * 
	 * @param stratFac1 An IStrategyFac for a strategy
	 * @param stratFac2 An IStrategyFac for a strategy
	 * @return An IStrategyFac for the composition of the two strategies</body>
          </ownedComment>
          <ownedParameter xmi:id="_QHQQQal3EeeGj7EgTaCWlw" name="stratFac1" type="_QHJikKl3EeeGj7EgTaCWlw">
            <eAnnotations xmi:id="_QHSFcKl3EeeGj7EgTaCWlw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_QHSFcal3EeeGj7EgTaCWlw" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_QHQQQql3EeeGj7EgTaCWlw" name="stratFac2" type="_QHJikKl3EeeGj7EgTaCWlw">
            <eAnnotations xmi:id="_QHSsgal3EeeGj7EgTaCWlw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_QHSsgql3EeeGj7EgTaCWlw" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_QHReYal3EeeGj7EgTaCWlw" type="_QHJikKl3EeeGj7EgTaCWlw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_QHUhsql3EeeGj7EgTaCWlw" name="loadBall" method="_QIMEYKl3EeeGj7EgTaCWlw">
          <ownedComment xmi:id="_QIQ84Kl3EeeGj7EgTaCWlw">
            <body>@param paintStrategy  An IPaintStrategy for the new ball to use.
	 * @param strategy An IUpdateStrategy for the new ball to use.
	 * To create a ball</body>
          </ownedComment>
          <ownedParameter xmi:id="_QHVIwKl3EeeGj7EgTaCWlw" name="window" type="_QGQKsKl3EeeGj7EgTaCWlw"/>
          <ownedParameter xmi:id="_QHVIwal3EeeGj7EgTaCWlw" name="strategy" type="_QHL-0al3EeeGj7EgTaCWlw"/>
          <ownedParameter xmi:id="_QHVIwql3EeeGj7EgTaCWlw" name="paintStrategy" type="_QHT6oKl3EeeGj7EgTaCWlw"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_QHJikKl3EeeGj7EgTaCWlw" name="IStrategyFac">
        <ownedComment xmi:id="_N2ocAKl4EeeGj7EgTaCWlw">
          <body>@author zihanli
the interface to make a strategy</body>
        </ownedComment>
        <ownedOperation xmi:id="_Nx00gKl4EeeGj7EgTaCWlw" name="make">
          <ownedComment xmi:id="_N2pDEKl4EeeGj7EgTaCWlw">
            <body>@return
	 * abstract method to make a strategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_N03hcKl4EeeGj7EgTaCWlw" type="_QHL-0al3EeeGj7EgTaCWlw" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_QHL-0al3EeeGj7EgTaCWlw" name="IUpdateStrategy">
        <ownedComment xmi:id="_N2pDEal4EeeGj7EgTaCWlw">
          <body>@author zihanli
the interface which is used to change a ball's state</body>
        </ownedComment>
        <ownedOperation xmi:id="_N059sKl4EeeGj7EgTaCWlw" name="updateState">
          <ownedParameter xmi:id="_N059sal4EeeGj7EgTaCWlw" name="ball" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
          <ownedParameter xmi:id="_N059sql4EeeGj7EgTaCWlw" name="dispatcher" type="_QGdmEal3EeeGj7EgTaCWlw"/>
        </ownedOperation>
        <ownedOperation xmi:id="_N06kwal4EeeGj7EgTaCWlw" name="init">
          <ownedParameter xmi:id="_N06kwql4EeeGj7EgTaCWlw" name="context" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_QHObEal3EeeGj7EgTaCWlw" name="IPaintFac">
        <ownedComment xmi:id="_hF3bkKl5EeeGj7EgTaCWlw">
          <body>@author zihanli
 *An interface that defines a factory that instantiates a specific IPaintStrategy</body>
        </ownedComment>
        <ownedOperation xmi:id="_hDvUoKl5EeeGj7EgTaCWlw" name="make">
          <ownedComment xmi:id="_hF4CoKl5EeeGj7EgTaCWlw">
            <body>@return
	 * Instantiate the specific IPaintStrategy for which this factory is defined.</body>
          </ownedComment>
          <ownedParameter xmi:id="_hFMtMKl5EeeGj7EgTaCWlw" type="_QHT6oKl3EeeGj7EgTaCWlw" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_QHT6oKl3EeeGj7EgTaCWlw" name="IPaintStrategy">
        <ownedComment xmi:id="_hF4Coal5EeeGj7EgTaCWlw">
          <body>@author 
the abstract interface that the Ball will use to paint.</body>
        </ownedComment>
        <ownedOperation xmi:id="_hFMtMal5EeeGj7EgTaCWlw" name="paint">
          <ownedParameter xmi:id="_hFMtMql5EeeGj7EgTaCWlw" name="g" type="_QGTOAal3EeeGj7EgTaCWlw"/>
          <ownedParameter xmi:id="_hFNUQKl5EeeGj7EgTaCWlw" name="host" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
        </ownedOperation>
        <ownedOperation xmi:id="_hFNUQal5EeeGj7EgTaCWlw" name="init">
          <ownedParameter xmi:id="_hFNUQql5EeeGj7EgTaCWlw" name="host" type="_QGbJ0al3EeeGj7EgTaCWlw"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_QIat4al3EeeGj7EgTaCWlw" name="" memberEnd="_QIat4ql3EeeGj7EgTaCWlw _QD6BUal3EeeGj7EgTaCWlw">
        <ownedEnd xmi:id="_QIat4ql3EeeGj7EgTaCWlw" name="" type="_QD5aQKl3EeeGj7EgTaCWlw" association="_QIat4al3EeeGj7EgTaCWlw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_QIcjEal3EeeGj7EgTaCWlw" name="" memberEnd="_QIcjEql3EeeGj7EgTaCWlw _QHhWAKl3EeeGj7EgTaCWlw">
        <ownedEnd xmi:id="_QIcjEql3EeeGj7EgTaCWlw" name="" type="_QEGOkKl3EeeGj7EgTaCWlw" association="_QIcjEal3EeeGj7EgTaCWlw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_QIdKIal3EeeGj7EgTaCWlw" name="" memberEnd="_QIdKIql3EeeGj7EgTaCWlw _QHjLMal3EeeGj7EgTaCWlw">
        <ownedEnd xmi:id="_QIdKIql3EeeGj7EgTaCWlw" name="" type="_QEGOkKl3EeeGj7EgTaCWlw" association="_QIdKIal3EeeGj7EgTaCWlw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_QIdxMal3EeeGj7EgTaCWlw" name="" memberEnd="_QIdxMql3EeeGj7EgTaCWlw _QHkZUKl3EeeGj7EgTaCWlw">
        <ownedEnd xmi:id="_QIdxMql3EeeGj7EgTaCWlw" name="" type="_QEGOkKl3EeeGj7EgTaCWlw" association="_QIdxMal3EeeGj7EgTaCWlw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_QIeYQal3EeeGj7EgTaCWlw" name="" memberEnd="_QIeYQql3EeeGj7EgTaCWlw _QHlAYal3EeeGj7EgTaCWlw">
        <ownedEnd xmi:id="_QIeYQql3EeeGj7EgTaCWlw" name="" type="_QEGOkKl3EeeGj7EgTaCWlw" association="_QIeYQal3EeeGj7EgTaCWlw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_QIe_Ual3EeeGj7EgTaCWlw" name="" memberEnd="_QIe_Uql3EeeGj7EgTaCWlw _QHlncal3EeeGj7EgTaCWlw">
        <ownedEnd xmi:id="_QIe_Uql3EeeGj7EgTaCWlw" name="" type="_QEGOkKl3EeeGj7EgTaCWlw" association="_QIe_Ual3EeeGj7EgTaCWlw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_QIfmYKl3EeeGj7EgTaCWlw" name="" memberEnd="_QIfmYal3EeeGj7EgTaCWlw _QHmOgql3EeeGj7EgTaCWlw">
        <ownedEnd xmi:id="_QIfmYal3EeeGj7EgTaCWlw" name="" type="_QEGOkKl3EeeGj7EgTaCWlw" association="_QIfmYKl3EeeGj7EgTaCWlw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_N1GK86l4EeeGj7EgTaCWlw" name="IBallCmd"/>
      <packagedElement xmi:type="uml:Interface" xmi:id="_N1InMal4EeeGj7EgTaCWlw" name="IInteractStrategy"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_QClLoKl3EeeGj7EgTaCWlw" name="controller">
      <packagedElement xmi:type="uml:Class" xmi:id="_QDkqIKl3EeeGj7EgTaCWlw" name="Controller">
        <ownedComment xmi:id="_QIOgoKl3EeeGj7EgTaCWlw">
          <body> The class to control the information flow between view and model
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_QHe5wKl3EeeGj7EgTaCWlw" name="ballView" visibility="private" type="_QEmk4Kl3EeeGj7EgTaCWlw" association="_QIbU8al3EeeGj7EgTaCWlw"/>
        <ownedAttribute xmi:id="_QHgu8Kl3EeeGj7EgTaCWlw" name="ballModel" visibility="private" type="_QEGOkKl3EeeGj7EgTaCWlw" association="_QIb8Aal3EeeGj7EgTaCWlw"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QIFWsKl3EeeGj7EgTaCWlw" name="Controller" specification="_QDvCMKl3EeeGj7EgTaCWlw">
          <ownedParameter xmi:id="_QIFWsal3EeeGj7EgTaCWlw" type="_QDkqIKl3EeeGj7EgTaCWlw" direction="return"/>
          <language>java</language>
          <body>ballView = new MainFrame&lt;IStrategyFac&lt;IBallCmd>, IPaintFac>(new IView2ModelCtrlAdapter&lt;IStrategyFac&lt;IBallCmd>, IPaintFac>() {
			@Override
			public void clearBalls() {
				// TODO Auto-generated method stub
				ballModel.deleteBalls();
			}

			@Override
			/**
			* Returns an IStrategyFac that can instantiate the strategy specified
			* by classname. Returns null if classname is null. The toString() of
			* the returned factory is the classname.
			* @param classname  Shortened name of desired strategy 
			* @return A factory to make that strategy
			*/
			public IStrategyFac&lt;IBallCmd> addStrategy(String classname) {
				return ballModel.makeStrategyFac(classname);
			}

			@Override
			/**
			* Add a ball to the system with a strategy asgiven by the given IStrategyFac
			* @param selectedItem The fully qualified name of the desired strategy.
			*/
			public void makeBall(Component window, IStrategyFac&lt;IBallCmd> selectedItem, IPaintFac selectedItem1) {
				// TODO Auto-generated method stub
				if (null != selectedItem)
					ballModel.loadBall(window, selectedItem.make(), selectedItem1.make()); // Here, loadBall takes a strategy object, but your method may take the strategy factory instead.

			}

			@Override
			public IStrategyFac&lt;IBallCmd> combineStrategies(IStrategyFac&lt;IBallCmd> s2, IStrategyFac&lt;IBallCmd> s1) {
				// TODO Auto-generated method stub
				return ballModel.combineStrategyFacs(s2, s1);
			}

			@Override
			public void switchStrategy(IStrategyFac&lt;IBallCmd> newStrategy) {
				// TODO Auto-generated method stub
				if (newStrategy == null)
					ballModel.swichSwichStrategy(ballModel._errorStrategyFac.make());
				else
					ballModel.swichSwichStrategy(newStrategy.make());

			}

			@Override
			public void makeSwitchBall(Component window, IPaintFac s1) {
				// TODO Auto-generated method stub
				ballModel.loadBall(window, ballModel.getSwitchStrategy(), s1.make());

			}

			@Override
			public IPaintFac addPaintStrategy(String classname) {
				// TODO Auto-generated method stub
				return ballModel.makePaintFac(classname);
			}

		}, new IView2ModelPaintAdapter() {
			@Override
			public void paint(Graphics g) {
				// TODO Auto-generated method stub
				ballModel.update(g);
			};
		});
		ballModel = new BallModel(new IModel2ViewAdapter() {

			@Override
			public void update() {
				// TODO Auto-generated method stub
				ballView.update();

			}
		});
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QIJBEKl3EeeGj7EgTaCWlw" name="start" specification="_QDyskKl3EeeGj7EgTaCWlw">
          <language>java</language>
          <body>ballView.start();
		ballModel.start();

	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QIJBEal3EeeGj7EgTaCWlw" name="main" specification="_QDzToKl3EeeGj7EgTaCWlw">
          <ownedParameter xmi:id="_QIJBEql3EeeGj7EgTaCWlw" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_QIJBE6l3EeeGj7EgTaCWlw" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>// TODO Auto-generated method stub
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Controller controller = new Controller();
					controller.start();
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});

	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_QDvCMKl3EeeGj7EgTaCWlw" name="Controller" visibility="package" method="_QIFWsKl3EeeGj7EgTaCWlw">
          <eAnnotations xmi:id="_QDxecKl3EeeGj7EgTaCWlw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_QDxecal3EeeGj7EgTaCWlw" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_QDyFgKl3EeeGj7EgTaCWlw" type="_QDkqIKl3EeeGj7EgTaCWlw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_QDyskKl3EeeGj7EgTaCWlw" name="start" method="_QIJBEKl3EeeGj7EgTaCWlw">
          <ownedComment xmi:id="_QIPHsKl3EeeGj7EgTaCWlw">
            <body>Start both View and Model</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_QDzToKl3EeeGj7EgTaCWlw" name="main" isStatic="true" method="_QIJBEal3EeeGj7EgTaCWlw">
          <ownedComment xmi:id="_QIPHsal3EeeGj7EgTaCWlw">
            <body>@param args
	 * new an object of Controller and call the start method</body>
          </ownedComment>
          <ownedParameter xmi:id="_QDzToal3EeeGj7EgTaCWlw" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_QDz6sKl3EeeGj7EgTaCWlw" value="*"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_QIbU8al3EeeGj7EgTaCWlw" name="" memberEnd="_QIbU8ql3EeeGj7EgTaCWlw _QHe5wKl3EeeGj7EgTaCWlw">
        <ownedEnd xmi:id="_QIbU8ql3EeeGj7EgTaCWlw" name="" type="_QDkqIKl3EeeGj7EgTaCWlw" association="_QIbU8al3EeeGj7EgTaCWlw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_QIb8Aal3EeeGj7EgTaCWlw" name="" memberEnd="_QIb8Aql3EeeGj7EgTaCWlw _QHgu8Kl3EeeGj7EgTaCWlw">
        <ownedEnd xmi:id="_QIb8Aql3EeeGj7EgTaCWlw" name="" type="_QDkqIKl3EeeGj7EgTaCWlw" association="_QIb8Aal3EeeGj7EgTaCWlw"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_QC1qUKl3EeeGj7EgTaCWlw" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_QC1qUal3EeeGj7EgTaCWlw" name="swing">
        <packagedElement xmi:type="uml:Package" xmi:id="_QDLokKl3EeeGj7EgTaCWlw" name="border">
          <packagedElement xmi:type="uml:Class" xmi:id="_QGpzUal3EeeGj7EgTaCWlw" name="EmptyBorder"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_QGZ7sKl3EeeGj7EgTaCWlw" name="Timer"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_QGn-Ial3EeeGj7EgTaCWlw" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_QGpMQKl3EeeGj7EgTaCWlw" name="JPanel"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_QGrogal3EeeGj7EgTaCWlw" name="JButton"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_QGuEwal3EeeGj7EgTaCWlw" name="JTextField"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_QGur0al3EeeGj7EgTaCWlw" name="JComboBox"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_QGv58al3EeeGj7EgTaCWlw" name="JLabel"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_QC24cKl3EeeGj7EgTaCWlw" name="util">
      <packagedElement xmi:type="uml:Interface" xmi:id="_QGdmEal3EeeGj7EgTaCWlw" name="IDispatcher"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_QGe0MKl3EeeGj7EgTaCWlw" name="SetDispatcherSequential"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_N07L0Kl4EeeGj7EgTaCWlw" name="Randomizer"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_N07y4al4EeeGj7EgTaCWlw" name="SineMaker"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_Nw5AYKl4EeeGj7EgTaCWlw" name="Point2D">
      <packagedElement xmi:type="uml:Class" xmi:id="_N1Lqgql4EeeGj7EgTaCWlw" name="Double"/>
    </packagedElement>
    <profileApplication xmi:id="_PsXrEKl3EeeGj7EgTaCWlw">
      <eAnnotations xmi:id="_PsdKoKl3EeeGj7EgTaCWlw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_Psj4UKl3EeeGj7EgTaCWlw" base_Package="_PcVrAKl3EeeGj7EgTaCWlw">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:Generics xmi:id="_QD9EoKl3EeeGj7EgTaCWlw" genericsValue="TDropListItem, TDropListItem1" base_Element="_QD7PcKl3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_QEJR4Kl3EeeGj7EgTaCWlw" genericsValue="IBallCmd" base_Element="_QEIDwKl3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_QEM8QKl3EeeGj7EgTaCWlw" genericsValue="IBallCmd" base_Element="_QELuIKl3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_QESb0Kl3EeeGj7EgTaCWlw" genericsValue="IBallCmd" base_Element="_QEPYgKl3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QESb0al3EeeGj7EgTaCWlw" base_Element="_QEPYgKl3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Annotations xmi:id="_QEU4EKl3EeeGj7EgTaCWlw" base_Element="_QEPYgKl3EeeGj7EgTaCWlw">
    <annotations xmi:id="_QEVfIKl3EeeGj7EgTaCWlw" name="SuppressWarnings">
      <annotationParameters xmi:id="_QEX7YKl3EeeGj7EgTaCWlw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_QIQV06l3EeeGj7EgTaCWlw" value="&quot;unchecked&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_QEnzAKl3EeeGj7EgTaCWlw" genericsValue="TDropListItem, TDropListItem1" base_Element="_QEmk4Kl3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_QGRY0Kl3EeeGj7EgTaCWlw" base_Element="_QGQKsKl3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_QGTOAKl3EeeGj7EgTaCWlw" base_Element="_QGR_4Kl3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_QGVDMKl3EeeGj7EgTaCWlw" base_Element="_QGTOAal3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_QGbJ0Kl3EeeGj7EgTaCWlw" base_Element="_QGZ7sKl3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_QGbw4Kl3EeeGj7EgTaCWlw" base_Element="_QGbJ0al3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_QGeNIKl3EeeGj7EgTaCWlw" base_Element="_QGdmEal3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_QGfbQKl3EeeGj7EgTaCWlw" base_Element="_QGe0MKl3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_QGn-IKl3EeeGj7EgTaCWlw" base_Element="_QGlh4Kl3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_QGolMKl3EeeGj7EgTaCWlw" base_Element="_QGn-Ial3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_QGpzUKl3EeeGj7EgTaCWlw" base_Element="_QGpMQKl3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_QGqaYKl3EeeGj7EgTaCWlw" base_Element="_QGpzUal3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_QGrogKl3EeeGj7EgTaCWlw" base_Element="_QGrBcKl3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_QGsPkKl3EeeGj7EgTaCWlw" base_Element="_QGrogal3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_QGs2oKl3EeeGj7EgTaCWlw" base_Element="_QGsPkal3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_QGuEwKl3EeeGj7EgTaCWlw" base_Element="_QGtdsKl3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_QGur0Kl3EeeGj7EgTaCWlw" base_Element="_QGuEwal3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_QGv58Kl3EeeGj7EgTaCWlw" base_Element="_QGur0al3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_QGxIEKl3EeeGj7EgTaCWlw" base_Element="_QGv58al3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_QG0ycKl3EeeGj7EgTaCWlw" genericsValue="TDropListItem, TDropListItem1" base_Element="_QG0LYKl3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_QHEDAKl3EeeGj7EgTaCWlw" base_Element="_QHDb8Kl3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_QHF4MKl3EeeGj7EgTaCWlw" base_Element="_QHEDAql3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_QHN0AKl3EeeGj7EgTaCWlw" genericsValue="IBallCmd" base_Element="_QHNM8ql3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_QHReYKl3EeeGj7EgTaCWlw" genericsValue="IBallCmd" base_Element="_QHQQQKl3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_QHSsgKl3EeeGj7EgTaCWlw" genericsValue="IBallCmd" base_Element="_QHQQQal3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_QHTTkKl3EeeGj7EgTaCWlw" genericsValue="IBallCmd" base_Element="_QHQQQql3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_QHWW4Kl3EeeGj7EgTaCWlw" genericsValue="IBallCmd" base_Element="_QHVIwal3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_QHgH4Kl3EeeGj7EgTaCWlw" genericsValue="IStrategyFac&lt;IBallCmd>, IPaintFac" base_Element="_QHe5wKl3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QHgH4al3EeeGj7EgTaCWlw" base_Element="_QHe5wKl3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QHgu8al3EeeGj7EgTaCWlw" base_Element="_QHgu8Kl3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QHh9EKl3EeeGj7EgTaCWlw" base_Element="_QHhWAKl3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QHikIKl3EeeGj7EgTaCWlw" base_Element="_QHh9Eal3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QHjLMKl3EeeGj7EgTaCWlw" base_Element="_QHikIal3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_QHjyQKl3EeeGj7EgTaCWlw" genericsValue="IBallCmd" base_Element="_QHjLMal3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QHjyQql3EeeGj7EgTaCWlw" base_Element="_QHjLMal3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QHlAYKl3EeeGj7EgTaCWlw" base_Element="_QHkZUKl3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QHlncKl3EeeGj7EgTaCWlw" base_Element="_QHlAYal3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_QHmOgKl3EeeGj7EgTaCWlw" genericsValue="IBallCmd" base_Element="_QHlncal3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QHmOgal3EeeGj7EgTaCWlw" base_Element="_QHlncal3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_QHm1kKl3EeeGj7EgTaCWlw" genericsValue="IBallCmd" base_Element="_QHmOgql3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QHncoKl3EeeGj7EgTaCWlw" base_Element="_QHmOgql3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QHoqwKl3EeeGj7EgTaCWlw" base_Element="_QHoDsql3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_QHpR0Kl3EeeGj7EgTaCWlw" genericsValue="TDropListItem, TDropListItem1" base_Element="_QHoqwal3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QHpR0al3EeeGj7EgTaCWlw" base_Element="_QHoqwal3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QHqf8Kl3EeeGj7EgTaCWlw" base_Element="_QHp44Kl3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QHrHAKl3EeeGj7EgTaCWlw" base_Element="_QHqf8al3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QHruEKl3EeeGj7EgTaCWlw" base_Element="_QHrHAal3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QHsVIKl3EeeGj7EgTaCWlw" base_Element="_QHruEal3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QHs8MKl3EeeGj7EgTaCWlw" base_Element="_QHsVIal3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QHs8M6l3EeeGj7EgTaCWlw" base_Element="_QHs8Mal3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_QHuKUKl3EeeGj7EgTaCWlw" genericsValue="TDropListItem" base_Element="_QHtjQKl3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QHuxYKl3EeeGj7EgTaCWlw" base_Element="_QHtjQKl3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_QHvYcKl3EeeGj7EgTaCWlw" genericsValue="TDropListItem" base_Element="_QHuxYal3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QHv_gKl3EeeGj7EgTaCWlw" base_Element="_QHuxYal3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QHwmkql3EeeGj7EgTaCWlw" base_Element="_QHwmkKl3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QHxNoql3EeeGj7EgTaCWlw" base_Element="_QHxNoKl3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QHx0sal3EeeGj7EgTaCWlw" base_Element="_QHxNo6l3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QHybwKl3EeeGj7EgTaCWlw" base_Element="_QHx0sql3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QHybw6l3EeeGj7EgTaCWlw" base_Element="_QHybwal3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QHzC0ql3EeeGj7EgTaCWlw" base_Element="_QHzC0Kl3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QHzp4ql3EeeGj7EgTaCWlw" base_Element="_QHzp4Kl3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QH0Q8ql3EeeGj7EgTaCWlw" base_Element="_QH0Q8Kl3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QH04AKl3EeeGj7EgTaCWlw" base_Element="_QH0Q86l3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QH1fEKl3EeeGj7EgTaCWlw" base_Element="_QH04Aal3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QH1fE6l3EeeGj7EgTaCWlw" base_Element="_QH1fEal3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_QH2GIal3EeeGj7EgTaCWlw" genericsValue="TDropListItem1" base_Element="_QH2GIKl3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QH2tMKl3EeeGj7EgTaCWlw" base_Element="_QH2GIKl3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_QIat4Kl3EeeGj7EgTaCWlw" base_Element="_QIaG0Kl3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_QIbU8Kl3EeeGj7EgTaCWlw" base_Element="_QIat4al3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_QIb8AKl3EeeGj7EgTaCWlw" base_Element="_QIbU8al3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_QIcjEKl3EeeGj7EgTaCWlw" base_Element="_QIb8Aal3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_QIdKIKl3EeeGj7EgTaCWlw" base_Element="_QIcjEal3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_QIdxMKl3EeeGj7EgTaCWlw" base_Element="_QIdKIal3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_QIeYQKl3EeeGj7EgTaCWlw" base_Element="_QIdxMal3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_QIe_UKl3EeeGj7EgTaCWlw" base_Element="_QIeYQal3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_QIe_U6l3EeeGj7EgTaCWlw" base_Element="_QIe_Ual3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_QIfmYql3EeeGj7EgTaCWlw" base_Element="_QIfmYKl3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_QIgNcql3EeeGj7EgTaCWlw" base_Element="_QIgNcKl3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_QIg0gql3EeeGj7EgTaCWlw" base_Element="_QIg0gKl3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_QIhbkql3EeeGj7EgTaCWlw" base_Element="_QIhbkKl3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_QIjQwKl3EeeGj7EgTaCWlw" base_Element="_QIipsKl3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_QIj30Kl3EeeGj7EgTaCWlw" base_Element="_QIjQwal3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_QIke4Kl3EeeGj7EgTaCWlw" base_Element="_QIj30al3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_QIlF8Kl3EeeGj7EgTaCWlw" base_Element="_QIke4al3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_QIltAKl3EeeGj7EgTaCWlw" base_Element="_QIlF8al3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_QImUEKl3EeeGj7EgTaCWlw" base_Element="_QIltAal3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_QIm7Iql3EeeGj7EgTaCWlw" base_Element="_QIm7IKl3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_QIoJQKl3EeeGj7EgTaCWlw" base_Element="_QIniMKl3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_QIoJQ6l3EeeGj7EgTaCWlw" base_Element="_QIoJQal3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_QIowUql3EeeGj7EgTaCWlw" base_Element="_QIowUKl3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_QIpXYql3EeeGj7EgTaCWlw" base_Element="_QIpXYKl3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_QIp-cql3EeeGj7EgTaCWlw" base_Element="_QIp-cKl3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_QIqlgKl3EeeGj7EgTaCWlw" base_Element="_QIp-c6l3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_QIrMkKl3EeeGj7EgTaCWlw" base_Element="_QIqlgal3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_QIrzoKl3EeeGj7EgTaCWlw" base_Element="_QIrMkal3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_QIsasql3EeeGj7EgTaCWlw" base_Element="_QIsasKl3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_QItBwql3EeeGj7EgTaCWlw" base_Element="_QItBwKl3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_QIto0Kl3EeeGj7EgTaCWlw" base_Element="_QItBw6l3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_QIuP4Kl3EeeGj7EgTaCWlw" base_Element="_QIto0al3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_Nx0NcKl4EeeGj7EgTaCWlw" genericsValue="TDispMsg" base_Element="_QHJikKl3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_Nx1bkKl4EeeGj7EgTaCWlw" genericsValue="TDispMsg" base_Element="_Nx00gKl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_Nx2psKl4EeeGj7EgTaCWlw" genericsValue="TDispMsg" base_Element="_QHL-0al3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_Nx67IKl4EeeGj7EgTaCWlw" genericsValue="TDispMsg" base_Element="_Nx330Kl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_Nx9XYKl4EeeGj7EgTaCWlw" genericsValue="TDispMsg" base_Element="_Nx8wUKl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_NyC28Kl4EeeGj7EgTaCWlw" genericsValue="TDispMsg" base_Element="_NyBo0Kl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_NyJkoKl4EeeGj7EgTaCWlw" genericsValue="TDispMsg" base_Element="_NyIWgKl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_NyMA4Kl4EeeGj7EgTaCWlw" genericsValue="TDispMsg" base_Element="_NyKywKl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_NyOdIKl4EeeGj7EgTaCWlw" genericsValue="TDispMsg" base_Element="_NyNPAKl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_NyQSUKl4EeeGj7EgTaCWlw" genericsValue="TDispMsg" base_Element="_NyPrQKl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_NySHgKl4EeeGj7EgTaCWlw" genericsValue="TDispMsg" base_Element="_NyRgcKl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_NyUjwKl4EeeGj7EgTaCWlw" genericsValue="TDispMsg" base_Element="_NyT8sKl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_NyXAAKl4EeeGj7EgTaCWlw" genericsValue="TDispMsg" base_Element="_NyWY8Kl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_NybRcKl4EeeGj7EgTaCWlw" genericsValue="TDispMsg" base_Element="_NyaqYKl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_NydtsKl4EeeGj7EgTaCWlw" genericsValue="TDispMsg" base_Element="_NydGoKl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_Nyfi4Kl4EeeGj7EgTaCWlw" genericsValue="TDispMsg" base_Element="_Nye70Kl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_Nyh_IKl4EeeGj7EgTaCWlw" genericsValue="TDispMsg" base_Element="_NyhYEKl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_NyjNQKl4EeeGj7EgTaCWlw" genericsValue="TDispMsg" base_Element="_NyimMKl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_NylCcKl4EeeGj7EgTaCWlw" genericsValue="TDispMsg" base_Element="_NykbYKl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_NynesKl4EeeGj7EgTaCWlw" genericsValue="TDispMsg" base_Element="_Nym3oKl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_Nyp68Kl4EeeGj7EgTaCWlw" genericsValue="TDispMsg" base_Element="_NypT4Kl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_NysXMKl4EeeGj7EgTaCWlw" genericsValue="TDispMsg" base_Element="_QHKJoal3EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_NyuzcKl4EeeGj7EgTaCWlw" genericsValue="TDispMsg" base_Element="_NyuMYKl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_N06kwKl4EeeGj7EgTaCWlw" genericsValue="TDispMsg" base_Element="_N059sql4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_N07y4Kl4EeeGj7EgTaCWlw" base_Element="_N07L0Kl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_N07y4ql4EeeGj7EgTaCWlw" base_Element="_N07y4al4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_N1CgkKl4EeeGj7EgTaCWlw" genericsValue="TDispMsg" base_Element="_N1B5gKl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_N1DHo6l4EeeGj7EgTaCWlw" base_Element="_N1DHoKl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_N1DusKl4EeeGj7EgTaCWlw" genericsValue="TDispMsg" base_Element="_N1DHoql4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Annotations xmi:id="_N1EVwKl4EeeGj7EgTaCWlw" base_Element="_N1DHoKl4EeeGj7EgTaCWlw">
    <annotations xmi:id="_N1EVwal4EeeGj7EgTaCWlw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_N1E80Kl4EeeGj7EgTaCWlw" base_Element="_N1EVwql4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Annotations xmi:id="_N1E80al4EeeGj7EgTaCWlw" base_Element="_N1EVwql4EeeGj7EgTaCWlw">
    <annotations xmi:id="_N1E80ql4EeeGj7EgTaCWlw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_N1GK8Kl4EeeGj7EgTaCWlw" base_Element="_N1Fj4Kl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_N1GK8ql4EeeGj7EgTaCWlw" base_Element="_N1GK8al4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_N1InMKl4EeeGj7EgTaCWlw" base_Element="_N1GK86l4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_N1JOQKl4EeeGj7EgTaCWlw" base_Element="_N1InMal4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_N1JOQql4EeeGj7EgTaCWlw" genericsValue="TDispMsg" base_Element="_N1JOQal4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_N1J1U6l4EeeGj7EgTaCWlw" base_Element="_N1J1UKl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_N1KcYKl4EeeGj7EgTaCWlw" genericsValue="TDispMsg" base_Element="_N1J1Uql4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Annotations xmi:id="_N1LDcKl4EeeGj7EgTaCWlw" base_Element="_N1J1UKl4EeeGj7EgTaCWlw">
    <annotations xmi:id="_N1LDcal4EeeGj7EgTaCWlw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_N1LDdKl4EeeGj7EgTaCWlw" base_Element="_N1LDcql4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Annotations xmi:id="_N1LqgKl4EeeGj7EgTaCWlw" base_Element="_N1LDcql4EeeGj7EgTaCWlw">
    <annotations xmi:id="_N1Lqgal4EeeGj7EgTaCWlw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_N1MRkKl4EeeGj7EgTaCWlw" base_Element="_N1Lqgql4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_N1Ot0Kl4EeeGj7EgTaCWlw" genericsValue="IBallCmd" base_Element="_N1OGwKl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_N1PU46l4EeeGj7EgTaCWlw" base_Element="_N1PU4Kl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_N1P78Kl4EeeGj7EgTaCWlw" genericsValue="IBallCmd" base_Element="_N1PU4ql4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Annotations xmi:id="_N1P78al4EeeGj7EgTaCWlw" base_Element="_N1PU4Kl4EeeGj7EgTaCWlw">
    <annotations xmi:id="_N1P78ql4EeeGj7EgTaCWlw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_N1RxIKl4EeeGj7EgTaCWlw" genericsValue="IBallCmd" base_Element="_N1RKFKl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_N1RxI6l4EeeGj7EgTaCWlw" base_Element="_N1RxIal4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Annotations xmi:id="_N1SYMKl4EeeGj7EgTaCWlw" base_Element="_N1RxIal4EeeGj7EgTaCWlw">
    <annotations xmi:id="_N1SYMal4EeeGj7EgTaCWlw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_N1TmUKl4EeeGj7EgTaCWlw" genericsValue="TDispMsg" base_Element="_N1S_QKl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_N1UNY6l4EeeGj7EgTaCWlw" base_Element="_N1UNYKl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_N1U0cKl4EeeGj7EgTaCWlw" genericsValue="TDispMsg" base_Element="_N1UNYql4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Annotations xmi:id="_N1U0cal4EeeGj7EgTaCWlw" base_Element="_N1UNYKl4EeeGj7EgTaCWlw">
    <annotations xmi:id="_N1U0cql4EeeGj7EgTaCWlw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_N1WCkKl4EeeGj7EgTaCWlw" base_Element="_N1U0c6l4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Annotations xmi:id="_N1WCkal4EeeGj7EgTaCWlw" base_Element="_N1U0c6l4EeeGj7EgTaCWlw">
    <annotations xmi:id="_N1WCkql4EeeGj7EgTaCWlw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_N1XQsKl4EeeGj7EgTaCWlw" genericsValue="TDispMsg" base_Element="_N1WpoKl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_N1Ye06l4EeeGj7EgTaCWlw" base_Element="_N1Ye0Kl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_N1Zs8Kl4EeeGj7EgTaCWlw" genericsValue="TDispMsg" base_Element="_N1Ye0ql4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Annotations xmi:id="_N1Zs8al4EeeGj7EgTaCWlw" base_Element="_N1Ye0Kl4EeeGj7EgTaCWlw">
    <annotations xmi:id="_N1Zs8ql4EeeGj7EgTaCWlw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_N1aUAKl4EeeGj7EgTaCWlw" base_Element="_N1Zs86l4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Annotations xmi:id="_N1aUAal4EeeGj7EgTaCWlw" base_Element="_N1Zs86l4EeeGj7EgTaCWlw">
    <annotations xmi:id="_N1aUAql4EeeGj7EgTaCWlw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_N1biIKl4EeeGj7EgTaCWlw" genericsValue="TDispMsg" base_Element="_N1a7EKl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_N1cJMKl4EeeGj7EgTaCWlw" base_Element="_N1biIal4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_N1cJMal4EeeGj7EgTaCWlw" genericsValue="TDispMsg" base_Element="_N1biI6l4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Annotations xmi:id="_N1cwQKl4EeeGj7EgTaCWlw" base_Element="_N1biIal4EeeGj7EgTaCWlw">
    <annotations xmi:id="_N1cwQal4EeeGj7EgTaCWlw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_N1dXUKl4EeeGj7EgTaCWlw" base_Element="_N1cwQql4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Annotations xmi:id="_N1dXUal4EeeGj7EgTaCWlw" base_Element="_N1cwQql4EeeGj7EgTaCWlw">
    <annotations xmi:id="_N1dXUql4EeeGj7EgTaCWlw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_N1d-YKl4EeeGj7EgTaCWlw" genericsValue="IBallCmd" base_Element="_N1dXU6l4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_N1elc6l4EeeGj7EgTaCWlw" base_Element="_N1elcKl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_N1fMgKl4EeeGj7EgTaCWlw" genericsValue="IBallCmd" base_Element="_N1elcql4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Annotations xmi:id="_N1fMgal4EeeGj7EgTaCWlw" base_Element="_N1elcKl4EeeGj7EgTaCWlw">
    <annotations xmi:id="_N1fMgql4EeeGj7EgTaCWlw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_N1fzkql4EeeGj7EgTaCWlw" base_Element="_N1fzkKl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Annotations xmi:id="_N1fzk6l4EeeGj7EgTaCWlw" base_Element="_N1fzkKl4EeeGj7EgTaCWlw">
    <annotations xmi:id="_N1fzlKl4EeeGj7EgTaCWlw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_N1hBsKl4EeeGj7EgTaCWlw" genericsValue="TDispMsg" base_Element="_N1gaoKl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_N1howKl4EeeGj7EgTaCWlw" base_Element="_N1hBsal4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_N1howal4EeeGj7EgTaCWlw" genericsValue="TDispMsg" base_Element="_N1hBs6l4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Annotations xmi:id="_N1iP0Kl4EeeGj7EgTaCWlw" base_Element="_N1hBsal4EeeGj7EgTaCWlw">
    <annotations xmi:id="_N1iP0al4EeeGj7EgTaCWlw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_N1i24Kl4EeeGj7EgTaCWlw" base_Element="_N1iP0ql4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Annotations xmi:id="_N1i24al4EeeGj7EgTaCWlw" base_Element="_N1iP0ql4EeeGj7EgTaCWlw">
    <annotations xmi:id="_N1i24ql4EeeGj7EgTaCWlw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_N1jd8Kl4EeeGj7EgTaCWlw" genericsValue="IBallCmd" base_Element="_N1i246l4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_N1kFA6l4EeeGj7EgTaCWlw" base_Element="_N1kFAKl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_N1ksEKl4EeeGj7EgTaCWlw" genericsValue="IBallCmd" base_Element="_N1kFAql4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Annotations xmi:id="_N1ksEal4EeeGj7EgTaCWlw" base_Element="_N1kFAKl4EeeGj7EgTaCWlw">
    <annotations xmi:id="_N1ksEql4EeeGj7EgTaCWlw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_N1lTIKl4EeeGj7EgTaCWlw" base_Element="_N1ksE6l4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Annotations xmi:id="_N1lTIal4EeeGj7EgTaCWlw" base_Element="_N1ksE6l4EeeGj7EgTaCWlw">
    <annotations xmi:id="_N1lTIql4EeeGj7EgTaCWlw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_N1l6Mal4EeeGj7EgTaCWlw" genericsValue="TDispMsg" base_Element="_N1l6MKl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_N1mhQ6l4EeeGj7EgTaCWlw" base_Element="_N1mhQKl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_N1nIUKl4EeeGj7EgTaCWlw" genericsValue="TDispMsg" base_Element="_N1mhQql4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Annotations xmi:id="_N1nIUal4EeeGj7EgTaCWlw" base_Element="_N1mhQKl4EeeGj7EgTaCWlw">
    <annotations xmi:id="_N1nIUql4EeeGj7EgTaCWlw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_N1nvYKl4EeeGj7EgTaCWlw" base_Element="_N1nIU6l4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Annotations xmi:id="_N1nvYal4EeeGj7EgTaCWlw" base_Element="_N1nIU6l4EeeGj7EgTaCWlw">
    <annotations xmi:id="_N1nvYql4EeeGj7EgTaCWlw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_N1oWdKl4EeeGj7EgTaCWlw" base_Element="_N1oWcKl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_N1o9gKl4EeeGj7EgTaCWlw" genericsValue="IBallCmd" base_Element="_N1oWc6l4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Annotations xmi:id="_N1o9gal4EeeGj7EgTaCWlw" base_Element="_N1oWcKl4EeeGj7EgTaCWlw">
    <annotations xmi:id="_N1o9gql4EeeGj7EgTaCWlw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_N1qysKl4EeeGj7EgTaCWlw" genericsValue="TDispMsg" base_Element="_N1qLoKl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_N1rZw6l4EeeGj7EgTaCWlw" genericsValue="TDispMsg" base_Element="_N1qysql4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_N1sA0Kl4EeeGj7EgTaCWlw" genericsValue="TDispMsg" base_Element="_N1qys6l4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_N1sn4Kl4EeeGj7EgTaCWlw" base_Element="_N1sA0al4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_N1tO8Kl4EeeGj7EgTaCWlw" genericsValue="TDispMsg" base_Element="_N1sA06l4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Annotations xmi:id="_N1tO8al4EeeGj7EgTaCWlw" base_Element="_N1sA0al4EeeGj7EgTaCWlw">
    <annotations xmi:id="_N1tO8ql4EeeGj7EgTaCWlw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_N1t2AKl4EeeGj7EgTaCWlw" base_Element="_N1tO86l4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Annotations xmi:id="_N1t2Aal4EeeGj7EgTaCWlw" base_Element="_N1tO86l4EeeGj7EgTaCWlw">
    <annotations xmi:id="_N1t2Aql4EeeGj7EgTaCWlw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_N1udEal4EeeGj7EgTaCWlw" genericsValue="IBallCmd" base_Element="_N1udEKl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_N1vEI6l4EeeGj7EgTaCWlw" base_Element="_N1vEIKl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_N1vrMKl4EeeGj7EgTaCWlw" genericsValue="IBallCmd" base_Element="_N1vEIql4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Annotations xmi:id="_N1vrMal4EeeGj7EgTaCWlw" base_Element="_N1vEIKl4EeeGj7EgTaCWlw">
    <annotations xmi:id="_N1vrMql4EeeGj7EgTaCWlw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_N1wSQql4EeeGj7EgTaCWlw" base_Element="_N1wSQKl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Annotations xmi:id="_N1w5UKl4EeeGj7EgTaCWlw" base_Element="_N1wSQKl4EeeGj7EgTaCWlw">
    <annotations xmi:id="_N1w5Ual4EeeGj7EgTaCWlw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_N1xgYKl4EeeGj7EgTaCWlw" genericsValue="IBallCmd" base_Element="_N1w5Uql4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_N1yHcKl4EeeGj7EgTaCWlw" genericsValue="IBallCmd" base_Element="_N1xgY6l4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_N1zVkKl4EeeGj7EgTaCWlw" genericsValue="IBallCmd" base_Element="_N1yugKl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_N1zVlKl4EeeGj7EgTaCWlw" base_Element="_N1zVkal4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_N1z8oKl4EeeGj7EgTaCWlw" genericsValue="IBallCmd" base_Element="_N1zVk6l4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Annotations xmi:id="_N10jsKl4EeeGj7EgTaCWlw" base_Element="_N1zVkal4EeeGj7EgTaCWlw">
    <annotations xmi:id="_N10jsal4EeeGj7EgTaCWlw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_N10jtKl4EeeGj7EgTaCWlw" base_Element="_N10jsql4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Annotations xmi:id="_N11KwKl4EeeGj7EgTaCWlw" base_Element="_N10jsql4EeeGj7EgTaCWlw">
    <annotations xmi:id="_N11Kwal4EeeGj7EgTaCWlw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_N11x0Kl4EeeGj7EgTaCWlw" genericsValue="IBallCmd" base_Element="_N11Kwql4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_N12Y4Kl4EeeGj7EgTaCWlw" base_Element="_N11x0al4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_N12_8Kl4EeeGj7EgTaCWlw" genericsValue="IBallCmd" base_Element="_N11x06l4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Annotations xmi:id="_N12_8al4EeeGj7EgTaCWlw" base_Element="_N11x0al4EeeGj7EgTaCWlw">
    <annotations xmi:id="_N12_8ql4EeeGj7EgTaCWlw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_N13nAKl4EeeGj7EgTaCWlw" base_Element="_N12_86l4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Annotations xmi:id="_N13nAal4EeeGj7EgTaCWlw" base_Element="_N12_86l4EeeGj7EgTaCWlw">
    <annotations xmi:id="_N13nAql4EeeGj7EgTaCWlw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_N141IKl4EeeGj7EgTaCWlw" genericsValue="TDispMsg" base_Element="_N14OEKl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_N15cMKl4EeeGj7EgTaCWlw" base_Element="_N141Ial4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_N15cMal4EeeGj7EgTaCWlw" genericsValue="TDispMsg" base_Element="_N141I6l4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Annotations xmi:id="_N16DQKl4EeeGj7EgTaCWlw" base_Element="_N141Ial4EeeGj7EgTaCWlw">
    <annotations xmi:id="_N16DQal4EeeGj7EgTaCWlw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_N16DRKl4EeeGj7EgTaCWlw" base_Element="_N16DQql4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Annotations xmi:id="_N16qUKl4EeeGj7EgTaCWlw" base_Element="_N16DQql4EeeGj7EgTaCWlw">
    <annotations xmi:id="_N16qUal4EeeGj7EgTaCWlw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_N17RYal4EeeGj7EgTaCWlw" genericsValue="TDispMsg" base_Element="_N17RYKl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_N18fgKl4EeeGj7EgTaCWlw" base_Element="_N174cKl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_N18fgal4EeeGj7EgTaCWlw" genericsValue="TDispMsg" base_Element="_N174cql4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Annotations xmi:id="_N19GkKl4EeeGj7EgTaCWlw" base_Element="_N174cKl4EeeGj7EgTaCWlw">
    <annotations xmi:id="_N19Gkal4EeeGj7EgTaCWlw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_N19toKl4EeeGj7EgTaCWlw" base_Element="_N19Gkql4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Annotations xmi:id="_N19toal4EeeGj7EgTaCWlw" base_Element="_N19Gkql4EeeGj7EgTaCWlw">
    <annotations xmi:id="_N19toql4EeeGj7EgTaCWlw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_N1-7wKl4EeeGj7EgTaCWlw" genericsValue="TDispMsg" base_Element="_N19to6l4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_N1_i0al4EeeGj7EgTaCWlw" base_Element="_N1-7wal4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_N2AJ4Kl4EeeGj7EgTaCWlw" genericsValue="TDispMsg" base_Element="_N1_i0Kl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_N2Aw8Kl4EeeGj7EgTaCWlw" base_Element="_N2AJ4al4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Annotations xmi:id="_N2Aw8al4EeeGj7EgTaCWlw" base_Element="_N2AJ4al4EeeGj7EgTaCWlw">
    <annotations xmi:id="_N2Aw8ql4EeeGj7EgTaCWlw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_N2BYAal4EeeGj7EgTaCWlw" genericsValue="TDispMsg" base_Element="_N2BYAKl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_N2B_E6l4EeeGj7EgTaCWlw" base_Element="_N2B_EKl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_N2CmIKl4EeeGj7EgTaCWlw" genericsValue="TDispMsg" base_Element="_N2B_Eql4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Annotations xmi:id="_N2CmIal4EeeGj7EgTaCWlw" base_Element="_N2B_EKl4EeeGj7EgTaCWlw">
    <annotations xmi:id="_N2CmIql4EeeGj7EgTaCWlw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_N2FpcKl4EeeGj7EgTaCWlw" genericsValue="TDispMsg" base_Element="_N2DNMKl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_N2GQgql4EeeGj7EgTaCWlw" base_Element="_N2GQgKl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Annotations xmi:id="_N2G3kKl4EeeGj7EgTaCWlw" base_Element="_N2GQgKl4EeeGj7EgTaCWlw">
    <annotations xmi:id="_N2G3kal4EeeGj7EgTaCWlw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_N2HeoKl4EeeGj7EgTaCWlw" genericsValue="TDispMsg" base_Element="_N2G3kql4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_N2IFsql4EeeGj7EgTaCWlw" base_Element="_N2Heoal4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_N2IswKl4EeeGj7EgTaCWlw" genericsValue="TDispMsg" base_Element="_N2IFsal4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Annotations xmi:id="_N2Iswal4EeeGj7EgTaCWlw" base_Element="_N2Heoal4EeeGj7EgTaCWlw">
    <annotations xmi:id="_N2Iswql4EeeGj7EgTaCWlw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_N2JT0Kl4EeeGj7EgTaCWlw" base_Element="_N2Isw6l4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Annotations xmi:id="_N2JT0al4EeeGj7EgTaCWlw" base_Element="_N2Isw6l4EeeGj7EgTaCWlw">
    <annotations xmi:id="_N2JT0ql4EeeGj7EgTaCWlw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_N2WIIKl4EeeGj7EgTaCWlw" base_Element="_N2VhEKl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_N2WII6l4EeeGj7EgTaCWlw" base_Element="_N2WIIal4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_N2XWQKl4EeeGj7EgTaCWlw" base_Element="_N2WvMKl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_N2XWQ6l4EeeGj7EgTaCWlw" base_Element="_N2XWQal4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_N2X9Uql4EeeGj7EgTaCWlw" base_Element="_N2X9UKl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_N2YkYal4EeeGj7EgTaCWlw" base_Property="_N2YkYKl4EeeGj7EgTaCWlw" siblings="_N2pqJal4EeeGj7EgTaCWlw" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_N2ZLcKl4EeeGj7EgTaCWlw" base_Element="_N2YkYKl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_N2Zygal4EeeGj7EgTaCWlw" genericsValue="TDispMsg" base_Element="_N2ZygKl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_N2aZkKl4EeeGj7EgTaCWlw" base_Property="_N2ZygKl4EeeGj7EgTaCWlw" siblings="_N2qRMql4EeeGj7EgTaCWlw" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_N2aZkal4EeeGj7EgTaCWlw" base_Element="_N2ZygKl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_N2bAoKl4EeeGj7EgTaCWlw" base_Element="_N2aZkql4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_N2bnsKl4EeeGj7EgTaCWlw" base_Element="_N2bAoal4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_N2bns6l4EeeGj7EgTaCWlw" base_Element="_N2bnsal4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_N2cOwal4EeeGj7EgTaCWlw" base_Element="_N2bntKl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_N2cOxKl4EeeGj7EgTaCWlw" base_Element="_N2cOwql4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_N2eD8Kl4EeeGj7EgTaCWlw" base_Element="_N2c10Kl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Generics xmi:id="_N2erAKl4EeeGj7EgTaCWlw" genericsValue="TDispMsg" base_Element="_N2eD8al4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_N2erAql4EeeGj7EgTaCWlw" base_Element="_N2eD8al4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_N2fSEql4EeeGj7EgTaCWlw" base_Element="_N2fSEKl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_N2f5Ial4EeeGj7EgTaCWlw" base_Element="_N2fSE6l4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_N2pqJql4EeeGj7EgTaCWlw" base_Property="_N2pqJal4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_N2qRMKl4EeeGj7EgTaCWlw" base_Element="_N2pqJal4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_N2q4QKl4EeeGj7EgTaCWlw" base_Property="_N2qRMql4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_N2q4Qal4EeeGj7EgTaCWlw" base_Element="_N2qRMql4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_N2yNAKl4EeeGj7EgTaCWlw" base_Element="_N2xl8Kl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_N2y0Eql4EeeGj7EgTaCWlw" base_Element="_N2y0EKl4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_N2zbIKl4EeeGj7EgTaCWlw" base_Element="_N2y0E6l4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_N20CMKl4EeeGj7EgTaCWlw" base_Element="_N2zbIal4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_N20pQKl4EeeGj7EgTaCWlw" base_Element="_N20CMal4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_N21QUKl4EeeGj7EgTaCWlw" base_Element="_N20pQal4EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_hFN7UKl5EeeGj7EgTaCWlw" base_Element="_hFNUQ6l5EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hFOiYql5EeeGj7EgTaCWlw" base_Element="_hFOiYKl5EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Annotations xmi:id="_hFPJcKl5EeeGj7EgTaCWlw" base_Element="_hFOiYKl5EeeGj7EgTaCWlw">
    <annotations xmi:id="_hFPJcal5EeeGj7EgTaCWlw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hFQ-oal5EeeGj7EgTaCWlw" base_Element="_hFQXkal5EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hFRlsql5EeeGj7EgTaCWlw" base_Element="_hFQ-oql5EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Annotations xmi:id="_hFRls6l5EeeGj7EgTaCWlw" base_Element="_hFQ-oql5EeeGj7EgTaCWlw">
    <annotations xmi:id="_hFRltKl5EeeGj7EgTaCWlw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hFSz0ql5EeeGj7EgTaCWlw" base_Element="_hFSz0Kl5EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Annotations xmi:id="_hFTa4Kl5EeeGj7EgTaCWlw" base_Element="_hFSz0Kl5EeeGj7EgTaCWlw">
    <annotations xmi:id="_hFTa4al5EeeGj7EgTaCWlw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_hFUpAKl5EeeGj7EgTaCWlw" base_Element="_hFUB8Kl5EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_hFUpAql5EeeGj7EgTaCWlw" base_Element="_hFUpAal5EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_hFVQEal5EeeGj7EgTaCWlw" base_Element="_hFVQEKl5EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_hFV3IKl5EeeGj7EgTaCWlw" base_Element="_hFVQEql5EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_hFV3Iql5EeeGj7EgTaCWlw" base_Element="_hFV3Ial5EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hFWeMql5EeeGj7EgTaCWlw" base_Element="_hFWeMKl5EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Annotations xmi:id="_hFXFQKl5EeeGj7EgTaCWlw" base_Element="_hFWeMKl5EeeGj7EgTaCWlw">
    <annotations xmi:id="_hFXFQal5EeeGj7EgTaCWlw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hFY6cKl5EeeGj7EgTaCWlw" base_Element="_hFYTYKl5EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Annotations xmi:id="_hFY6cal5EeeGj7EgTaCWlw" base_Element="_hFYTYKl5EeeGj7EgTaCWlw">
    <annotations xmi:id="_hFY6cql5EeeGj7EgTaCWlw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_hFaIkal5EeeGj7EgTaCWlw" base_Element="_hFaIkKl5EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hFavoql5EeeGj7EgTaCWlw" base_Element="_hFavoKl5EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Annotations xmi:id="_hFavo6l5EeeGj7EgTaCWlw" base_Element="_hFavoKl5EeeGj7EgTaCWlw">
    <annotations xmi:id="_hFavpKl5EeeGj7EgTaCWlw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_hFck0al5EeeGj7EgTaCWlw" base_Element="_hFck0Kl5EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hFdL46l5EeeGj7EgTaCWlw" base_Element="_hFdL4Kl5EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Annotations xmi:id="_hFdL5Kl5EeeGj7EgTaCWlw" base_Element="_hFdL4Kl5EeeGj7EgTaCWlw">
    <annotations xmi:id="_hFdL5al5EeeGj7EgTaCWlw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hFdy8ql5EeeGj7EgTaCWlw" base_Element="_hFdy8Kl5EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Annotations xmi:id="_hFdy86l5EeeGj7EgTaCWlw" base_Element="_hFdy8Kl5EeeGj7EgTaCWlw">
    <annotations xmi:id="_hFdy9Kl5EeeGj7EgTaCWlw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hFg2QKl5EeeGj7EgTaCWlw" base_Element="_hFgPMql5EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Annotations xmi:id="_hFg2Qal5EeeGj7EgTaCWlw" base_Element="_hFgPMql5EeeGj7EgTaCWlw">
    <annotations xmi:id="_hFhdUKl5EeeGj7EgTaCWlw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hFiEYql5EeeGj7EgTaCWlw" base_Element="_hFhdUql5EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Annotations xmi:id="_hFiEY6l5EeeGj7EgTaCWlw" base_Element="_hFhdUql5EeeGj7EgTaCWlw">
    <annotations xmi:id="_hFiEZKl5EeeGj7EgTaCWlw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hFirc6l5EeeGj7EgTaCWlw" base_Element="_hFircKl5EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Annotations xmi:id="_hFjSgKl5EeeGj7EgTaCWlw" base_Element="_hFircKl5EeeGj7EgTaCWlw">
    <annotations xmi:id="_hFjSgal5EeeGj7EgTaCWlw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hFmV0Kl5EeeGj7EgTaCWlw" base_Element="_hFluxql5EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Annotations xmi:id="_hFmV0al5EeeGj7EgTaCWlw" base_Element="_hFluxql5EeeGj7EgTaCWlw">
    <annotations xmi:id="_hFmV0ql5EeeGj7EgTaCWlw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hFnj9al5EeeGj7EgTaCWlw" base_Element="_hFnj8Kl5EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Array xmi:id="_hFoLAal5EeeGj7EgTaCWlw" base_Element="_hFnj8ql5EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hFoyEal5EeeGj7EgTaCWlw" base_Element="_hFoLAql5EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Annotations xmi:id="_hFoyEql5EeeGj7EgTaCWlw" base_Element="_hFoLAql5EeeGj7EgTaCWlw">
    <annotations xmi:id="_hFoyE6l5EeeGj7EgTaCWlw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hFqANKl5EeeGj7EgTaCWlw" base_Element="_hFqAMKl5EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Annotations xmi:id="_hFqANal5EeeGj7EgTaCWlw" base_Element="_hFqAMKl5EeeGj7EgTaCWlw">
    <annotations xmi:id="_hFqANql5EeeGj7EgTaCWlw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hFrOUKl5EeeGj7EgTaCWlw" base_Element="_hFqnQKl5EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Array xmi:id="_hFrOU6l5EeeGj7EgTaCWlw" base_Element="_hFqnQql5EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hFr1YKl5EeeGj7EgTaCWlw" base_Element="_hFrOVKl5EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Annotations xmi:id="_hFr1Yal5EeeGj7EgTaCWlw" base_Element="_hFrOVKl5EeeGj7EgTaCWlw">
    <annotations xmi:id="_hFr1Yql5EeeGj7EgTaCWlw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hFtDhql5EeeGj7EgTaCWlw" base_Element="_hFtDgql5EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Annotations xmi:id="_hFtqkKl5EeeGj7EgTaCWlw" base_Element="_hFtDgql5EeeGj7EgTaCWlw">
    <annotations xmi:id="_hFtqkal5EeeGj7EgTaCWlw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hFuRoKl5EeeGj7EgTaCWlw" base_Element="_hFtqkql5EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Annotations xmi:id="_hFuRoal5EeeGj7EgTaCWlw" base_Element="_hFtqkql5EeeGj7EgTaCWlw">
    <annotations xmi:id="_hFuRoql5EeeGj7EgTaCWlw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hFwG0al5EeeGj7EgTaCWlw" base_Element="_hFvfwql5EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Array xmi:id="_hFwG1Kl5EeeGj7EgTaCWlw" base_Element="_hFwG0ql5EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hFwt4Kl5EeeGj7EgTaCWlw" base_Element="_hFwG0ql5EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hFwt4ql5EeeGj7EgTaCWlw" base_Element="_hFwt4al5EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hFwt5al5EeeGj7EgTaCWlw" base_Element="_hFwt46l5EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hFxU8ql5EeeGj7EgTaCWlw" base_Element="_hFxU8Kl5EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hFxU9Kl5EeeGj7EgTaCWlw" base_Element="_hFxU86l5EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hFxU96l5EeeGj7EgTaCWlw" base_Element="_hFxU9al5EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Array xmi:id="_hFx8Aql5EeeGj7EgTaCWlw" dimensions="1" base_Element="_hFx8AKl5EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hFx8A6l5EeeGj7EgTaCWlw" base_Element="_hFx8AKl5EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hFyjEal5EeeGj7EgTaCWlw" base_Element="_hFyjEKl5EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_hF7tAKl5EeeGj7EgTaCWlw" base_Element="_hF7F8Kl5EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_hF8UEKl5EeeGj7EgTaCWlw" base_Element="_hF7tAal5EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_hF87IKl5EeeGj7EgTaCWlw" base_Element="_hF8UEal5EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_hF87I6l5EeeGj7EgTaCWlw" base_Element="_hF87Ial5EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_hF9iMql5EeeGj7EgTaCWlw" base_Element="_hF9iMKl5EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_hF-JQKl5EeeGj7EgTaCWlw" base_Element="_hF9iM6l5EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_hF-wUKl5EeeGj7EgTaCWlw" base_Element="_hF-JQal5EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_hF-wU6l5EeeGj7EgTaCWlw" base_Element="_hF-wUal5EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Patch xmi:id="_irVkkKl5EeeGj7EgTaCWlw" base_Element="_hDy_AKl5EeeGj7EgTaCWlw" patchText="@@ -803,16 +803,285 @@&#xA; st) %7B%0A%09%7D&#xA;+;%0A%0A%09/**%0A%09 * @param g The Graphics context that will be paint on%0A%09 * @param host The host Ball that the required information will be pulled from.%0A%09 * @param at The AffineTransform for this paint strategy to use.%0A%09 * Paints the host onto the given Graphics context.%0A%09 */%0A&#xA; %09public &#xA;" conflicting="false"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xMfg4ql5EeeGj7EgTaCWlw" base_Element="_xMe50Kl5EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Annotations xmi:id="_xMgH8Kl5EeeGj7EgTaCWlw" base_Element="_xMe50Kl5EeeGj7EgTaCWlw">
    <annotations xmi:id="_xMgH8al5EeeGj7EgTaCWlw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_xMxNsKl5EeeGj7EgTaCWlw" base_Element="_xMwmoql5EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xMyb0Kl5EeeGj7EgTaCWlw" base_Element="_xMx0wal5EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Array xmi:id="_xMyb06l5EeeGj7EgTaCWlw" dimensions="1" base_Element="_xMx0xKl5EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xM0RAal5EeeGj7EgTaCWlw" base_Element="_xMzp8Kl5EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xM04EKl5EeeGj7EgTaCWlw" base_Element="_xM0RAql5EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xM04Eql5EeeGj7EgTaCWlw" base_Element="_xM04Eal5EeeGj7EgTaCWlw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xM1fIKl5EeeGj7EgTaCWlw" base_Element="_xM04E6l5EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_xM4icKl5EeeGj7EgTaCWlw" base_Element="_xM37YKl5EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_xM5JgKl5EeeGj7EgTaCWlw" base_Element="_xM4ical5EeeGj7EgTaCWlw"/>
  <UMLLabProfile:Reference xmi:id="_xM5Jg6l5EeeGj7EgTaCWlw" base_Element="_xM5Jgal5EeeGj7EgTaCWlw"/>
</xmi:XMI>
