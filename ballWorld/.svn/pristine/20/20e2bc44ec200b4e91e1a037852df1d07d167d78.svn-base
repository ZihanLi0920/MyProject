package model.strategy;

import model.IBallCmd;
import model.IUpdateStrategy;
import model.balls.Ball;
import util.*;

/**
 * The HitMysteryStrategy will cause a ball to change its color and radius to 
 * random values when it hits another ball.
 */

public class HitMysteryStrategy implements IUpdateStrategy {
	
	/**
	 * The updateState method will cause the attribute changing to take place 
	 * when the ball comes into contact with another.
	 */

	@Override
	public void updateState(Ball context, Dispatcher dispatcher) {
		
		dispatcher.notifyAll(new IBallCmd() {

			@Override
			public void apply(Ball other, Dispatcher disp) {

				if (context != other) {
					
					if ((context.getRadius() + other.getRadius()) > context.getLocation()
							.distance(other.getLocation())) {
						context.setColor(Randomizer.Singleton.randomColor());
						context.setRadius(Randomizer.Singleton.randomInt(10, 40));
						
					}
				}
			}

		});

	}
	
	/**
	 * The init method is not used in this class.
	 */
	
	@Override
	public void init(Ball context) {
		
		//

	}

}
